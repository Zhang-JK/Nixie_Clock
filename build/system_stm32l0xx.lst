ARM GAS  /tmp/cctPwODw.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"system_stm32l0xx.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.SystemInit,"ax",%progbits
  16              		.align	1
  17              		.global	SystemInit
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	SystemInit:
  25              	.LFB34:
  26              		.file 1 "Core/Src/system_stm32l0xx.c"
   1:Core/Src/system_stm32l0xx.c **** /**
   2:Core/Src/system_stm32l0xx.c ****   ******************************************************************************
   3:Core/Src/system_stm32l0xx.c ****   * @file    system_stm32l0xx.c
   4:Core/Src/system_stm32l0xx.c ****   * @author  MCD Application Team
   5:Core/Src/system_stm32l0xx.c ****   * @brief   CMSIS Cortex-M0+ Device Peripheral Access Layer System Source File.
   6:Core/Src/system_stm32l0xx.c ****   *
   7:Core/Src/system_stm32l0xx.c ****   *   This file provides two functions and one global variable to be called from
   8:Core/Src/system_stm32l0xx.c ****   *   user application:
   9:Core/Src/system_stm32l0xx.c ****   *      - SystemInit(): This function is called at startup just after reset and
  10:Core/Src/system_stm32l0xx.c ****   *                      before branch to main program. This call is made inside
  11:Core/Src/system_stm32l0xx.c ****   *                      the "startup_stm32l0xx.s" file.
  12:Core/Src/system_stm32l0xx.c ****   *
  13:Core/Src/system_stm32l0xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  14:Core/Src/system_stm32l0xx.c ****   *                                  by the user application to setup the SysTick
  15:Core/Src/system_stm32l0xx.c ****   *                                  timer or configure other parameters.
  16:Core/Src/system_stm32l0xx.c ****   *
  17:Core/Src/system_stm32l0xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  18:Core/Src/system_stm32l0xx.c ****   *                                 be called whenever the core clock is changed
  19:Core/Src/system_stm32l0xx.c ****   *                                 during program execution.
  20:Core/Src/system_stm32l0xx.c ****   *
  21:Core/Src/system_stm32l0xx.c ****   *
  22:Core/Src/system_stm32l0xx.c ****   ******************************************************************************
  23:Core/Src/system_stm32l0xx.c ****   * @attention
  24:Core/Src/system_stm32l0xx.c ****   *
  25:Core/Src/system_stm32l0xx.c ****   * <h2><center>&copy; Copyright(c) 2016 STMicroelectronics.
  26:Core/Src/system_stm32l0xx.c ****   * All rights reserved.</center></h2>
  27:Core/Src/system_stm32l0xx.c ****   *
  28:Core/Src/system_stm32l0xx.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  29:Core/Src/system_stm32l0xx.c ****   * the "License"; You may not use this file except in compliance with the
  30:Core/Src/system_stm32l0xx.c ****   * License. You may obtain a copy of the License at:
  31:Core/Src/system_stm32l0xx.c ****   *                        opensource.org/licenses/BSD-3-Clause
  32:Core/Src/system_stm32l0xx.c ****   *
ARM GAS  /tmp/cctPwODw.s 			page 2


  33:Core/Src/system_stm32l0xx.c ****   ******************************************************************************
  34:Core/Src/system_stm32l0xx.c ****   */
  35:Core/Src/system_stm32l0xx.c **** 
  36:Core/Src/system_stm32l0xx.c **** /** @addtogroup CMSIS
  37:Core/Src/system_stm32l0xx.c ****   * @{
  38:Core/Src/system_stm32l0xx.c ****   */
  39:Core/Src/system_stm32l0xx.c **** 
  40:Core/Src/system_stm32l0xx.c **** /** @addtogroup stm32l0xx_system
  41:Core/Src/system_stm32l0xx.c ****   * @{
  42:Core/Src/system_stm32l0xx.c ****   */
  43:Core/Src/system_stm32l0xx.c **** 
  44:Core/Src/system_stm32l0xx.c **** /** @addtogroup STM32L0xx_System_Private_Includes
  45:Core/Src/system_stm32l0xx.c ****   * @{
  46:Core/Src/system_stm32l0xx.c ****   */
  47:Core/Src/system_stm32l0xx.c **** 
  48:Core/Src/system_stm32l0xx.c **** #include "stm32l0xx.h"
  49:Core/Src/system_stm32l0xx.c **** 
  50:Core/Src/system_stm32l0xx.c **** #if !defined  (HSE_VALUE)
  51:Core/Src/system_stm32l0xx.c ****   #define HSE_VALUE    ((uint32_t)8000000U) /*!< Value of the External oscillator in Hz */
  52:Core/Src/system_stm32l0xx.c **** #endif /* HSE_VALUE */
  53:Core/Src/system_stm32l0xx.c **** 
  54:Core/Src/system_stm32l0xx.c **** #if !defined  (MSI_VALUE)
  55:Core/Src/system_stm32l0xx.c ****   #define MSI_VALUE    ((uint32_t)2097152U) /*!< Value of the Internal oscillator in Hz*/
  56:Core/Src/system_stm32l0xx.c **** #endif /* MSI_VALUE */
  57:Core/Src/system_stm32l0xx.c **** 
  58:Core/Src/system_stm32l0xx.c **** #if !defined  (HSI_VALUE)
  59:Core/Src/system_stm32l0xx.c ****   #define HSI_VALUE    ((uint32_t)16000000U) /*!< Value of the Internal oscillator in Hz*/
  60:Core/Src/system_stm32l0xx.c **** #endif /* HSI_VALUE */
  61:Core/Src/system_stm32l0xx.c **** 
  62:Core/Src/system_stm32l0xx.c **** 
  63:Core/Src/system_stm32l0xx.c **** /**
  64:Core/Src/system_stm32l0xx.c ****   * @}
  65:Core/Src/system_stm32l0xx.c ****   */
  66:Core/Src/system_stm32l0xx.c **** 
  67:Core/Src/system_stm32l0xx.c **** /** @addtogroup STM32L0xx_System_Private_TypesDefinitions
  68:Core/Src/system_stm32l0xx.c ****   * @{
  69:Core/Src/system_stm32l0xx.c ****   */
  70:Core/Src/system_stm32l0xx.c **** 
  71:Core/Src/system_stm32l0xx.c **** /**
  72:Core/Src/system_stm32l0xx.c ****   * @}
  73:Core/Src/system_stm32l0xx.c ****   */
  74:Core/Src/system_stm32l0xx.c **** 
  75:Core/Src/system_stm32l0xx.c **** /** @addtogroup STM32L0xx_System_Private_Defines
  76:Core/Src/system_stm32l0xx.c ****   * @{
  77:Core/Src/system_stm32l0xx.c ****   */
  78:Core/Src/system_stm32l0xx.c **** /************************* Miscellaneous Configuration ************************/
  79:Core/Src/system_stm32l0xx.c **** 
  80:Core/Src/system_stm32l0xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table in
  81:Core/Src/system_stm32l0xx.c ****      Internal SRAM. */
  82:Core/Src/system_stm32l0xx.c **** /* #define VECT_TAB_SRAM */
  83:Core/Src/system_stm32l0xx.c **** #define VECT_TAB_OFFSET  0x00U /*!< Vector Table base offset field.
  84:Core/Src/system_stm32l0xx.c ****                                    This value must be a multiple of 0x100. */
  85:Core/Src/system_stm32l0xx.c **** /******************************************************************************/
  86:Core/Src/system_stm32l0xx.c **** /**
  87:Core/Src/system_stm32l0xx.c ****   * @}
  88:Core/Src/system_stm32l0xx.c ****   */
  89:Core/Src/system_stm32l0xx.c **** 
ARM GAS  /tmp/cctPwODw.s 			page 3


  90:Core/Src/system_stm32l0xx.c **** /** @addtogroup STM32L0xx_System_Private_Macros
  91:Core/Src/system_stm32l0xx.c ****   * @{
  92:Core/Src/system_stm32l0xx.c ****   */
  93:Core/Src/system_stm32l0xx.c **** 
  94:Core/Src/system_stm32l0xx.c **** /**
  95:Core/Src/system_stm32l0xx.c ****   * @}
  96:Core/Src/system_stm32l0xx.c ****   */
  97:Core/Src/system_stm32l0xx.c **** 
  98:Core/Src/system_stm32l0xx.c **** /** @addtogroup STM32L0xx_System_Private_Variables
  99:Core/Src/system_stm32l0xx.c ****   * @{
 100:Core/Src/system_stm32l0xx.c ****   */
 101:Core/Src/system_stm32l0xx.c ****   /* This variable is updated in three ways:
 102:Core/Src/system_stm32l0xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 103:Core/Src/system_stm32l0xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 104:Core/Src/system_stm32l0xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency
 105:Core/Src/system_stm32l0xx.c ****          Note: If you use this function to configure the system clock; then there
 106:Core/Src/system_stm32l0xx.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
 107:Core/Src/system_stm32l0xx.c ****                variable is updated automatically.
 108:Core/Src/system_stm32l0xx.c ****   */
 109:Core/Src/system_stm32l0xx.c ****   uint32_t SystemCoreClock = 2097152U; /* 32.768 kHz * 2^6 */
 110:Core/Src/system_stm32l0xx.c ****   const uint8_t AHBPrescTable[16] = {0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 1U, 2U, 3U, 4U, 6U, 7U, 8U, 9U
 111:Core/Src/system_stm32l0xx.c ****   const uint8_t APBPrescTable[8] = {0U, 0U, 0U, 0U, 1U, 2U, 3U, 4U};
 112:Core/Src/system_stm32l0xx.c ****   const uint8_t PLLMulTable[9] = {3U, 4U, 6U, 8U, 12U, 16U, 24U, 32U, 48U};
 113:Core/Src/system_stm32l0xx.c **** 
 114:Core/Src/system_stm32l0xx.c **** /**
 115:Core/Src/system_stm32l0xx.c ****   * @}
 116:Core/Src/system_stm32l0xx.c ****   */
 117:Core/Src/system_stm32l0xx.c **** 
 118:Core/Src/system_stm32l0xx.c **** /** @addtogroup STM32L0xx_System_Private_FunctionPrototypes
 119:Core/Src/system_stm32l0xx.c ****   * @{
 120:Core/Src/system_stm32l0xx.c ****   */
 121:Core/Src/system_stm32l0xx.c **** 
 122:Core/Src/system_stm32l0xx.c **** /**
 123:Core/Src/system_stm32l0xx.c ****   * @}
 124:Core/Src/system_stm32l0xx.c ****   */
 125:Core/Src/system_stm32l0xx.c **** 
 126:Core/Src/system_stm32l0xx.c **** /** @addtogroup STM32L0xx_System_Private_Functions
 127:Core/Src/system_stm32l0xx.c ****   * @{
 128:Core/Src/system_stm32l0xx.c ****   */
 129:Core/Src/system_stm32l0xx.c **** 
 130:Core/Src/system_stm32l0xx.c **** /**
 131:Core/Src/system_stm32l0xx.c ****   * @brief  Setup the microcontroller system.
 132:Core/Src/system_stm32l0xx.c ****   * @param  None
 133:Core/Src/system_stm32l0xx.c ****   * @retval None
 134:Core/Src/system_stm32l0xx.c ****   */
 135:Core/Src/system_stm32l0xx.c **** void SystemInit (void)
 136:Core/Src/system_stm32l0xx.c **** {
  27              		.loc 1 136 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 137:Core/Src/system_stm32l0xx.c **** /*!< Set MSION bit */
 138:Core/Src/system_stm32l0xx.c ****   RCC->CR |= (uint32_t)0x00000100U;
  32              		.loc 1 138 3 view .LVU1
  33              		.loc 1 138 11 is_stmt 0 view .LVU2
  34 0000 104B     		ldr	r3, .L2
ARM GAS  /tmp/cctPwODw.s 			page 4


  35 0002 1968     		ldr	r1, [r3]
  36 0004 8022     		movs	r2, #128
  37 0006 5200     		lsls	r2, r2, #1
  38 0008 0A43     		orrs	r2, r1
  39 000a 1A60     		str	r2, [r3]
 139:Core/Src/system_stm32l0xx.c **** 
 140:Core/Src/system_stm32l0xx.c ****   /*!< Reset SW[1:0], HPRE[3:0], PPRE1[2:0], PPRE2[2:0], MCOSEL[2:0] and MCOPRE[2:0] bits */
 141:Core/Src/system_stm32l0xx.c ****   RCC->CFGR &= (uint32_t) 0x88FF400CU;
  40              		.loc 1 141 3 is_stmt 1 view .LVU3
  41              		.loc 1 141 13 is_stmt 0 view .LVU4
  42 000c DA68     		ldr	r2, [r3, #12]
  43 000e 0E49     		ldr	r1, .L2+4
  44 0010 0A40     		ands	r2, r1
  45 0012 DA60     		str	r2, [r3, #12]
 142:Core/Src/system_stm32l0xx.c **** 
 143:Core/Src/system_stm32l0xx.c ****   /*!< Reset HSION, HSIDIVEN, HSEON, CSSON and PLLON bits */
 144:Core/Src/system_stm32l0xx.c ****   RCC->CR &= (uint32_t)0xFEF6FFF6U;
  46              		.loc 1 144 3 is_stmt 1 view .LVU5
  47              		.loc 1 144 11 is_stmt 0 view .LVU6
  48 0014 1A68     		ldr	r2, [r3]
  49 0016 0D49     		ldr	r1, .L2+8
  50 0018 0A40     		ands	r2, r1
  51 001a 1A60     		str	r2, [r3]
 145:Core/Src/system_stm32l0xx.c **** 
 146:Core/Src/system_stm32l0xx.c ****   /*!< Reset HSI48ON  bit */
 147:Core/Src/system_stm32l0xx.c ****   RCC->CRRCR &= (uint32_t)0xFFFFFFFEU;
  52              		.loc 1 147 3 is_stmt 1 view .LVU7
  53              		.loc 1 147 14 is_stmt 0 view .LVU8
  54 001c 9A68     		ldr	r2, [r3, #8]
  55 001e 0121     		movs	r1, #1
  56 0020 8A43     		bics	r2, r1
  57 0022 9A60     		str	r2, [r3, #8]
 148:Core/Src/system_stm32l0xx.c **** 
 149:Core/Src/system_stm32l0xx.c ****   /*!< Reset HSEBYP bit */
 150:Core/Src/system_stm32l0xx.c ****   RCC->CR &= (uint32_t)0xFFFBFFFFU;
  58              		.loc 1 150 3 is_stmt 1 view .LVU9
  59              		.loc 1 150 11 is_stmt 0 view .LVU10
  60 0024 1A68     		ldr	r2, [r3]
  61 0026 0A49     		ldr	r1, .L2+12
  62 0028 0A40     		ands	r2, r1
  63 002a 1A60     		str	r2, [r3]
 151:Core/Src/system_stm32l0xx.c **** 
 152:Core/Src/system_stm32l0xx.c ****   /*!< Reset PLLSRC, PLLMUL[3:0] and PLLDIV[1:0] bits */
 153:Core/Src/system_stm32l0xx.c ****   RCC->CFGR &= (uint32_t)0xFF02FFFFU;
  64              		.loc 1 153 3 is_stmt 1 view .LVU11
  65              		.loc 1 153 13 is_stmt 0 view .LVU12
  66 002c DA68     		ldr	r2, [r3, #12]
  67 002e 0949     		ldr	r1, .L2+16
  68 0030 0A40     		ands	r2, r1
  69 0032 DA60     		str	r2, [r3, #12]
 154:Core/Src/system_stm32l0xx.c **** 
 155:Core/Src/system_stm32l0xx.c ****   /*!< Disable all interrupts */
 156:Core/Src/system_stm32l0xx.c ****   RCC->CIER = 0x00000000U;
  70              		.loc 1 156 3 is_stmt 1 view .LVU13
  71              		.loc 1 156 13 is_stmt 0 view .LVU14
  72 0034 0022     		movs	r2, #0
  73 0036 1A61     		str	r2, [r3, #16]
ARM GAS  /tmp/cctPwODw.s 			page 5


 157:Core/Src/system_stm32l0xx.c **** 
 158:Core/Src/system_stm32l0xx.c ****   /* Configure the Vector Table location add offset address ------------------*/
 159:Core/Src/system_stm32l0xx.c **** #ifdef VECT_TAB_SRAM
 160:Core/Src/system_stm32l0xx.c ****   SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
 161:Core/Src/system_stm32l0xx.c **** #else
 162:Core/Src/system_stm32l0xx.c ****   SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
  74              		.loc 1 162 3 is_stmt 1 view .LVU15
  75              		.loc 1 162 13 is_stmt 0 view .LVU16
  76 0038 074B     		ldr	r3, .L2+20
  77 003a 8022     		movs	r2, #128
  78 003c 1205     		lsls	r2, r2, #20
  79 003e 9A60     		str	r2, [r3, #8]
 163:Core/Src/system_stm32l0xx.c **** #endif
 164:Core/Src/system_stm32l0xx.c **** }
  80              		.loc 1 164 1 view .LVU17
  81              		@ sp needed
  82 0040 7047     		bx	lr
  83              	.L3:
  84 0042 C046     		.align	2
  85              	.L2:
  86 0044 00100240 		.word	1073876992
  87 0048 0C40FF88 		.word	-1996537844
  88 004c F6FFF6FE 		.word	-17367050
  89 0050 FFFFFBFF 		.word	-262145
  90 0054 FFFF02FF 		.word	-16580609
  91 0058 00ED00E0 		.word	-536810240
  92              		.cfi_endproc
  93              	.LFE34:
  95              		.global	__aeabi_uidiv
  96              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
  97              		.align	1
  98              		.global	SystemCoreClockUpdate
  99              		.syntax unified
 100              		.code	16
 101              		.thumb_func
 102              		.fpu softvfp
 104              	SystemCoreClockUpdate:
 105              	.LFB35:
 165:Core/Src/system_stm32l0xx.c **** 
 166:Core/Src/system_stm32l0xx.c **** /**
 167:Core/Src/system_stm32l0xx.c ****   * @brief  Update SystemCoreClock according to Clock Register Values
 168:Core/Src/system_stm32l0xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 169:Core/Src/system_stm32l0xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 170:Core/Src/system_stm32l0xx.c ****   *         other parameters.
 171:Core/Src/system_stm32l0xx.c ****   *
 172:Core/Src/system_stm32l0xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 173:Core/Src/system_stm32l0xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 174:Core/Src/system_stm32l0xx.c ****   *         based on this variable will be incorrect.
 175:Core/Src/system_stm32l0xx.c ****   *
 176:Core/Src/system_stm32l0xx.c ****   * @note   - The system frequency computed by this function is not the real
 177:Core/Src/system_stm32l0xx.c ****   *           frequency in the chip. It is calculated based on the predefined
 178:Core/Src/system_stm32l0xx.c ****   *           constant and the selected clock source:
 179:Core/Src/system_stm32l0xx.c ****   *
 180:Core/Src/system_stm32l0xx.c ****   *           - If SYSCLK source is MSI, SystemCoreClock will contain the MSI
 181:Core/Src/system_stm32l0xx.c ****   *             value as defined by the MSI range.
 182:Core/Src/system_stm32l0xx.c ****   *
 183:Core/Src/system_stm32l0xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
ARM GAS  /tmp/cctPwODw.s 			page 6


 184:Core/Src/system_stm32l0xx.c ****   *
 185:Core/Src/system_stm32l0xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 186:Core/Src/system_stm32l0xx.c ****   *
 187:Core/Src/system_stm32l0xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**)
 188:Core/Src/system_stm32l0xx.c ****   *             or HSI_VALUE(*) multiplied/divided by the PLL factors.
 189:Core/Src/system_stm32l0xx.c ****   *
 190:Core/Src/system_stm32l0xx.c ****   *         (*) HSI_VALUE is a constant defined in stm32l0xx_hal.h file (default value
 191:Core/Src/system_stm32l0xx.c ****   *             16 MHz) but the real value may vary depending on the variations
 192:Core/Src/system_stm32l0xx.c ****   *             in voltage and temperature.
 193:Core/Src/system_stm32l0xx.c ****   *
 194:Core/Src/system_stm32l0xx.c ****   *         (**) HSE_VALUE is a constant defined in stm32l0xx_hal.h file (default value
 195:Core/Src/system_stm32l0xx.c ****   *              8 MHz), user has to ensure that HSE_VALUE is same as the real
 196:Core/Src/system_stm32l0xx.c ****   *              frequency of the crystal used. Otherwise, this function may
 197:Core/Src/system_stm32l0xx.c ****   *              have wrong result.
 198:Core/Src/system_stm32l0xx.c ****   *
 199:Core/Src/system_stm32l0xx.c ****   *         - The result of this function could be not correct when using fractional
 200:Core/Src/system_stm32l0xx.c ****   *           value for HSE crystal.
 201:Core/Src/system_stm32l0xx.c ****   * @param  None
 202:Core/Src/system_stm32l0xx.c ****   * @retval None
 203:Core/Src/system_stm32l0xx.c ****   */
 204:Core/Src/system_stm32l0xx.c **** void SystemCoreClockUpdate (void)
 205:Core/Src/system_stm32l0xx.c **** {
 106              		.loc 1 205 1 is_stmt 1 view -0
 107              		.cfi_startproc
 108              		@ args = 0, pretend = 0, frame = 0
 109              		@ frame_needed = 0, uses_anonymous_args = 0
 110 0000 10B5     		push	{r4, lr}
 111              	.LCFI0:
 112              		.cfi_def_cfa_offset 8
 113              		.cfi_offset 4, -8
 114              		.cfi_offset 14, -4
 206:Core/Src/system_stm32l0xx.c ****   uint32_t tmp = 0U, pllmul = 0U, plldiv = 0U, pllsource = 0U, msirange = 0U;
 115              		.loc 1 206 3 view .LVU19
 116              	.LVL0:
 207:Core/Src/system_stm32l0xx.c **** 
 208:Core/Src/system_stm32l0xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 209:Core/Src/system_stm32l0xx.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
 117              		.loc 1 209 3 view .LVU20
 118              		.loc 1 209 12 is_stmt 0 view .LVU21
 119 0002 344B     		ldr	r3, .L13
 120 0004 DA68     		ldr	r2, [r3, #12]
 121              		.loc 1 209 7 view .LVU22
 122 0006 0C23     		movs	r3, #12
 123 0008 1340     		ands	r3, r2
 124              	.LVL1:
 210:Core/Src/system_stm32l0xx.c **** 
 211:Core/Src/system_stm32l0xx.c ****   switch (tmp)
 125              		.loc 1 211 3 is_stmt 1 view .LVU23
 126 000a 042B     		cmp	r3, #4
 127 000c 39D0     		beq	.L5
 128 000e 082B     		cmp	r3, #8
 129 0010 43D0     		beq	.L6
 130 0012 002B     		cmp	r3, #0
 131 0014 1DD0     		beq	.L12
 212:Core/Src/system_stm32l0xx.c ****   {
 213:Core/Src/system_stm32l0xx.c ****     case 0x00U:  /* MSI used as system clock */
 214:Core/Src/system_stm32l0xx.c ****       msirange = (RCC->ICSCR & RCC_ICSCR_MSIRANGE) >> RCC_ICSCR_MSIRANGE_Pos;
ARM GAS  /tmp/cctPwODw.s 			page 7


 215:Core/Src/system_stm32l0xx.c ****       SystemCoreClock = (32768U * (1U << (msirange + 1U)));
 216:Core/Src/system_stm32l0xx.c ****       break;
 217:Core/Src/system_stm32l0xx.c ****     case 0x04U:  /* HSI used as system clock */
 218:Core/Src/system_stm32l0xx.c ****       if ((RCC->CR & RCC_CR_HSIDIVF) != 0U)
 219:Core/Src/system_stm32l0xx.c ****       {
 220:Core/Src/system_stm32l0xx.c ****         SystemCoreClock = HSI_VALUE / 4U;
 221:Core/Src/system_stm32l0xx.c ****       }
 222:Core/Src/system_stm32l0xx.c ****       else
 223:Core/Src/system_stm32l0xx.c ****       {
 224:Core/Src/system_stm32l0xx.c ****         SystemCoreClock = HSI_VALUE;
 225:Core/Src/system_stm32l0xx.c ****       }
 226:Core/Src/system_stm32l0xx.c ****       break;
 227:Core/Src/system_stm32l0xx.c ****     case 0x08U:  /* HSE used as system clock */
 228:Core/Src/system_stm32l0xx.c ****       SystemCoreClock = HSE_VALUE;
 229:Core/Src/system_stm32l0xx.c ****       break;
 230:Core/Src/system_stm32l0xx.c ****     default:  /* PLL used as system clock */
 231:Core/Src/system_stm32l0xx.c ****       /* Get PLL clock source and multiplication factor ----------------------*/
 232:Core/Src/system_stm32l0xx.c ****       pllmul = RCC->CFGR & RCC_CFGR_PLLMUL;
 132              		.loc 1 232 7 view .LVU24
 133              		.loc 1 232 19 is_stmt 0 view .LVU25
 134 0016 2F4A     		ldr	r2, .L13
 135 0018 D068     		ldr	r0, [r2, #12]
 136              	.LVL2:
 233:Core/Src/system_stm32l0xx.c ****       plldiv = RCC->CFGR & RCC_CFGR_PLLDIV;
 137              		.loc 1 233 7 is_stmt 1 view .LVU26
 138              		.loc 1 233 19 is_stmt 0 view .LVU27
 139 001a D168     		ldr	r1, [r2, #12]
 140              	.LVL3:
 234:Core/Src/system_stm32l0xx.c ****       pllmul = PLLMulTable[(pllmul >> RCC_CFGR_PLLMUL_Pos)];
 141              		.loc 1 234 7 is_stmt 1 view .LVU28
 142              		.loc 1 234 36 is_stmt 0 view .LVU29
 143 001c 800C     		lsrs	r0, r0, #18
 144              	.LVL4:
 145              		.loc 1 234 36 view .LVU30
 146 001e 0F23     		movs	r3, #15
 147              	.LVL5:
 148              		.loc 1 234 36 view .LVU31
 149 0020 0340     		ands	r3, r0
 150              		.loc 1 234 27 view .LVU32
 151 0022 2D48     		ldr	r0, .L13+4
 152 0024 C45C     		ldrb	r4, [r0, r3]
 153              	.LVL6:
 235:Core/Src/system_stm32l0xx.c ****       plldiv = (plldiv >> RCC_CFGR_PLLDIV_Pos) + 1U;
 154              		.loc 1 235 7 is_stmt 1 view .LVU33
 155              		.loc 1 235 24 is_stmt 0 view .LVU34
 156 0026 880D     		lsrs	r0, r1, #22
 157 0028 0321     		movs	r1, #3
 158              	.LVL7:
 159              		.loc 1 235 24 view .LVU35
 160 002a 0140     		ands	r1, r0
 161              		.loc 1 235 14 view .LVU36
 162 002c 0131     		adds	r1, r1, #1
 163              	.LVL8:
 236:Core/Src/system_stm32l0xx.c **** 
 237:Core/Src/system_stm32l0xx.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 164              		.loc 1 237 7 is_stmt 1 view .LVU37
 165              		.loc 1 237 22 is_stmt 0 view .LVU38
ARM GAS  /tmp/cctPwODw.s 			page 8


 166 002e D368     		ldr	r3, [r2, #12]
 167              	.LVL9:
 238:Core/Src/system_stm32l0xx.c **** 
 239:Core/Src/system_stm32l0xx.c ****       if (pllsource == 0x00U)
 168              		.loc 1 239 7 is_stmt 1 view .LVU39
 169              		.loc 1 239 10 is_stmt 0 view .LVU40
 170 0030 DB03     		lsls	r3, r3, #15
 171 0032 42D4     		bmi	.L10
 172              	.LVL10:
 240:Core/Src/system_stm32l0xx.c ****       {
 241:Core/Src/system_stm32l0xx.c ****         /* HSI oscillator clock selected as PLL clock entry */
 242:Core/Src/system_stm32l0xx.c ****         if ((RCC->CR & RCC_CR_HSIDIVF) != 0U)
 173              		.loc 1 242 9 is_stmt 1 view .LVU41
 174              		.loc 1 242 17 is_stmt 0 view .LVU42
 175 0034 1368     		ldr	r3, [r2]
 176              		.loc 1 242 12 view .LVU43
 177 0036 DB06     		lsls	r3, r3, #27
 178 0038 33D5     		bpl	.L11
 243:Core/Src/system_stm32l0xx.c ****         {
 244:Core/Src/system_stm32l0xx.c ****           SystemCoreClock = (((HSI_VALUE / 4U) * pllmul) / plldiv);
 179              		.loc 1 244 11 is_stmt 1 view .LVU44
 180              		.loc 1 244 48 is_stmt 0 view .LVU45
 181 003a 6201     		lsls	r2, r4, #5
 182 003c 121B     		subs	r2, r2, r4
 183 003e 9301     		lsls	r3, r2, #6
 184 0040 9B1A     		subs	r3, r3, r2
 185 0042 DB00     		lsls	r3, r3, #3
 186 0044 1B19     		adds	r3, r3, r4
 187 0046 1802     		lsls	r0, r3, #8
 188              		.loc 1 244 58 view .LVU46
 189 0048 FFF7FEFF 		bl	__aeabi_uidiv
 190              	.LVL11:
 191              		.loc 1 244 27 view .LVU47
 192 004c 234B     		ldr	r3, .L13+8
 193 004e 1860     		str	r0, [r3]
 194 0050 0BE0     		b	.L8
 195              	.LVL12:
 196              	.L12:
 214:Core/Src/system_stm32l0xx.c ****       SystemCoreClock = (32768U * (1U << (msirange + 1U)));
 197              		.loc 1 214 7 is_stmt 1 view .LVU48
 214:Core/Src/system_stm32l0xx.c ****       SystemCoreClock = (32768U * (1U << (msirange + 1U)));
 198              		.loc 1 214 22 is_stmt 0 view .LVU49
 199 0052 204B     		ldr	r3, .L13
 200              	.LVL13:
 214:Core/Src/system_stm32l0xx.c ****       SystemCoreClock = (32768U * (1U << (msirange + 1U)));
 201              		.loc 1 214 22 view .LVU50
 202 0054 5A68     		ldr	r2, [r3, #4]
 203              	.LVL14:
 214:Core/Src/system_stm32l0xx.c ****       SystemCoreClock = (32768U * (1U << (msirange + 1U)));
 204              		.loc 1 214 52 view .LVU51
 205 0056 520B     		lsrs	r2, r2, #13
 214:Core/Src/system_stm32l0xx.c ****       SystemCoreClock = (32768U * (1U << (msirange + 1U)));
 206              		.loc 1 214 16 view .LVU52
 207 0058 0723     		movs	r3, #7
 208 005a 1340     		ands	r3, r2
 209              	.LVL15:
 215:Core/Src/system_stm32l0xx.c ****       break;
ARM GAS  /tmp/cctPwODw.s 			page 9


 210              		.loc 1 215 7 is_stmt 1 view .LVU53
 215:Core/Src/system_stm32l0xx.c ****       break;
 211              		.loc 1 215 52 is_stmt 0 view .LVU54
 212 005c 0133     		adds	r3, r3, #1
 213              	.LVL16:
 215:Core/Src/system_stm32l0xx.c ****       break;
 214              		.loc 1 215 33 view .LVU55
 215 005e 8022     		movs	r2, #128
 216 0060 1202     		lsls	r2, r2, #8
 217 0062 9A40     		lsls	r2, r2, r3
 218 0064 1300     		movs	r3, r2
 219              	.LVL17:
 215:Core/Src/system_stm32l0xx.c ****       break;
 220              		.loc 1 215 23 view .LVU56
 221 0066 1D4A     		ldr	r2, .L13+8
 222 0068 1360     		str	r3, [r2]
 216:Core/Src/system_stm32l0xx.c ****     case 0x04U:  /* HSI used as system clock */
 223              		.loc 1 216 7 is_stmt 1 view .LVU57
 224              	.LVL18:
 225              	.L8:
 245:Core/Src/system_stm32l0xx.c ****         }
 246:Core/Src/system_stm32l0xx.c ****         else
 247:Core/Src/system_stm32l0xx.c ****         {
 248:Core/Src/system_stm32l0xx.c ****           SystemCoreClock = (((HSI_VALUE) * pllmul) / plldiv);
 249:Core/Src/system_stm32l0xx.c ****         }
 250:Core/Src/system_stm32l0xx.c ****       }
 251:Core/Src/system_stm32l0xx.c ****       else
 252:Core/Src/system_stm32l0xx.c ****       {
 253:Core/Src/system_stm32l0xx.c ****         /* HSE selected as PLL clock entry */
 254:Core/Src/system_stm32l0xx.c ****         SystemCoreClock = (((HSE_VALUE) * pllmul) / plldiv);
 255:Core/Src/system_stm32l0xx.c ****       }
 256:Core/Src/system_stm32l0xx.c ****       break;
 257:Core/Src/system_stm32l0xx.c ****   }
 258:Core/Src/system_stm32l0xx.c ****   /* Compute HCLK clock frequency --------------------------------------------*/
 259:Core/Src/system_stm32l0xx.c ****   /* Get HCLK prescaler */
 260:Core/Src/system_stm32l0xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos)];
 226              		.loc 1 260 3 view .LVU58
 227              		.loc 1 260 28 is_stmt 0 view .LVU59
 228 006a 1A4B     		ldr	r3, .L13
 229 006c DA68     		ldr	r2, [r3, #12]
 230              		.loc 1 260 52 view .LVU60
 231 006e 1209     		lsrs	r2, r2, #4
 232 0070 0F23     		movs	r3, #15
 233 0072 1340     		ands	r3, r2
 234              		.loc 1 260 22 view .LVU61
 235 0074 1A4A     		ldr	r2, .L13+12
 236 0076 D35C     		ldrb	r3, [r2, r3]
 237              	.LVL19:
 261:Core/Src/system_stm32l0xx.c ****   /* HCLK clock frequency */
 262:Core/Src/system_stm32l0xx.c ****   SystemCoreClock >>= tmp;
 238              		.loc 1 262 3 is_stmt 1 view .LVU62
 239              		.loc 1 262 19 is_stmt 0 view .LVU63
 240 0078 184A     		ldr	r2, .L13+8
 241 007a 1168     		ldr	r1, [r2]
 242 007c D940     		lsrs	r1, r1, r3
 243 007e 1160     		str	r1, [r2]
 263:Core/Src/system_stm32l0xx.c **** }
ARM GAS  /tmp/cctPwODw.s 			page 10


 244              		.loc 1 263 1 view .LVU64
 245              		@ sp needed
 246 0080 10BD     		pop	{r4, pc}
 247              	.LVL20:
 248              	.L5:
 218:Core/Src/system_stm32l0xx.c ****       {
 249              		.loc 1 218 7 is_stmt 1 view .LVU65
 218:Core/Src/system_stm32l0xx.c ****       {
 250              		.loc 1 218 15 is_stmt 0 view .LVU66
 251 0082 144B     		ldr	r3, .L13
 252              	.LVL21:
 218:Core/Src/system_stm32l0xx.c ****       {
 253              		.loc 1 218 15 view .LVU67
 254 0084 1B68     		ldr	r3, [r3]
 218:Core/Src/system_stm32l0xx.c ****       {
 255              		.loc 1 218 10 view .LVU68
 256 0086 DB06     		lsls	r3, r3, #27
 257 0088 03D5     		bpl	.L9
 220:Core/Src/system_stm32l0xx.c ****       }
 258              		.loc 1 220 9 is_stmt 1 view .LVU69
 220:Core/Src/system_stm32l0xx.c ****       }
 259              		.loc 1 220 25 is_stmt 0 view .LVU70
 260 008a 144B     		ldr	r3, .L13+8
 261 008c 154A     		ldr	r2, .L13+16
 262              	.LVL22:
 220:Core/Src/system_stm32l0xx.c ****       }
 263              		.loc 1 220 25 view .LVU71
 264 008e 1A60     		str	r2, [r3]
 265 0090 EBE7     		b	.L8
 266              	.LVL23:
 267              	.L9:
 224:Core/Src/system_stm32l0xx.c ****       }
 268              		.loc 1 224 9 is_stmt 1 view .LVU72
 224:Core/Src/system_stm32l0xx.c ****       }
 269              		.loc 1 224 25 is_stmt 0 view .LVU73
 270 0092 124B     		ldr	r3, .L13+8
 271 0094 144A     		ldr	r2, .L13+20
 272              	.LVL24:
 224:Core/Src/system_stm32l0xx.c ****       }
 273              		.loc 1 224 25 view .LVU74
 274 0096 1A60     		str	r2, [r3]
 275 0098 E7E7     		b	.L8
 276              	.LVL25:
 277              	.L6:
 228:Core/Src/system_stm32l0xx.c ****       break;
 278              		.loc 1 228 7 is_stmt 1 view .LVU75
 228:Core/Src/system_stm32l0xx.c ****       break;
 279              		.loc 1 228 23 is_stmt 0 view .LVU76
 280 009a 104B     		ldr	r3, .L13+8
 281              	.LVL26:
 228:Core/Src/system_stm32l0xx.c ****       break;
 282              		.loc 1 228 23 view .LVU77
 283 009c 134A     		ldr	r2, .L13+24
 284              	.LVL27:
 228:Core/Src/system_stm32l0xx.c ****       break;
 285              		.loc 1 228 23 view .LVU78
 286 009e 1A60     		str	r2, [r3]
ARM GAS  /tmp/cctPwODw.s 			page 11


 229:Core/Src/system_stm32l0xx.c ****     default:  /* PLL used as system clock */
 287              		.loc 1 229 7 is_stmt 1 view .LVU79
 288 00a0 E3E7     		b	.L8
 289              	.LVL28:
 290              	.L11:
 248:Core/Src/system_stm32l0xx.c ****         }
 291              		.loc 1 248 11 view .LVU80
 248:Core/Src/system_stm32l0xx.c ****         }
 292              		.loc 1 248 43 is_stmt 0 view .LVU81
 293 00a2 6201     		lsls	r2, r4, #5
 294 00a4 121B     		subs	r2, r2, r4
 295 00a6 9301     		lsls	r3, r2, #6
 296 00a8 9B1A     		subs	r3, r3, r2
 297 00aa DB00     		lsls	r3, r3, #3
 298 00ac 1B19     		adds	r3, r3, r4
 299 00ae 9802     		lsls	r0, r3, #10
 248:Core/Src/system_stm32l0xx.c ****         }
 300              		.loc 1 248 53 view .LVU82
 301 00b0 FFF7FEFF 		bl	__aeabi_uidiv
 302              	.LVL29:
 248:Core/Src/system_stm32l0xx.c ****         }
 303              		.loc 1 248 27 view .LVU83
 304 00b4 094B     		ldr	r3, .L13+8
 305 00b6 1860     		str	r0, [r3]
 306 00b8 D7E7     		b	.L8
 307              	.LVL30:
 308              	.L10:
 254:Core/Src/system_stm32l0xx.c ****       }
 309              		.loc 1 254 9 is_stmt 1 view .LVU84
 254:Core/Src/system_stm32l0xx.c ****       }
 310              		.loc 1 254 41 is_stmt 0 view .LVU85
 311 00ba 6201     		lsls	r2, r4, #5
 312 00bc 121B     		subs	r2, r2, r4
 313 00be 9301     		lsls	r3, r2, #6
 314 00c0 9B1A     		subs	r3, r3, r2
 315 00c2 DB00     		lsls	r3, r3, #3
 316 00c4 1B19     		adds	r3, r3, r4
 317 00c6 5802     		lsls	r0, r3, #9
 254:Core/Src/system_stm32l0xx.c ****       }
 318              		.loc 1 254 51 view .LVU86
 319 00c8 FFF7FEFF 		bl	__aeabi_uidiv
 320              	.LVL31:
 254:Core/Src/system_stm32l0xx.c ****       }
 321              		.loc 1 254 25 view .LVU87
 322 00cc 034B     		ldr	r3, .L13+8
 323 00ce 1860     		str	r0, [r3]
 324 00d0 CBE7     		b	.L8
 325              	.L14:
 326 00d2 C046     		.align	2
 327              	.L13:
 328 00d4 00100240 		.word	1073876992
 329 00d8 00000000 		.word	.LANCHOR1
 330 00dc 00000000 		.word	.LANCHOR0
 331 00e0 00000000 		.word	.LANCHOR2
 332 00e4 00093D00 		.word	4000000
 333 00e8 0024F400 		.word	16000000
 334 00ec 00127A00 		.word	8000000
ARM GAS  /tmp/cctPwODw.s 			page 12


 335              		.cfi_endproc
 336              	.LFE35:
 338              		.global	PLLMulTable
 339              		.global	APBPrescTable
 340              		.global	AHBPrescTable
 341              		.global	SystemCoreClock
 342              		.section	.data.SystemCoreClock,"aw"
 343              		.align	2
 344              		.set	.LANCHOR0,. + 0
 347              	SystemCoreClock:
 348 0000 00002000 		.word	2097152
 349              		.section	.rodata.AHBPrescTable,"a"
 350              		.align	2
 351              		.set	.LANCHOR2,. + 0
 354              	AHBPrescTable:
 355 0000 00       		.byte	0
 356 0001 00       		.byte	0
 357 0002 00       		.byte	0
 358 0003 00       		.byte	0
 359 0004 00       		.byte	0
 360 0005 00       		.byte	0
 361 0006 00       		.byte	0
 362 0007 00       		.byte	0
 363 0008 01       		.byte	1
 364 0009 02       		.byte	2
 365 000a 03       		.byte	3
 366 000b 04       		.byte	4
 367 000c 06       		.byte	6
 368 000d 07       		.byte	7
 369 000e 08       		.byte	8
 370 000f 09       		.byte	9
 371              		.section	.rodata.APBPrescTable,"a"
 372              		.align	2
 375              	APBPrescTable:
 376 0000 00       		.byte	0
 377 0001 00       		.byte	0
 378 0002 00       		.byte	0
 379 0003 00       		.byte	0
 380 0004 01       		.byte	1
 381 0005 02       		.byte	2
 382 0006 03       		.byte	3
 383 0007 04       		.byte	4
 384              		.section	.rodata.PLLMulTable,"a"
 385              		.align	2
 386              		.set	.LANCHOR1,. + 0
 389              	PLLMulTable:
 390 0000 03       		.byte	3
 391 0001 04       		.byte	4
 392 0002 06       		.byte	6
 393 0003 08       		.byte	8
 394 0004 0C       		.byte	12
 395 0005 10       		.byte	16
 396 0006 18       		.byte	24
 397 0007 20       		.byte	32
 398 0008 30       		.byte	48
 399              		.text
 400              	.Letext0:
ARM GAS  /tmp/cctPwODw.s 			page 13


 401              		.file 2 "/usr/local/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/machine/_default_type
 402              		.file 3 "/usr/local/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/sys/_stdint.h"
 403              		.file 4 "Drivers/CMSIS/Include/core_cm0plus.h"
 404              		.file 5 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/system_stm32l0xx.h"
 405              		.file 6 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l071xx.h"
 406              		.file 7 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal.h"
ARM GAS  /tmp/cctPwODw.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 system_stm32l0xx.c
     /tmp/cctPwODw.s:16     .text.SystemInit:0000000000000000 $t
     /tmp/cctPwODw.s:24     .text.SystemInit:0000000000000000 SystemInit
     /tmp/cctPwODw.s:86     .text.SystemInit:0000000000000044 $d
     /tmp/cctPwODw.s:97     .text.SystemCoreClockUpdate:0000000000000000 $t
     /tmp/cctPwODw.s:104    .text.SystemCoreClockUpdate:0000000000000000 SystemCoreClockUpdate
     /tmp/cctPwODw.s:328    .text.SystemCoreClockUpdate:00000000000000d4 $d
     /tmp/cctPwODw.s:389    .rodata.PLLMulTable:0000000000000000 PLLMulTable
     /tmp/cctPwODw.s:375    .rodata.APBPrescTable:0000000000000000 APBPrescTable
     /tmp/cctPwODw.s:354    .rodata.AHBPrescTable:0000000000000000 AHBPrescTable
     /tmp/cctPwODw.s:347    .data.SystemCoreClock:0000000000000000 SystemCoreClock
     /tmp/cctPwODw.s:343    .data.SystemCoreClock:0000000000000000 $d
     /tmp/cctPwODw.s:350    .rodata.AHBPrescTable:0000000000000000 $d
     /tmp/cctPwODw.s:372    .rodata.APBPrescTable:0000000000000000 $d
     /tmp/cctPwODw.s:385    .rodata.PLLMulTable:0000000000000000 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
