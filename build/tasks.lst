ARM GAS  /tmp/cc8PdMPr.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"tasks.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.prvTaskIsTaskSuspended,"ax",%progbits
  16              		.align	1
  17              		.arch armv6s-m
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	prvTaskIsTaskSuspended:
  24              	.LVL0:
  25              	.LFB10:
  26              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c"
   1:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * FreeRTOS Kernel V10.0.1
   3:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Standard includes. */
  29:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include <stdlib.h>
  30:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include <string.h>
  31:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  32:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
ARM GAS  /tmp/cc8PdMPr.s 			page 2


  33:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** all the API functions to use the MPU wrappers.  That should only be done when
  34:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** task.h is included from an application file. */
  35:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  36:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  37:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* FreeRTOS includes. */
  38:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "FreeRTOS.h"
  39:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "task.h"
  40:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "timers.h"
  41:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "stack_macros.h"
  42:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  43:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  44:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  45:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** header files above, but not in this file, in order to generate the correct
  46:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** privileged Vs unprivileged linkage and placement. */
  47:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  48:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  49:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Set configUSE_STATS_FORMATTING_FUNCTIONS to 2 to include the stats formatting
  50:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** functions but without including stdio.h here. */
  51:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_STATS_FORMATTING_FUNCTIONS == 1 )
  52:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* At the bottom of this file are two optional functions that can be used
  53:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	to generate human readable text from the raw data generated by the
  54:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uxTaskGetSystemState() function.  Note the formatting functions are provided
  55:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for convenience only, and are NOT considered part of the kernel. */
  56:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#include <stdio.h>
  57:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_STATS_FORMATTING_FUNCTIONS == 1 ) */
  58:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_PREEMPTION == 0 )
  60:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If the cooperative scheduler is being used then a yield should not be
  61:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	performed just because a higher priority task has been woken. */
  62:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION()
  63:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else
  64:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
  65:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
  66:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Values that can be assigned to the ucNotifyState member of the TCB. */
  68:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskNOT_WAITING_NOTIFICATION	( ( uint8_t ) 0 )
  69:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskWAITING_NOTIFICATION		( ( uint8_t ) 1 )
  70:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskNOTIFICATION_RECEIVED		( ( uint8_t ) 2 )
  71:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
  73:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The value used to fill the stack of a task when the task is created.  This
  74:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * is used purely for checking the high water mark for tasks.
  75:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
  76:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTACK_FILL_BYTE	( 0xa5U )
  77:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Sometimes the FreeRTOSConfig.h settings only allow a task to be created using
  79:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** dynamically allocated RAM, in which case when any task is deleted it is known
  80:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** that both the task's stack and TCB need to be freed.  Sometimes the
  81:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** FreeRTOSConfig.h settings only allow a task to be created using statically
  82:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** allocated RAM, in which case when any task is deleted it is known that neither
  83:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** the task's stack or TCB should be freed.  Sometimes the FreeRTOSConfig.h
  84:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** settings allow a task to be created using either statically or dynamically
  85:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** allocated RAM, in which case a member of the TCB is used to record whether the
  86:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** stack and/or TCB were allocated statically or dynamically, so when a task is
  87:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** deleted the RAM that was allocated dynamically is freed again and no attempt is
  88:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** made to free the RAM that was allocated statically.
  89:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE is only true if it is possible for a
ARM GAS  /tmp/cc8PdMPr.s 			page 3


  90:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** task to be created using either statically or dynamically allocated RAM.  Note
  91:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** that if portUSING_MPU_WRAPPERS is 1 then a protected task can be created with
  92:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** a statically allocated stack and a dynamically allocated TCB.
  93:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** !!!NOTE!!! If the definition of tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE is
  94:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** changed then the definition of StaticTask_t must also be updated. */
  95:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE	( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( c
  96:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB 		( ( uint8_t ) 0 )
  97:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_ONLY 			( ( uint8_t ) 1 )
  98:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_AND_TCB		( ( uint8_t ) 2 )
  99:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* If any of the following are set then task stacks are filled with a known
 101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** value so the high water mark can be determined.  If none of the following are
 102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** set then don't fill the stack so there is no unnecessary dependency on memset. */
 103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( configCHECK_FOR_STACK_OVERFLOW > 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTas
 104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define tskSET_NEW_STACKS_TO_KNOWN_VALUE	1
 105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else
 106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define tskSET_NEW_STACKS_TO_KNOWN_VALUE	0
 107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Macros used by vListTask to indicate which state a task is in.
 111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskRUNNING_CHAR		( 'X' )
 113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskBLOCKED_CHAR		( 'B' )
 114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskREADY_CHAR		( 'R' )
 115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskDELETED_CHAR		( 'D' )
 116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSUSPENDED_CHAR	( 'S' )
 117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Some kernel aware debuggers require the data the debugger needs access to be
 120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * global, rather than file scope.
 121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #ifdef portREMOVE_STATIC_QUALIFIER
 123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define static
 124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* The name allocated to the Idle task.  This can be overridden by defining
 127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** configIDLE_TASK_NAME in FreeRTOSConfig.h. */
 128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #ifndef configIDLE_TASK_NAME
 129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define configIDLE_TASK_NAME "IDLE"
 130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
 133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 0 then task selection is
 135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	performed in a generic way that is not optimised to any particular
 136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	microcontroller architecture. */
 137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* uxTopReadyPriority holds the priority of the highest priority ready
 139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	state task. */
 140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )														\
 141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																									\
 142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( uxPriority ) > uxTopReadyPriority )														\
 143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{																								\
 144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxTopReadyPriority = ( uxPriority );														\
 145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}																								\
 146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /* taskRECORD_READY_PRIORITY */
ARM GAS  /tmp/cc8PdMPr.s 			page 4


 147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()															\
 151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																									\
 152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTopPriority = uxTopReadyPriority;														\
 153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																										\
 154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Find the highest priority queue that contains ready tasks. */								\
 155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopPriority ] ) ) )							\
 156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{																								\
 157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( uxTopPriority );																\
 158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			--uxTopPriority;																			\
 159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}																								\
 160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																										\
 161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* listGET_OWNER_OF_NEXT_ENTRY indexes through the list, so the tasks of						\
 162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the	same priority get an equal share of the processor time. */									\
 163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );			\
 164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxTopReadyPriority = uxTopPriority;																\
 165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK */
 166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Define away taskRESET_READY_PRIORITY() and portRESET_READY_PRIORITY() as
 170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	they are only required when a port optimised method of task selection is
 171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	being used. */
 172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )
 173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define portRESET_READY_PRIORITY( uxPriority, uxTopReadyPriority )
 174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 1 then task selection is
 178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	performed in a way that is tailored to the particular microcontroller
 179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	architecture being used. */
 180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A port optimised version is provided.  Call the port defined macros. */
 182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )	portRECORD_READY_PRIORITY( uxPriority, uxTopReadyP
 183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()														\
 187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																								\
 188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTopPriority;																		\
 189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																									\
 190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Find the highest priority list that contains ready tasks. */								\
 191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portGET_HIGHEST_PRIORITY( uxTopPriority, uxTopReadyPriority );								\
 192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ uxTopPriority ] ) ) > 0 );		\
 193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );		\
 194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK() */
 195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A port optimised version is provided, call it only if the TCB being reset
 199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	is being referenced from a ready list.  If it is referenced from a delayed
 200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	or suspended list then it won't be in a ready list. */
 201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )														\
 202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																									\
 203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ ( uxPriority ) ] ) ) == ( UBaseType_t ) 0 )	\
ARM GAS  /tmp/cc8PdMPr.s 			page 5


 204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{																								\
 205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portRESET_READY_PRIORITY( ( uxPriority ), ( uxTopReadyPriority ) );							\
 206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}																								\
 207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* pxDelayedTaskList and pxOverflowDelayedTaskList are switched when the tick
 214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** count overflows. */
 215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskSWITCH_DELAYED_LISTS()																	\
 216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {																									\
 217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	List_t *pxTemp;																					\
 218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																									\
 219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The delayed tasks list should be empty when the lists are switched. */						\
 220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( ( listLIST_IS_EMPTY( pxDelayedTaskList ) ) );										\
 221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																									\
 222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTemp = pxDelayedTaskList;																		\
 223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxDelayedTaskList = pxOverflowDelayedTaskList;													\
 224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = pxTemp;																\
 225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xNumOfOverflows++;																				\
 226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvResetNextTaskUnblockTime();																	\
 227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Place the task represented by pxTCB into the appropriate ready list for
 233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the task.  It is inserted at the end of the list.
 234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define prvAddTaskToReadyList( pxTCB )																\
 236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	traceMOVED_TASK_TO_READY_STATE( pxTCB );														\
 237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskRECORD_READY_PRIORITY( ( pxTCB )->uxPriority );												\
 238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInsertEnd( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ), &( ( pxTCB )->xStateListItem ) );
 239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tracePOST_MOVED_TASK_TO_READY_STATE( pxTCB )
 240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Several functions take an TaskHandle_t parameter that can optionally be NULL,
 244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * where NULL is used to indicate that the handle of the currently executing
 245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * task should be used in place of the parameter.  This macro simply checks to
 246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * see if the parameter is NULL and returns a pointer to the appropriate TCB.
 247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define prvGetTCBFromHandle( pxHandle ) ( ( ( pxHandle ) == NULL ) ? ( TCB_t * ) pxCurrentTCB : ( T
 249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* The item value of the event list item is normally used to hold the priority
 251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** of the task to which it belongs (coded to allow it to be held in reverse
 252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** priority order).  However, it is occasionally borrowed for other purposes.  It
 253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** is important its value is not updated due to a task priority change while it is
 254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** being used for another purpose.  The following bit definition is used to inform
 255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** the scheduler that the value should not be changed - in which case it is the
 256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** responsibility of whichever module is using the value to ensure it gets set back
 257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** to its original value when it is released. */
 258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_16_BIT_TICKS == 1 )
 259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x8000U
 260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else
ARM GAS  /tmp/cc8PdMPr.s 			page 6


 261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x80000000UL
 262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Task control block.  A task control block (TCB) is allocated for each task,
 266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * and stores task state information, including a pointer to the task's context
 267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * (the task's run time environment, including register values)
 268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** typedef struct tskTaskControlBlock
 270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	volatile StackType_t	*pxTopOfStack;	/*< Points to the location of the last item placed on the task
 272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xMPU_SETTINGS	xMPUSettings;		/*< The MPU settings are defined as part of the port layer.  THIS MU
 275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	ListItem_t			xStateListItem;	/*< The list that the state list item of a task is reference from den
 278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	ListItem_t			xEventListItem;		/*< Used to reference a task from an event list. */
 279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t			uxPriority;			/*< The priority of the task.  0 is the lowest priority. */
 280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	StackType_t			*pxStack;			/*< Points to the start of the stack. */
 281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	char				pcTaskName[ configMAX_TASK_NAME_LEN ];/*< Descriptive name given to the task when created.
 282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( ( portSTACK_GROWTH > 0 ) || ( configRECORD_STACK_HIGH_ADDRESS == 1 ) )
 284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t		*pxEndOfStack;		/*< Points to the highest valid address for the stack. */
 285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxCriticalNesting;	/*< Holds the critical section nesting depth for ports that do no
 289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxTCBNumber;		/*< Stores a number that increments each time a TCB is created.  It al
 293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxTaskNumber;		/*< Stores a number specifically for use by third party trace code. *
 294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxBasePriority;		/*< The priority last assigned to the task - used by the priority i
 298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxMutexesHeld;
 299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		TaskHookFunction_t pxTaskTag;
 303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS > 0 )
 306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		void			*pvThreadLocalStoragePointers[ configNUM_THREAD_LOCAL_STORAGE_POINTERS ];
 307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configGENERATE_RUN_TIME_STATS == 1 )
 310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t		ulRunTimeCounter;	/*< Stores the amount of time the task has spent in the Running state
 311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate a Newlib reent structure that is specific to this task.
 315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Note Newlib support has been included by popular demand, but is not
 316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		used by the FreeRTOS maintainers themselves.  FreeRTOS is not
 317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		responsible for resulting newlib operation.  User must be familiar with
ARM GAS  /tmp/cc8PdMPr.s 			page 7


 318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		newlib and must provide system-wide implementations of the necessary
 319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		stubs. Be warned that (at the time of writing) the current newlib design
 320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		implements a system-wide malloc() that must be provided with locks. */
 321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		struct	_reent xNewLib_reent;
 322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configUSE_TASK_NOTIFICATIONS == 1 )
 325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		volatile uint32_t ulNotifiedValue;
 326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		volatile uint8_t ucNotifyState;
 327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* See the comments above the definition of
 330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE. */
 331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated for
 332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint8_t	ucStaticallyAllocated; 		/*< Set to pdTRUE if the task is a statically allocated to ensur
 333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
 336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint8_t ucDelayAborted;
 337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** } tskTCB;
 340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* The old tskTCB name is maintained above then typedefed to the new TCB_t name
 342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** below to enable the use of older kernel aware debuggers. */
 343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** typedef tskTCB TCB_t;
 344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*lint -save -e956 A manual analysis and inspection has been used to determine
 346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** which static variables must be declared volatile. */
 347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA TCB_t * volatile pxCurrentTCB = NULL;
 349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Lists for ready and blocked tasks. --------------------*/
 351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t pxReadyTasksLists[ configMAX_PRIORITIES ] = {0};	/*< Prioritised read
 352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList1 = {0};								/*< Delayed tasks. */
 353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList2 = {0};								/*< Delayed tasks (two lists are used
 354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxDelayedTaskList = NULL;					/*< Points to the delayed ta
 355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxOverflowDelayedTaskList = NULL;			/*< Points to the dela
 356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xPendingReadyList = {0};								/*< Tasks that have been readied whil
 357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( INCLUDE_vTaskDelete == 1 )
 359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static List_t xTasksWaitingTermination = {0};					/*< Tasks that have been deleted
 361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static volatile UBaseType_t uxDeletedTasksWaitingCleanUp = ( UBaseType_t ) 0U;
 362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static List_t xSuspendedTaskList = {0};						/*< Tasks that are currently suspende
 368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Other file private variables. --------------------------------*/
 372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxCurrentNumberOfTasks 	= ( UBaseType_t ) 0U;
 373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xTickCount 				= ( TickType_t ) configINITIAL_TICK_COUNT
 374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxTopReadyPriority 		= tskIDLE_PRIORITY;
ARM GAS  /tmp/cc8PdMPr.s 			page 8


 375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xSchedulerRunning 		= pdFALSE;
 376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxPendedTicks 			= ( UBaseType_t ) 0U;
 377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xYieldPending 			= pdFALSE;
 378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xNumOfOverflows 			= ( BaseType_t ) 0;
 379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static UBaseType_t uxTaskNumber 					= ( UBaseType_t ) 0U;
 380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xNextTaskUnblockTime		= ( TickType_t ) 0U; /* Initialise
 381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static TaskHandle_t xIdleTaskHandle					= NULL;			/*< Holds the handle of the idle 
 382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Context switches are held pending while the scheduler is suspended.  Also,
 384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** interrupts must not manipulate the xStateListItem of a TCB, or any of the
 385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** lists the xStateListItem can be referenced from, if the scheduler is suspended.
 386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** If an interrupt needs to unblock a task while the scheduler is suspended then it
 387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** moves the task's event list item into the xPendingReadyList, ready for the
 388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** kernel to move the task from the pending ready list into the real ready list
 389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** when the scheduler is unsuspended.  The pending ready list itself can only be
 390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** accessed from a critical section. */
 391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxSchedulerSuspended	= ( UBaseType_t ) pdFALSE;
 392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configGENERATE_RUN_TIME_STATS == 1 )
 394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTaskSwitchedInTime = 0UL;	/*< Holds the value of a timer/counter
 396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTotalRunTime = 0UL;		/*< Holds the total amount of execution tim
 397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*lint -restore */
 401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Callback function prototypes. --------------------------*/
 405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if(  configCHECK_FOR_STACK_OVERFLOW > 0 )
 406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	extern void vApplicationStackOverflowHook( TaskHandle_t xTask, char *pcTaskName );
 407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TICK_HOOK > 0 )
 410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	extern void vApplicationTickHook( void );
 411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	extern void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxI
 415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* File private functions. --------------------------------*/
 418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /**
 420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility task that simply returns pdTRUE if the task referenced by xTask is
 421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * currently in the Suspended state, or pdFALSE if the task referenced by xTask
 422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * is in any other state.
 423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
 427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
 429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility to ready all the lists used by the scheduler.  This is called
ARM GAS  /tmp/cc8PdMPr.s 			page 9


 432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * automatically upon the creation of the first task.
 433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseTaskLists( void ) PRIVILEGED_FUNCTION;
 435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The idle task, which as all tasks is implemented as a never ending loop.
 438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The idle task is automatically created and added to the ready lists upon
 439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * creation of the first user task.
 440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The portTASK_FUNCTION_PROTO() macro is used to allow port/compiler specific
 442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
 443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
 445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static portTASK_FUNCTION_PROTO( prvIdleTask, pvParameters );
 448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility to free all memory allocated by the scheduler to hold a TCB,
 451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * including the stack pointed to by the TCB.
 452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This does not free memory allocated by the task itself (i.e. memory
 454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * allocated by calls to pvPortMalloc from within the tasks application code).
 455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
 457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB ) PRIVILEGED_FUNCTION;
 459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Used only by the idle task.  This checks to see if anything has been placed
 464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * in the list of tasks waiting to be deleted.  If so the task is cleaned up
 465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * and its TCB deleted.
 466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvCheckTasksWaitingTermination( void ) PRIVILEGED_FUNCTION;
 468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The currently executing task is entering the Blocked state.  Add the task to
 471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * either the current or the overflow delayed task list.
 472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
 474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Fills an TaskStatus_t structure with information on each task that is
 477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * referenced from the pxList list (which may be a ready list, a delayed list,
 478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * a suspended list, etc.).
 479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * THIS FUNCTION IS INTENDED FOR DEBUGGING ONLY, AND SHOULD NOT BE CALLED FROM
 481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * NORMAL APPLICATION CODE.
 482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
 486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc8PdMPr.s 			page 10


 489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Searches pxList for a task with name pcNameToQuery - returning a handle to
 491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the task if it is found, or NULL if the task is not found.
 492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
 494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] ) PRIVI
 496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * When a task is created, the stack of the task is filled with a known value.
 501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This function determines the 'high water mark' of the task stack by
 502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * determining how much of the stack remains at the original preset value.
 503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) )
 505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static uint16_t prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte ) PRIVILEGED_FUNCTION;
 507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Return the amount of time, in ticks, that will pass before the kernel will
 512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * next move a task from the Blocked state to the Running state.
 513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This conditional compilation should use inequality to 0, not equality to 1.
 515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This is to ensure portSUPPRESS_TICKS_AND_SLEEP() can be called when user
 516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * defined low power mode implementations require configUSE_TICKLESS_IDLE to be
 517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * set to a value other than 1.
 518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
 520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void ) PRIVILEGED_FUNCTION;
 522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Set xNextTaskUnblockTime to the time at which the next Blocked state task
 527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * will exit the Blocked state.
 528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvResetNextTaskUnblockTime( void );
 530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
 532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*
 534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	 * Helper function used to pad task names with spaces when printing out
 535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	 * human readable tables of task information.
 536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	 */
 537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName ) PRIVILEGED_FUNCTION;
 538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Called after a Task_t structure has been allocated either statically or
 543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * dynamically to fill in the structure's members.
 544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
ARM GAS  /tmp/cc8PdMPr.s 			page 11


 546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const char * const pcName, 		/*lint !e971 Unqualified char types are allowed for strings a
 547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
 550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TCB_t *pxNewTCB,
 552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const MemoryRegion_t * const xRegions ) PRIVILEGED_FUNCTION;
 553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Called after a new task has been created and initialised to place the task
 556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * under the control of the scheduler.
 557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB ) PRIVILEGED_FUNCTION;
 559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * freertos_tasks_c_additions_init() should only be called if the user definable
 562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is the only macro
 563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * called by the function.
 564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
 566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static void freertos_tasks_c_additions_init( void ) PRIVILEGED_FUNCTION;
 568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskCreateStatic(	TaskFunction_t pxTaskCode,
 576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
 580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									StackType_t * const puxStackBuffer,
 581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									StaticTask_t * const pxTaskBuffer )
 582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
 585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( puxStackBuffer != NULL );
 587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configASSERT_DEFINED == 1 )
 590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Sanity check that the size of the structure used to declare a
 592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			variable of type StaticTask_t equals the size of the real task
 593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			structure. */
 594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			volatile size_t xSize = sizeof( StaticTask_t );
 595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( xSize == sizeof( TCB_t ) );
 596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configASSERT_DEFINED */
 598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( pxTaskBuffer != NULL ) && ( puxStackBuffer != NULL ) )
 601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The memory used for the task's TCB and stack are passed into this
ARM GAS  /tmp/cc8PdMPr.s 			page 12


 603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			function - use them. */
 604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskBuffer; /*lint !e740 Unusual cast is ok as the structures are desig
 605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated f
 608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task was created statically in case the task is later deleted. */
 611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNe
 616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = NULL;
 621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* SUPPORT_STATIC_ALLOCATION */
 627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCreateRestrictedStatic( const TaskParameters_t * const pxTaskDefinition, TaskHandl
 632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer != NULL );
 637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskDefinition->pxTaskBuffer != NULL );
 638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( pxTaskDefinition->puxStackBuffer != NULL ) && ( pxTaskDefinition->pxTaskBuffer != NULL ) )
 640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			not static allocation is being used. */
 644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskDefinition->pxTaskBuffer;
 645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Store the stack location in the TCB. */
 647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task was created statically in case the task is later deleted. */
 653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->pcName,
 659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									( uint32_t ) pxTaskDefinition->usStackDepth,
ARM GAS  /tmp/cc8PdMPr.s 			page 13


 660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->pvParameters,
 661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->uxPriority,
 662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxCreatedTask, pxNewTCB,
 663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->xRegions );
 664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
 667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
 673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCreateRestricted( const TaskParameters_t * const pxTaskDefinition, TaskHandle_t *p
 678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer );
 683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTaskDefinition->puxStackBuffer != NULL )
 685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			not static allocation is being used. */
 689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxNewTCB != NULL )
 692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Store the stack location in the TCB. */
 694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Tasks can be created statically or dynamically, so note
 699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this task had a statically allocated stack in case it is
 700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					later deleted.  The TCB was allocated dynamically. */
 701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_ONLY;
 702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
 704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->pcName,
 707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										( uint32_t ) pxTaskDefinition->usStackDepth,
 708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->pvParameters,
 709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->uxPriority,
 710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxCreatedTask, pxNewTCB,
 711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->xRegions );
 712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddNewTaskToReadyList( pxNewTCB );
 714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
 715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/cc8PdMPr.s 			page 14


 717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
 722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCreate(	TaskFunction_t pxTaskCode,
 727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings and 
 728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							const configSTACK_DEPTH_TYPE usStackDepth,
 729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							void * const pvParameters,
 730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							UBaseType_t uxPriority,
 731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							TaskHandle_t * const pxCreatedTask )
 732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the stack grows down then allocate the stack then the TCB so the stack
 737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		does not grow into the TCB.  Likewise if the stack grows up then allocate
 738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the TCB then the stack. */
 739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( portSTACK_GROWTH > 0 )
 740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends on
 742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the implementation of the port malloc function and whether or not static
 743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			allocation is being used. */
 744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxNewTCB != NULL )
 747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Allocate space for the stack used by the task being created.
 749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				The base of the stack memory stored in the TCB so the task can
 750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				be deleted later if required. */
 751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( Sta
 752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxNewTCB->pxStack == NULL )
 754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Could not allocate the stack.  Delete the allocated TCB. */
 756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vPortFree( pxNewTCB );
 757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxNewTCB = NULL;
 758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else /* portSTACK_GROWTH */
 762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxStack;
 764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the stack used by the task being created. */
 766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) 
 767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxStack != NULL )
 769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Allocate space for the TCB. */
 771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e961 MISRA exception as the cas
 772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxNewTCB != NULL )
ARM GAS  /tmp/cc8PdMPr.s 			page 15


 774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Store the stack location in the TCB. */
 776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxNewTCB->pxStack = pxStack;
 777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
 779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The stack cannot be used as the TCB was not created.  Free
 781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					it again. */
 782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vPortFree( pxStack );
 783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
 786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB = NULL;
 788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* portSTACK_GROWTH */
 791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxNewTCB != NULL )
 793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated f
 795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task was created dynamically in case it is later deleted. */
 798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, p
 803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
 805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
 822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TCB_t *pxNewTCB,
 824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const MemoryRegion_t * const xRegions )
 825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** StackType_t *pxTopOfStack;
 827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t x;
 828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
 830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Should the task be created in privileged mode? */
ARM GAS  /tmp/cc8PdMPr.s 			page 16


 831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		BaseType_t xRunPrivileged;
 832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( uxPriority & portPRIVILEGE_BIT ) != 0U )
 833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xRunPrivileged = pdTRUE;
 835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xRunPrivileged = pdFALSE;
 839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxPriority &= ~portPRIVILEGE_BIT;
 841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS == 1 */
 842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Avoid dependency on memset() if it is not required. */
 844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( tskSET_NEW_STACKS_TO_KNOWN_VALUE == 1 )
 845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Fill the stack with a known value to assist debugging. */
 847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof(
 848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* tskSET_NEW_STACKS_TO_KNOWN_VALUE */
 850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Calculate the top of stack address.  This depends on whether the stack
 852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	grows from high memory to low (as per the 80x86) or vice versa.
 853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portSTACK_GROWTH is used to make the result positive or negative as required
 854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	by the port. */
 855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( portSTACK_GROWTH < 0 )
 856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Check the alignment of the calculated top of stack is correct. */
 861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack & ( portPOINTER_SIZE_TYPE ) portBYTE_ALI
 862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configRECORD_STACK_HIGH_ADDRESS == 1 )
 864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Also record the stack's high address, which may assist
 866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			debugging. */
 867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxEndOfStack = pxTopOfStack;
 868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configRECORD_STACK_HIGH_ADDRESS */
 870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* portSTACK_GROWTH */
 872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = pxNewTCB->pxStack;
 874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Check the alignment of the stack buffer is correct. */
 876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxNewTCB->pxStack & ( portPOINTER_SIZE_TYPE ) portBYT
 877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The other extreme of the stack space is required if stack checking is
 879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		performed. */
 880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxEndOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portSTACK_GROWTH */
 883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Store the task name in the TCB. */
 885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
ARM GAS  /tmp/cc8PdMPr.s 			page 17


 888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Don't copy all configMAX_TASK_NAME_LEN if the string is shorter than
 890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configMAX_TASK_NAME_LEN characters just in case the memory after the
 891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		string is not accessible (extremely unlikely). */
 892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pcName[ x ] == 0x00 )
 893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			break;
 895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
 899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Ensure the name string is terminated in the case that the string length
 903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	was greater or equal to configMAX_TASK_NAME_LEN. */
 904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* This is used as an array index so must ensure it's not too large.  First
 907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	remove the privilege bit if one is present. */
 908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
 911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
 913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxNewTCB->uxPriority = uxPriority;
 918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxBasePriority = uxPriority;
 921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_MUTEXES */
 924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Set the pxNewTCB as a link back from the ListItem_t.  This is so we can get
 929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	back to	the containing TCB from a generic item in a list. */
 930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Event lists are always in priority order. */
 933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( Ti
 934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxCriticalNesting = ( UBaseType_t ) 0U;
 939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portCRITICAL_NESTING_IN_TCB */
 941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxTaskTag = NULL;
ARM GAS  /tmp/cc8PdMPr.s 			page 18


 945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_APPLICATION_TASK_TAG */
 947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configGENERATE_RUN_TIME_STATS == 1 )
 949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ulRunTimeCounter = 0UL;
 951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configGENERATE_RUN_TIME_STATS */
 953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxNewTCB->xMPUSettings ), xRegions, pxNewTCB->pxStack, ulStackDepth
 957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else
 959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Avoid compiler warning about unreferenced parameter. */
 961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xRegions;
 962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
 966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for( x = 0; x < ( UBaseType_t ) configNUM_THREAD_LOCAL_STORAGE_POINTERS; x++ )
 968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pvThreadLocalStoragePointers[ x ] = NULL;
 970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TASK_NOTIFICATIONS == 1 )
 975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ulNotifiedValue = 0;
 977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Initialise this task's Newlib reent structure. */
 984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
 989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucDelayAborted = pdFALSE;
 991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Initialize the TCB stack to look as if the task was already running,
 995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	but had been interrupted by the scheduler.  The return address is set
 996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	to the start of the task function. Once the stack has been initialised
 997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the top of stack variable is updated. */
 998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
 999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters, xRunPrivi
1001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/cc8PdMPr.s 			page 19


1002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* portUSING_MPU_WRAPPERS */
1003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
1005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS */
1007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( ( void * ) pxCreatedTask != NULL )
1009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Pass the handle out in an anonymous way.  The handle can be used to
1011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		change the created task's priority, delete the created task, etc.*/
1012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
1013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
1015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
1019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
1022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
1023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
1024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	updated. */
1025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
1026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxCurrentNumberOfTasks++;
1028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB == NULL )
1029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* There are no other tasks, or all the other tasks are in
1031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the suspended state - make this the current task. */
1032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB = pxNewTCB;
1033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
1035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* This is the first task to be created so do the preliminary
1037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				initialisation required.  We will not recover if this call
1038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				fails, but we will report the failure. */
1039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvInitialiseTaskLists();
1040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the scheduler is not already running, make this task the
1049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			current task if it is the highest priority task to be created
1050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			so far. */
1051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xSchedulerRunning == pdFALSE )
1052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
1054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB = pxNewTCB;
1056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/cc8PdMPr.s 			page 20


1059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxTaskNumber++;
1069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TRACE_FACILITY == 1 )
1071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Add a counter into the TCB for tracing only. */
1073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->uxTCBNumber = uxTaskNumber;
1074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TRACE_FACILITY */
1076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_CREATE( pxNewTCB );
1077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxNewTCB );
1079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portSETUP_TCB( pxNewTCB );
1081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
1083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( xSchedulerRunning != pdFALSE )
1085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the created task is of a higher priority than the current task
1087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		then it should run now. */
1088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
1089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskYIELD_IF_USING_PREEMPTION();
1091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
1098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
1102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
1105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskDelete( TaskHandle_t xTaskToDelete )
1107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the calling task that is
1113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			being deleted. */
1114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToDelete );
1115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc8PdMPr.s 			page 21


1116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Remove task from the ready list. */
1117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Is the task waiting on an event also? */
1127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Increment the uxTaskNumber also so kernel aware debuggers can
1137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			detect that the task lists need re-generating.  This is done before
1138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portPRE_TASK_DELETE_HOOK() as in the Windows port that macro will
1139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			not return. */
1140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxTaskNumber++;
1141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A task is deleting itself.  This cannot complete within the
1145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task itself, as a context switch to another task is required.
1146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				Place the task in the termination list.  The idle task will
1147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				check the termination list and free up any memory allocated by
1148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the scheduler for the TCB and stack of the deleted task. */
1149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vListInsertEnd( &xTasksWaitingTermination, &( pxTCB->xStateListItem ) );
1150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Increment the ucTasksDeleted variable so the idle task knows
1152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				there is a task that has been deleted and that it should therefore
1153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				check the xTasksWaitingTermination list. */
1154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				++uxDeletedTasksWaitingCleanUp;
1155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The pre-delete hook is primarily for the Windows simulator,
1157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				in which Windows specific clean up operations are performed,
1158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				after which it is not possible to yield away from this task -
1159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				hence xYieldPending is used to latch that a context switch is
1160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				required. */
1161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portPRE_TASK_DELETE_HOOK( pxTCB, &xYieldPending );
1162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
1166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvDeleteTCB( pxTCB );
1167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Reset the next expected unblock time in case it referred to
1169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the task that has just been deleted. */
1170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc8PdMPr.s 			page 22


1173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_DELETE( pxTCB );
1174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if it is the currently running task that has just
1178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been deleted. */
1179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
1185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
1194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelayUntil == 1 )
1197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskDelayUntil( TickType_t * const pxPreviousWakeTime, const TickType_t xTimeIncrement )
1199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TickType_t xTimeToWake;
1201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded, xShouldDelay = pdFALSE;
1202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxPreviousWakeTime );
1204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
1205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
1206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
1208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Minor optimisation.  The tick count cannot change in this
1210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			block. */
1211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			const TickType_t xConstTickCount = xTickCount;
1212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Generate the tick time at which the task wants to wake. */
1214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
1215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xConstTickCount < *pxPreviousWakeTime )
1217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The tick count has overflowed since this function was
1219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				lasted called.  In this case the only time we should ever
1220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				actually delay is if the wake time has also	overflowed,
1221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				and the wake time is greater than the tick time.  When this
1222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is the case it is as if neither time had overflowed. */
1223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) && ( xTimeToWake > xConstTickCount ) )
1224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xShouldDelay = pdTRUE;
1226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
ARM GAS  /tmp/cc8PdMPr.s 			page 23


1230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The tick time has not overflowed.  In this case we will
1235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				delay if either the wake time has overflowed, and/or the
1236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				tick time is less than the wake time. */
1237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTimeToWake > xConstTickCount ) )
1238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xShouldDelay = pdTRUE;
1240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Update the wake time ready for the next call. */
1248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			*pxPreviousWakeTime = xTimeToWake;
1249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xShouldDelay != pdFALSE )
1251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELAY_UNTIL( xTimeToWake );
1253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* prvAddCurrentTaskToDelayedList() needs the block time, not
1255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the time to wake, so subtract the current tick count. */
1256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTimeToWake - xConstTickCount, pdFALSE );
1257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xAlreadyYielded = xTaskResumeAll();
1264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		have put ourselves to sleep. */
1267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portYIELD_WITHIN_API();
1270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelayUntil */
1278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelay == 1 )
1281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskDelay( const TickType_t xTicksToDelay )
1283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
1285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* A delay time of zero just forces a reschedule. */
ARM GAS  /tmp/cc8PdMPr.s 			page 24


1287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTicksToDelay > ( TickType_t ) 0U )
1288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( uxSchedulerSuspended == 0 );
1290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
1291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELAY();
1293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A task that is removed from the event list while the
1295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				scheduler is suspended will not get placed in the ready
1296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				list or removed from the blocked list until the scheduler
1297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is resumed.
1298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				This task cannot be in an event list as it is the currently
1300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				executing task. */
1301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
1302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xAlreadyYielded = xTaskResumeAll();
1304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		have put ourselves to sleep. */
1312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portYIELD_WITHIN_API();
1315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelay */
1323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( INCLUDE_eTaskGetState == 1 ) || ( configUSE_TRACE_FACILITY == 1 ) )
1326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eTaskState eTaskGetState( TaskHandle_t xTask )
1328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eTaskState eReturn;
1330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	List_t *pxStateList;
1331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
1332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTCB );
1334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
1336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The task calling this function is querying its own state. */
1338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eReturn = eRunning;
1339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
1343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/cc8PdMPr.s 			page 25


1344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxStateList = ( List_t * ) listLIST_ITEM_CONTAINER( &( pxTCB->xStateListItem ) );
1345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
1347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ( pxStateList == pxDelayedTaskList ) || ( pxStateList == pxOverflowDelayedTaskList ) )
1349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task being queried is referenced from one of the Blocked
1351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				lists. */
1352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				eReturn = eBlocked;
1353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
1356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else if( pxStateList == &xSuspendedTaskList )
1357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task being queried is referenced from the suspended
1359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					list.  Is it genuinely suspended or is it block
1360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					indefinitely? */
1361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL )
1362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						eReturn = eSuspended;
1364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						eReturn = eBlocked;
1368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskDelete == 1 )
1373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else if( ( pxStateList == &xTasksWaitingTermination ) || ( pxStateList == NULL ) )
1374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task being queried is referenced from the deleted
1376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					tasks list, or it is not referenced from any lists at
1377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					all. */
1378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					eReturn = eDeleted;
1379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else /*lint !e525 Negative indentation is intended to make use of pre-processor clearer. */
1383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task is not in any other state, it must be in the
1385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				Ready (including pending ready) state. */
1386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				eReturn = eReady;
1387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return eReturn;
1391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
1392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_eTaskGetState */
1394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskPriorityGet( TaskHandle_t xTask )
1399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
ARM GAS  /tmp/cc8PdMPr.s 			page 26


1401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
1402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the that
1406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			called uxTaskPriorityGet() that is being queried. */
1407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
1413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskPriorityGetFromISR( TaskHandle_t xTask )
1421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn, uxSavedInterruptState;
1424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
1440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptState = portSET_INTERRUPT_MASK_FROM_ISR();
1444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task that is being queried. */
1447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptState );
1451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
1453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc8PdMPr.s 			page 27


1458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskPrioritySet == 1 )
1459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskPrioritySet( TaskHandle_t xTask, UBaseType_t uxNewPriority )
1461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
1464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( uxNewPriority < configMAX_PRIORITIES ) );
1467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Ensure the new priority is valid. */
1469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( uxNewPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
1470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxNewPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
1472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task that is being changed. */
1482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_PRIORITY_SET( pxTCB, uxNewPriority );
1485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( configUSE_MUTEXES == 1 )
1487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxBasePriority;
1489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else
1491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxPriority;
1493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxCurrentBasePriority != uxNewPriority )
1497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The priority change may have readied a task of higher
1499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				priority than the calling task. */
1500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxNewPriority > uxCurrentBasePriority )
1501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB != pxCurrentTCB )
1503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The priority of a task other than the currently
1505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						running task is being raised.  Is the priority being
1506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						raised above that of the running task? */
1507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( uxNewPriority >= pxCurrentTCB->uxPriority )
1508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							xYieldRequired = pdTRUE;
1510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
1511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						else
1512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
1514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
ARM GAS  /tmp/cc8PdMPr.s 			page 28


1515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The priority of the running task is being raised,
1519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						but the running task must already be the highest
1520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						priority task able to run so no yield is required. */
1521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else if( pxTCB == pxCurrentTCB )
1524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Setting the priority of the running task down means
1526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					there may now be another task of higher priority that
1527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					is ready to execute. */
1528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xYieldRequired = pdTRUE;
1529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Setting the priority of any other task down does not
1533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					require a yield as the running task must be above the
1534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					new priority of the task being modified. */
1535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Remember the ready list the task might be referenced from
1538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				before its uxPriority member is changed so the
1539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY() macro can function correctly. */
1540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxPriorityUsedOnEntry = pxTCB->uxPriority;
1541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( configUSE_MUTEXES == 1 )
1543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Only change the priority being used if the task is not
1545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					currently using an inherited priority. */
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxBasePriority == pxTCB->uxPriority )
1547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->uxPriority = uxNewPriority;
1549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The base priority gets set whatever. */
1556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxBasePriority = uxNewPriority;
1557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#else
1559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = uxNewPriority;
1561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
1563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only reset the event list item value if the value is not
1565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				being used for anything else. */
1566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE 
1567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES - (
1569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/cc8PdMPr.s 			page 29


1572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task is in the blocked or suspended list we need do
1576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				nothing more than change its priority variable. However, if
1577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the task is in a ready list it needs to be removed and placed
1578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				in the list appropriate to its new priority. */
1579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateL
1580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is currently in its ready list - remove before
1582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					adding it to it's new ready list.  As we are in a critical
1583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					section we can do this even if the scheduler is suspended. */
1584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* It is known that the task is in its ready list so
1587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						there is no need to check again and the port level
1588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						reset macro can be called directly. */
1589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						portRESET_READY_PRIORITY( uxPriorityUsedOnEntry, uxTopReadyPriority );
1590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xYieldRequired != pdFALSE )
1603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
1605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Remove compiler warning about unused variables when the port
1612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				optimised task selection is not being used. */
1613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxPriorityUsedOnEntry;
1614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskPrioritySet */
1620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSuspend( TaskHandle_t xTaskToSuspend )
1625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
ARM GAS  /tmp/cc8PdMPr.s 			page 30


1629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the running task that is
1631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			being suspended. */
1632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
1633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_SUSPEND( pxTCB );
1635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Remove task from the ready/delayed list and place in the
1637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			suspended list. */
1638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Is the task waiting on an event also? */
1648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
1658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( configUSE_TASK_NOTIFICATIONS == 1 )
1660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->ucNotifyState == taskWAITING_NOTIFICATION )
1662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task was blocked to wait for a notification, but is
1664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					now suspended, so no notification was received. */
1665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
1666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Reset the next expected unblock time in case it referred to the
1675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task that is now in the Suspended state. */
1676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
1677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
1681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/cc8PdMPr.s 			page 31


1686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
1688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xSchedulerRunning != pdFALSE )
1690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The current task has just been suspended. */
1692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
1694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The scheduler is not running, but the task that was pointed
1698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				to by pxCurrentTCB has just been suspended and pxCurrentTCB
1699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				must be adjusted to point to a different task. */
1700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == uxCurrentNumberOfTasks )
1701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* No other tasks are ready, so set pxCurrentTCB back to
1703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					NULL so when the next task is created pxCurrentTCB will
1704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					be set to point to it no matter what its relative priority
1705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					is. */
1706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB = NULL;
1707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vTaskSwitchContext();
1711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask )
1726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
  27              		.loc 1 1726 2 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
1727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
  32              		.loc 1 1727 2 view .LVU1
1728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
  33              		.loc 1 1728 2 view .LVU2
1729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Accesses xPendingReadyList so must be called from a critical
1731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		section. */
1732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* It does not make sense to check if the calling task is suspended. */
1734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTask );
  34              		.loc 1 1734 3 view .LVU3
ARM GAS  /tmp/cc8PdMPr.s 			page 32


  35 0000 0028     		cmp	r0, #0
  36 0002 05D0     		beq	.L8
  37              		.loc 1 1734 24 discriminator 2 view .LVU4
1735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Is the task being resumed actually in the suspended list? */
1737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &( pxTCB->xStateListItem ) ) != pdFALSE )
  38              		.loc 1 1737 3 discriminator 2 view .LVU5
  39              		.loc 1 1737 82 is_stmt 0 discriminator 2 view .LVU6
  40 0004 094B     		ldr	r3, .L10
  41 0006 4269     		ldr	r2, [r0, #20]
  42 0008 9A42     		cmp	r2, r3
  43 000a 03D0     		beq	.L9
1727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
  44              		.loc 1 1727 13 view .LVU7
  45 000c 0020     		movs	r0, #0
  46              	.LVL1:
  47              	.L1:
1738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Has the task already been resumed from within an ISR? */
1740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) == pdFALSE )
1741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Is it in the suspended list because it is in the	Suspended
1743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				state, or because is is blocked with no timeout? */
1744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( NULL, &( pxTCB->xEventListItem ) ) != pdFALSE ) /*lint !e961.  The
1745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
1747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
1764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
  48              		.loc 1 1764 2 view .LVU8
  49              		@ sp needed
  50 000e 7047     		bx	lr
  51              	.LVL2:
  52              	.L8:
1734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  53              		.loc 1 1734 3 is_stmt 1 discriminator 1 view .LVU9
  54              		.syntax divided
  55              	@ 1734 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
  56 0010 72B6     		 cpsid i 
  57              	@ 0 "" 2
  58              		.thumb
  59              		.syntax unified
ARM GAS  /tmp/cc8PdMPr.s 			page 33


  60              	.L3:
1734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  61              		.loc 1 1734 3 discriminator 1 view .LVU10
1734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  62              		.loc 1 1734 3 discriminator 1 view .LVU11
  63 0012 FEE7     		b	.L3
  64              	.L9:
1740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
  65              		.loc 1 1740 4 view .LVU12
1740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
  66              		.loc 1 1740 8 is_stmt 0 view .LVU13
  67 0014 836A     		ldr	r3, [r0, #40]
1740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
  68              		.loc 1 1740 6 view .LVU14
  69 0016 064A     		ldr	r2, .L10+4
  70 0018 9342     		cmp	r3, r2
  71 001a 03D0     		beq	.L6
1744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
  72              		.loc 1 1744 5 is_stmt 1 view .LVU15
1744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
  73              		.loc 1 1744 69 is_stmt 0 view .LVU16
  74 001c 002B     		cmp	r3, #0
  75 001e 03D0     		beq	.L7
1727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
  76              		.loc 1 1727 13 view .LVU17
  77 0020 0020     		movs	r0, #0
  78              	.LVL3:
1727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
  79              		.loc 1 1727 13 view .LVU18
  80 0022 F4E7     		b	.L1
  81              	.LVL4:
  82              	.L6:
1727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
  83              		.loc 1 1727 13 view .LVU19
  84 0024 0020     		movs	r0, #0
  85              	.LVL5:
1727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
  86              		.loc 1 1727 13 view .LVU20
  87 0026 F2E7     		b	.L1
  88              	.LVL6:
  89              	.L7:
1746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
  90              		.loc 1 1746 14 view .LVU21
  91 0028 0120     		movs	r0, #1
  92              	.LVL7:
1760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
  93              		.loc 1 1760 28 is_stmt 1 view .LVU22
1763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
  94              		.loc 1 1763 3 view .LVU23
1763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
  95              		.loc 1 1763 10 is_stmt 0 view .LVU24
  96 002a F0E7     		b	.L1
  97              	.L11:
  98              		.align	2
  99              	.L10:
 100 002c 00000000 		.word	.LANCHOR0
 101 0030 00000000 		.word	.LANCHOR1
ARM GAS  /tmp/cc8PdMPr.s 			page 34


 102              		.cfi_endproc
 103              	.LFE10:
 105              		.section	.text.prvResetNextTaskUnblockTime,"ax",%progbits
 106              		.align	1
 107              		.syntax unified
 108              		.code	16
 109              		.thumb_func
 110              		.fpu softvfp
 112              	prvResetNextTaskUnblockTime:
 113              	.LFB35:
1765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskResume( TaskHandle_t xTaskToResume )
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
1774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* It does not make sense to resume the calling task. */
1776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToResume );
1777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The parameter cannot be NULL as it is impossible to resume the
1779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		currently executing task. */
1780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( pxTCB != NULL ) && ( pxTCB != pxCurrentTCB ) )
1781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
1783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_RESUME( pxTCB );
1787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The ready list can be accessed even if the scheduler is
1789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					suspended because this is inside a critical section. */
1790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove(  &( pxTCB->xStateListItem ) );
1791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A higher priority task may have just been resumed. */
1794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* This yield may not cause the task just resumed to run,
1797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						but will leave the lists in the correct state for the
1798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						next yield. */
1799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						taskYIELD_IF_USING_PREEMPTION();
1800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
ARM GAS  /tmp/cc8PdMPr.s 			page 35


1812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) )
1824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskResumeFromISR( TaskHandle_t xTaskToResume )
1826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
1829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
1830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToResume );
1832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
1848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_RESUME_FROM_ISR( pxTCB );
1856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Check the ready lists can be accessed. */
1858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
1859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Ready lists can be accessed so move the task from the
1861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					suspended list to the ready list directly. */
1862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldRequired = pdTRUE;
1865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
ARM GAS  /tmp/cc8PdMPr.s 			page 36


1869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
1872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed or ready lists cannot be accessed so the task
1877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					is held in the pending ready list until the scheduler is
1878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					unsuspended. */
1879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
1880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xYieldRequired;
1890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) ) */
1893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskStartScheduler( void )
1896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
1897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
1898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Add the idle task at the lowest priority. */
1900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configSUPPORT_STATIC_ALLOCATION == 1 )
1901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
1903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
1904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t ulIdleTaskStackSize;
1905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The Idle task is created using user provided RAM - obtain the
1907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		address of the RAM then create the idle task. */
1908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize
1909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
1910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												configIDLE_TASK_NAME,
1911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												ulIdleTaskStackSize,
1912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												( void * ) NULL, /*lint !e961.  The cast is not redundant for all compilers. */
1913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												( tskIDLE_PRIORITY | portPRIVILEGE_BIT ),
1914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												pxIdleTaskStackBuffer,
1915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												pxIdleTaskTCBBuffer ); /*lint !e961 MISRA exception, justified as it is not a redundant
1916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xIdleTaskHandle != NULL )
1918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
1920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFAIL;
1924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/cc8PdMPr.s 			page 37


1926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else
1927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The Idle task is being created using dynamically allocated RAM. */
1929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = xTaskCreate(	prvIdleTask,
1930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								configIDLE_TASK_NAME,
1931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								configMINIMAL_STACK_SIZE,
1932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								( void * ) NULL,
1933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								( tskIDLE_PRIORITY | portPRIVILEGE_BIT ),
1934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								&xIdleTaskHandle ); /*lint !e961 MISRA exception, justified as it is not a redundant explic
1935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configSUPPORT_STATIC_ALLOCATION */
1937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TIMERS == 1 )
1939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xReturn == pdPASS )
1941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xTimerCreateTimerTask();
1943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_TIMERS */
1950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( xReturn == pdPASS )
1952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* freertos_tasks_c_additions_init() should only be called if the user
1954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		definable macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is
1955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the only macro called by the function. */
1956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
1957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			freertos_tasks_c_additions_init();
1959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
1961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Interrupts are turned off here, to ensure a tick does not occur
1963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		before or during the call to xPortStartScheduler().  The stacks of
1964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the created tasks contain a status word with interrupts switched on
1965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		so interrupts will automatically get re-enabled when the first task
1966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		starts to run. */
1967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portDISABLE_INTERRUPTS();
1968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
1970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
1972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			structure specific to the task that will run first. */
1973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
1974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
1976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
1978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
1979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = ( TickType_t ) 0U;
1980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If configGENERATE_RUN_TIME_STATS is defined then the following
1982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		macro must be defined to configure the timer/counter used to generate
ARM GAS  /tmp/cc8PdMPr.s 			page 38


1983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the run time counter time base.   NOTE:  If configGENERATE_RUN_TIME_STATS
1984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is set to 0 and the following line fails to build then ensure you do not
1985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		have portCONFIGURE_TIMER_FOR_RUN_TIME_STATS() defined in your
1986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		FreeRTOSConfig.h file. */
1987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCONFIGURE_TIMER_FOR_RUN_TIME_STATS();
1988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Setting up the timer tick is hardware specific and thus in the
1990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portable interface. */
1991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xPortStartScheduler() != pdFALSE )
1992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Should not reach here as if the scheduler is running the
1994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			function will not return. */
1995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Should only reach here if a task calls xTaskEndScheduler(). */
1999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This line will only be reached if the kernel could not be started,
2004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		because there was not enough FreeRTOS heap to create the idle task
2005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		or the timer task. */
2006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
2007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Prevent compiler warnings if INCLUDE_xTaskGetIdleTaskHandle is set to 0,
2010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	meaning xIdleTaskHandle is not used anywhere else. */
2011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) xIdleTaskHandle;
2012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskEndScheduler( void )
2016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
2018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	routine so the original ISRs can be restored if necessary.  The port
2019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	layer must ensure interrupts enable	bit is left in the correct state. */
2020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portDISABLE_INTERRUPTS();
2021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xSchedulerRunning = pdFALSE;
2022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vPortEndScheduler();
2023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskSuspendAll( void )
2027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required as the variable is of type
2029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t.  Please read Richard Barry's reply in the following link to a
2030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	post in the FreeRTOS support forum before reporting this as a bug! -
2031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	http://goo.gl/wu4acr */
2032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	++uxSchedulerSuspended;
2033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void )
2039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
ARM GAS  /tmp/cc8PdMPr.s 			page 39


2040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TickType_t xReturn;
2041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxHigherPriorityReadyTasks = pdFALSE;
2042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* uxHigherPriorityReadyTasks takes care of the case where
2044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configUSE_PREEMPTION is 0, so there may be tasks above the idle priority
2045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		task that are in the Ready state, even though the idle task is
2046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		running. */
2047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
2048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxTopReadyPriority > tskIDLE_PRIORITY )
2050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
2052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
2055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			const UBaseType_t uxLeastSignificantBit = ( UBaseType_t ) 0x01;
2057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* When port optimised task selection is used the uxTopReadyPriority
2059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			variable is used as a bit map.  If bits other than the least
2060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			significant bit are set then there are tasks that have a priority
2061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			above the idle priority that are in the Ready state.  This takes
2062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			care of the case where the co-operative scheduler is in use. */
2063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxTopReadyPriority > uxLeastSignificantBit )
2064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
2066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
2069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB->uxPriority > tskIDLE_PRIORITY )
2071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
2073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > 1 )
2075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* There are other idle priority tasks in the ready state.  If
2077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			time slicing is used then the very next tick interrupt must be
2078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			processed. */
2079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
2080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( uxHigherPriorityReadyTasks != pdFALSE )
2082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* There are tasks in the Ready state that have a priority above the
2084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			idle priority.  This path can only be reached if
2085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configUSE_PREEMPTION is 0. */
2086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
2087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xNextTaskUnblockTime - xTickCount;
2091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
ARM GAS  /tmp/cc8PdMPr.s 			page 40


2097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskResumeAll( void )
2100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB = NULL;
2102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
2103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If uxSchedulerSuspended is zero then this function does not match a
2105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	previous call to vTaskSuspendAll(). */
2106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended );
2107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* It is possible that an ISR caused a task to be removed from an event
2109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	list while the scheduler was suspended.  If this was the case then the
2110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	removed task will have been added to the xPendingReadyList.  Once the
2111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	scheduler has been resumed it is safe to move all the pending ready
2112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tasks from this list into their appropriate ready list. */
2113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
2114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		--uxSchedulerSuspended;
2116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
2120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Move any readied tasks from the pending list into the
2122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				appropriate ready list. */
2123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
2124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) );
2126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If the moved task has a priority higher than the current
2131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					task then a yield must be performed. */
2132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
2135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB != NULL )
2143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A task was unblocked while the scheduler was suspended,
2145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					which may have prevented the next unblock time from being
2146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					re-calculated, in which case re-calculate it now.  Mainly
2147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					important for low power tickless implementations, where
2148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this can prevent an unnecessary exit from low power
2149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					state. */
2150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvResetNextTaskUnblockTime();
2151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If any ticks occurred while the scheduler was suspended then
ARM GAS  /tmp/cc8PdMPr.s 			page 41


2154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				they should be processed now.  This ensures the tick count does
2155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				not	slip, and that any delayed tasks are resumed at the correct
2156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				time. */
2157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
2159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxPendedCounts > ( UBaseType_t ) 0U )
2161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						do
2163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
2164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							if( xTaskIncrementTick() != pdFALSE )
2165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
2166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								xYieldPending = pdTRUE;
2167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
2168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							else
2169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
2170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								mtCOVERAGE_TEST_MARKER();
2171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
2172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							--uxPendedCounts;
2173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						} while( uxPendedCounts > ( UBaseType_t ) 0U );
2174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						uxPendedTicks = 0;
2176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xYieldPending != pdFALSE )
2184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#if( configUSE_PREEMPTION != 0 )
2186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xAlreadyYielded = pdTRUE;
2188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#endif
2190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
2191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
2193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
2204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xAlreadyYielded;
2206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTaskGetTickCount( void )
2210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
ARM GAS  /tmp/cc8PdMPr.s 			page 42


2211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTicks;
2212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Critical section required if running on a 16 bit processor. */
2214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_ENTER_CRITICAL();
2215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTicks = xTickCount;
2217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_EXIT_CRITICAL();
2219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xTicks;
2221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTaskGetTickCountFromISR( void )
2225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xReturn;
2227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxSavedInterruptStatus;
2228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
2230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
2231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	above the maximum system call priority are kept permanently enabled, even
2232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
2233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
2234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
2235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
2236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	assigned a priority above the configured maximum system call priority.
2237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
2238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	that have been assigned a priority at or (logically) below the maximum
2239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
2240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
2241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	More information (albeit Cortex-M specific) is provided on the following
2242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
2243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
2244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uxSavedInterruptStatus = portTICK_TYPE_SET_INTERRUPT_MASK_FROM_ISR();
2246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = xTickCount;
2248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_CLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
2250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
2252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxTaskGetNumberOfTasks( void )
2256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required because the variables are of type
2258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t. */
2259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return uxCurrentNumberOfTasks;
2260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** char *pcTaskGetName( TaskHandle_t xTaskToQuery ) /*lint !e971 Unqualified char types are allowed fo
2264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
2266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If null is passed in here then the name of the calling task is being
ARM GAS  /tmp/cc8PdMPr.s 			page 43


2268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	queried. */
2269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTCB = prvGetTCBFromHandle( xTaskToQuery );
2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
2271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
2272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] )
2278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNextTCB, *pxFirstTCB, *pxReturn = NULL;
2280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t x;
2281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	char cNextChar;
2282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This function is called with the scheduler suspended. */
2284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
2286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
2288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			do
2290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
2292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Check each character in the name looking for a match or
2294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mismatch. */
2295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
2296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					cNextChar = pxNextTCB->pcTaskName[ x ];
2298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( cNextChar != pcNameToQuery[ x ] )
2300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Characters didn't match. */
2302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break;
2303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else if( cNextChar == 0x00 )
2305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Both strings terminated, a match must have been
2307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						found. */
2308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxReturn = pxNextTCB;
2309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break;
2310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxReturn != NULL )
2318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The handle has been found. */
2320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
2321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
2324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/cc8PdMPr.s 			page 44


2325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pxReturn;
2331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetHandle( const char *pcNameToQuery ) /*lint !e971 Unqualified char types are a
2339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxQueue = configMAX_PRIORITIES;
2341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t* pxTCB;
2342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Task names will be truncated to configMAX_TASK_NAME_LEN - 1 bytes. */
2344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( strlen( pcNameToQuery ) < configMAX_TASK_NAME_LEN );
2345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
2347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Search the ready lists. */
2349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			do
2350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxQueue--;
2352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) &( pxReadyTasksLists[ uxQueue ] ), pcNam
2353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB != NULL )
2355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Found the handle. */
2357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
2358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the casts
2361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Search the delayed lists. */
2363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == NULL )
2364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxDelayedTaskList, pcNameToQuery );
2366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == NULL )
2369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxOverflowDelayedTaskList, pcNameToQuery
2371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
2374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB == NULL )
2376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Search the suspended list. */
2378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xSuspendedTaskList, pcNameToQuery );
2379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
ARM GAS  /tmp/cc8PdMPr.s 			page 45


2382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( INCLUDE_vTaskDelete == 1 )
2384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB == NULL )
2386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Search the deleted list. */
2388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xTasksWaitingTermination, pcNameToQuery );
2389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
2392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
2394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return ( TaskHandle_t ) pxTCB;
2396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray, const UBaseType_t uxArra
2404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
2406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
2408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Is there a space in the array for each task in the system? */
2410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxArraySize >= uxCurrentNumberOfTasks )
2411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task in the Ready state. */
2414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				do
2415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxQueue--;
2417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( pxReadyTasksLists
2418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the cast
2420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task in the Blocked state. */
2423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxDelaye
2424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxOverfl
2425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if( INCLUDE_vTaskDelete == 1 )
2427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					each task that has been deleted but not yet cleaned up. */
2430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xTasksWaitingTermin
2431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
2435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					each task in the Suspended state. */
2438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xSuspendedTaskList,
ARM GAS  /tmp/cc8PdMPr.s 			page 46


2439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( configGENERATE_RUN_TIME_STATS == 1)
2443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							portALT_GET_RUN_TIME_COUNTER_VALUE( ( *pulTotalRunTime ) );
2448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
2449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							*pulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
2451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#else
2454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						*pulTotalRunTime = 0;
2458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
2468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxTask;
2470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
2473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetIdleTaskHandle == 1 )
2476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetIdleTaskHandle( void )
2478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTaskGetIdleTaskHandle() is called before the scheduler has been
2480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		started, then xIdleTaskHandle will be NULL. */
2481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xIdleTaskHandle != NULL ) );
2482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xIdleTaskHandle;
2483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetIdleTaskHandle */
2486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* This conditional compilation should use inequality to 0, not equality to 1.
2489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** This is to ensure vTaskStepTick() is available when user defined low power mode
2490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** implementations require configUSE_TICKLESS_IDLE to be set to a value other than
2491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 1. */
2492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskStepTick( const TickType_t xTicksToJump )
2495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
ARM GAS  /tmp/cc8PdMPr.s 			page 47


2496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Correct the tick count value after a period during which the tick
2497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		was suppressed.  Note this does *not* call the tick hook function for
2498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		each stepped tick. */
2499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xTickCount + xTicksToJump ) <= xNextTaskUnblockTime );
2500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount += xTicksToJump;
2501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceINCREASE_TICK_COUNT( xTicksToJump );
2502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskAbortDelay == 1 )
2508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskAbortDelay( TaskHandle_t xTask )
2510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB = ( TCB_t * ) xTask;
2512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
2513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTCB );
2515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
2517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A task can only be prematurely removed from the Blocked state if
2519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			it is actually in the Blocked state. */
2520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( eTaskGetState( xTask ) == eBlocked )
2521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
2523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Remove the reference to the task from the blocked list.  An
2525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				interrupt won't touch the xStateListItem because the
2526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				scheduler is suspended. */
2527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Is the task waiting on an event also?  If so remove it from
2530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the event list too.  Interrupts can touch the event list item,
2531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				even though the scheduler is suspended, so a critical section
2532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is used. */
2533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskENTER_CRITICAL();
2534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->ucDelayAborted = pdTRUE;
2539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskEXIT_CRITICAL();
2546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Place the unblocked task into the appropriate ready list. */
2548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
2549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A task being unblocked cannot cause an immediate context
2551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				switch if preemption is turned off. */
2552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if (  configUSE_PREEMPTION == 1 )
ARM GAS  /tmp/cc8PdMPr.s 			page 48


2553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Preemption is on, but a context switch should only be
2555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					performed if the unblocked task has a priority that is
2556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					equal to or higher than the currently executing task. */
2557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
2558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Pend the yield to be performed when the scheduler
2560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						is unsuspended. */
2561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
2562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif /* configUSE_PREEMPTION */
2569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFAIL;
2573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
2576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskAbortDelay */
2581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskIncrementTick( void )
2584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t * pxTCB;
2586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xItemValue;
2587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xSwitchRequired = pdFALSE;
2588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Called by the portable layer each time a tick interrupt occurs.
2590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	Increments the tick then checks to see if the new tick value will cause any
2591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tasks to be unblocked. */
2592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	traceTASK_INCREMENT_TICK( xTickCount );
2593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this
2596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		block. */
2597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
2598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Increment the RTOS tick, switching the delayed and overflowed
2600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		delayed lists if it wraps to 0. */
2601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = xConstTickCount;
2602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as
2604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskSWITCH_DELAYED_LISTS();
2606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
ARM GAS  /tmp/cc8PdMPr.s 			page 49


2610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* See if this tick has made a timeout expire.  Tasks are stored in
2613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the	queue in the order of their wake time - meaning once one task
2614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		has been found whose block time has not expired there is no need to
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		look any further down the list. */
2616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xConstTickCount >= xNextTaskUnblockTime )
2617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			for( ;; )
2619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
2621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed list is empty.  Set xNextTaskUnblockTime
2623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					to the maximum possible value so it is extremely
2624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					unlikely that the
2625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xTickCount >= xNextTaskUnblockTime ) test will pass
2626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					next time through. */
2627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redun
2628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
2629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
2631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed list is not empty, get the value of the
2633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					item at the head of the delayed list.  This is the time
2634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					at which the task at the head of the delayed list must
2635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					be removed from the Blocked state. */
2636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
2637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
2638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xConstTickCount < xItemValue )
2640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* It is not time to unblock this item yet, but the
2642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						item value is the time at which the task at the head
2643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						of the blocked list must be removed from the Blocked
2644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						state -	so record the item value in
2645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xNextTaskUnblockTime. */
2646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xNextTaskUnblockTime = xItemValue;
2647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break;
2648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* It is time to remove the item from the Blocked state. */
2655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Is the task waiting on an event also?  If so remove
2658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					it from the event list. */
2659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
ARM GAS  /tmp/cc8PdMPr.s 			page 50


2667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Place the unblocked task into the appropriate ready
2669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					list. */
2670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A task being unblocked cannot cause an immediate
2673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					context switch if preemption is turned off. */
2674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#if (  configUSE_PREEMPTION == 1 )
2675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Preemption is on, but a context switch should
2677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						only be performed if the unblocked task has a
2678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						priority that is equal to or higher than the
2679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						currently executing task. */
2680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
2682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							xSwitchRequired = pdTRUE;
2683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
2684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						else
2685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
2686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
2687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
2688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#endif /* configUSE_PREEMPTION */
2690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Tasks of equal priority to the currently running task will share
2695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		processing time (time slice) if preemption is on, and the application
2696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		writer has not explicitly turned time slicing off. */
2697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) )
2698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_
2700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xSwitchRequired = pdTRUE;
2702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) ) */
2709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Guard against the tick hook being called when the pended tick
2713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			count is being unwound (when the scheduler is being unlocked). */
2714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxPendedTicks == ( UBaseType_t ) 0U )
2715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vApplicationTickHook();
2717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TICK_HOOK */
ARM GAS  /tmp/cc8PdMPr.s 			page 51


2724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		++uxPendedTicks;
2728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The tick hook gets called at regular intervals, even if the
2730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		scheduler is locked. */
2731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vApplicationTickHook();
2734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
2736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_PREEMPTION == 1 )
2739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xYieldPending != pdFALSE )
2741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xSwitchRequired = pdTRUE;
2743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_PREEMPTION */
2750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xSwitchRequired;
2752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSetApplicationTaskTag( TaskHandle_t xTask, TaskHookFunction_t pxHookFunction )
2758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *xTCB;
2760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then it is the task hook of the calling task that is
2762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		getting set. */
2763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask == NULL )
2764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the value can be accessed from an interrupt. */
2774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
2775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB->pxTaskTag = pxHookFunction;
2776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
2777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/cc8PdMPr.s 			page 52


2781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xTaskGetApplicationTaskTag( TaskHandle_t xTask )
2785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *xTCB;
2787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xReturn;
2788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then we are setting our own task hook. */
2790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask == NULL )
2791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the value can be accessed from an interrupt. */
2801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
2802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xTCB->pxTaskTag;
2804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCallApplicationTaskHook( TaskHandle_t xTask, void *pvParameter )
2816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *xTCB;
2818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
2819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then we are calling our own task hook. */
2821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask == NULL )
2822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTCB->pxTaskTag != NULL )
2831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xTCB->pxTaskTag( pvParameter );
2833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFAIL;
2837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/cc8PdMPr.s 			page 53


2838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskSwitchContext( void )
2846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
2848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The scheduler is currently suspended - do not allow a context
2850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		switch. */
2851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
2852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdFALSE;
2856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
2857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
2859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portALT_GET_RUN_TIME_COUNTER_VALUE( ulTotalRunTime );
2862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#else
2863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					ulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Add the amount of time the task has been running to the
2867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				accumulated time so far.  The time the task started running was
2868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				stored in ulTaskSwitchedInTime.  Note that there is no overflow
2869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				protection here so count values are only valid until the timer
2870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				overflows.  The guard against negative values is to protect
2871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				against suspect run time stat counter implementations - which
2872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				are provided by the application, not the kernel. */
2873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ulTotalRunTime > ulTaskSwitchedInTime )
2874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB->ulRunTimeCounter += ( ulTotalRunTime - ulTaskSwitchedInTime );
2876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
2878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				ulTaskSwitchedInTime = ulTotalRunTime;
2882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configGENERATE_RUN_TIME_STATS */
2884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Check for stack overflow, if configured. */
2886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskCHECK_FOR_STACK_OVERFLOW();
2887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Select a new task to run using either the generic C or port
2889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		optimised asm code. */
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskSELECT_HIGHEST_PRIORITY_TASK();
2891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
2892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
2894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/cc8PdMPr.s 			page 54


2895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
2896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			structure specific to this task. */
2897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
2898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
2900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskPlaceOnEventList( List_t * const pxEventList, const TickType_t xTicksToWait )
2905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
2907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH EITHER INTERRUPTS DISABLED OR THE
2909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	SCHEDULER SUSPENDED AND THE QUEUE BEING ACCESSED LOCKED. */
2910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Place the event list item of the TCB in the appropriate event list.
2912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	This is placed in the list in priority order so the highest priority task
2913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	is the first to be woken by the event.  The queue that contains the event
2914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	list is locked, preventing simultaneous access from interrupts. */
2915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
2918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskPlaceOnUnorderedEventList( List_t * pxEventList, const TickType_t xItemValue, const TickT
2922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
2924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
2926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the event groups implementation. */
2927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != 0 );
2928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Store the item value in the event list item.  It is safe to access the
2930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	event list item here as interrupts won't access the event list item of a
2931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	task that is not in the Blocked state. */
2932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), xItemValue | taskEVENT_LIST_ITEM_VALUE
2933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Place the event list item of the TCB at the end of the appropriate event
2935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	list.  It is safe to access the event list here because it is part of an
2936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	event group implementation - and interrupts don't access event groups
2937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	directly (instead they access them indirectly by pending function calls to
2938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the task level). */
2939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
2942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TIMERS == 1 )
2946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskPlaceOnEventListRestricted( List_t * const pxEventList, TickType_t xTicksToWait, const B
2948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxEventList );
2950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This function should not be called by application code hence the
ARM GAS  /tmp/cc8PdMPr.s 			page 55


2952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		'Restricted' in its name.  It is not part of the public API.  It is
2953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		designed for use by kernel code, and has special calling requirements -
2954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		it should be called with the scheduler suspended. */
2955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Place the event list item of the TCB in the appropriate event list.
2958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		In this case it is assume that this is the only task that is going to
2959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		be waiting on this event list, so the faster vListInsertEnd() function
2960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		can be used in place of vListInsert. */
2961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the task should block indefinitely then set the block time to a
2964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		value that will be recognised as an indefinite delay inside the
2965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddCurrentTaskToDelayedList() function. */
2966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xWaitIndefinitely != pdFALSE )
2967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTicksToWait = portMAX_DELAY;
2969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_DELAY_UNTIL( ( xTickCount + xTicksToWait ) );
2972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
2973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TIMERS */
2976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList )
2979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
2981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
2982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED FROM A CRITICAL SECTION.  It can also be
2984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	called from a critical section within an ISR. */
2985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The event list is sorted in priority order, so the first in the list can
2987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	be removed as it is known to be the highest priority.  Remove the TCB from
2988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the delayed list, and add it to the ready list.
2989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	If an event is for a queue that is locked then this function will never
2991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	get called - the lock count on the queue will get modified instead.  This
2992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	means exclusive access to the event list is guaranteed here.
2993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	This function assumes that a check has already been made to ensure that
2995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxEventList is not empty. */
2996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxUnblockedTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxEventList );
2997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
2998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
3003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
3004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
3006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The delayed and ready lists cannot be accessed, so hold this task
3008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pending until the scheduler is resumed. */
ARM GAS  /tmp/cc8PdMPr.s 			page 56


3009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
3010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Return true if the task removed from the event list has a higher
3015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority than the calling task.  This allows the calling task to know if
3016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		it should force a context switch now. */
3017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pdTRUE;
3018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Mark that a yield is pending in case the user is not using the
3020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		"xHigherPriorityTaskWoken" parameter to an ISR safe FreeRTOS function. */
3021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
3022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
3024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pdFALSE;
3026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configUSE_TICKLESS_IDLE != 0 )
3029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If a task is blocked on a kernel object then xNextTaskUnblockTime
3031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		might be set to the blocked task's time out time.  If the task is
3032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		unblocked for a reason other than a timeout xNextTaskUnblockTime is
3033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		normally left unchanged, because it is automatically reset to a new
3034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		value when the tick count equals xNextTaskUnblockTime.  However if
3035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		tickless idling is used it might be more important to enter sleep mode
3036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		at the earliest possible time - so reset xNextTaskUnblockTime here to
3037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		ensure it is updated at the earliest possible time. */
3038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvResetNextTaskUnblockTime();
3039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
3043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem, const TickType_t xItemValue )
3047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
3049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
3051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the event flags implementation. */
3052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != pdFALSE );
3053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Store the new item value in the event list. */
3055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( pxEventListItem, xItemValue | taskEVENT_LIST_ITEM_VALUE_IN_USE );
3056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Remove the event list form the event flag.  Interrupts do not access
3058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	event flags. */
3059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxUnblockedTCB = ( TCB_t * ) listGET_LIST_ITEM_OWNER( pxEventListItem );
3060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
3061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
3062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Remove the task from the delayed list and add it to the ready list.  The
3064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	scheduler is suspended so interrupts will not be accessing the ready
3065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	lists. */
ARM GAS  /tmp/cc8PdMPr.s 			page 57


3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
3067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
3068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The unblocked task has a priority above that of the calling task, so
3072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		a context switch is required.  This function is called with the
3073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		scheduler suspended so xYieldPending is set so the context switch
3074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		occurs immediately that the scheduler is resumed (unsuspended). */
3075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
3076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskSetTimeOutState( TimeOut_t * const pxTimeOut )
3081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
3083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
3084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xOverflowCount = xNumOfOverflows;
3086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
3087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
3089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskInternalSetTimeOutState( TimeOut_t * const pxTimeOut )
3093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* For internal use only as it does not use a critical section. */
3095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
3096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
3097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut, TickType_t * const pxTicksToWait )
3101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
3103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
3105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
3106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
3108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this block. */
3110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount;
3111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
3112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( INCLUDE_xTaskAbortDelay == 1 )
3114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucDelayAborted != pdFALSE )
3115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The delay was aborted, which is not the same as a time out,
3117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				but has the same result. */
3118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucDelayAborted = pdFALSE;
3119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
3120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
ARM GAS  /tmp/cc8PdMPr.s 			page 58


3123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( INCLUDE_vTaskSuspend == 1 )
3125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( *pxTicksToWait == portMAX_DELAY )
3126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If INCLUDE_vTaskSuspend is set to 1 and the block time
3128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				specified is the maximum block time then the task should block
3129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				indefinitely, and therefore never time out. */
3130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFALSE;
3131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEn
3136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The tick count is greater than the time at which
3138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSetTimeout() was called, but has also overflowed since
3139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSetTimeOut() was called.  It must have wrapped all the way
3140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			around and gone past again. This passed since vTaskSetTimeout()
3141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			was called. */
3142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
3143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with som
3145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Not a genuine timeout. Adjust parameters for time remaining. */
3147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			*pxTicksToWait -= xElapsedTime;
3148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
3149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFALSE;
3150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			*pxTicksToWait = 0;
3154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
3155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
3158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
3160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskMissedYield( void )
3164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldPending = pdTRUE;
3166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetTaskNumber( TaskHandle_t xTask )
3172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
3174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask != NULL )
3177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = ( TCB_t * ) xTask;
3179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxTaskNumber;
ARM GAS  /tmp/cc8PdMPr.s 			page 59


3180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = 0U;
3184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
3187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSetTaskNumber( TaskHandle_t xTask, const UBaseType_t uxHandle )
3195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask != NULL )
3199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = ( TCB_t * ) xTask;
3201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->uxTaskNumber = uxHandle;
3202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
3208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * -----------------------------------------------------------
3209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The Idle task.
3210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * ----------------------------------------------------------
3211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
3212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The portTASK_FUNCTION() macro is used to allow port/compiler specific
3213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
3214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
3215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
3216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
3217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
3218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static portTASK_FUNCTION( prvIdleTask, pvParameters )
3219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop warnings. */
3221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) pvParameters;
3222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/** THIS IS THE RTOS IDLE TASK - WHICH IS CREATED AUTOMATICALLY WHEN THE
3224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	SCHEDULER IS STARTED. **/
3225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* In case a task that has a secure context deletes itself, in which case
3227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the idle task is responsible for deleting the task's secure context, if
3228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	any. */
3229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTASK_CALLS_SECURE_FUNCTIONS();
3230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for( ;; )
3232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* See if any tasks have deleted themselves - if so then the idle task
3234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is responsible for freeing the deleted task's TCB and stack. */
3235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvCheckTasksWaitingTermination();
3236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc8PdMPr.s 			page 60


3237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_PREEMPTION == 0 )
3238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If we are not using preemption we keep forcing a task switch to
3240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			see if any other task has become available.  If we are using
3241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			preemption we don't need to do this as any task becoming available
3242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			will automatically get the processor anyway. */
3243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskYIELD();
3244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_PREEMPTION */
3246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) )
3248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* When using preemption tasks of equal priority will be
3250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			timesliced.  If a task that is sharing the idle priority is ready
3251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			to run then the idle task should yield before the end of the
3252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			timeslice.
3253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			A critical region is not required here as we are just reading from
3255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the list, and an occasional incorrect value will not matter.  If
3256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the ready list at the idle priority contains more than one task
3257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			then a task other than the idle task is ready to execute. */
3258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
3259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskYIELD();
3261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) ) */
3268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_IDLE_HOOK == 1 )
3270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			extern void vApplicationIdleHook( void );
3272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Call the user defined function from within the idle task.  This
3274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			allows the application designer to add background functionality
3275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			without the overhead of a separate task.
3276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			NOTE: vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES,
3277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			CALL A FUNCTION THAT MIGHT BLOCK. */
3278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vApplicationIdleHook();
3279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_IDLE_HOOK */
3281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This conditional compilation should use inequality to 0, not equality
3283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		to 1.  This is to ensure portSUPPRESS_TICKS_AND_SLEEP() is called when
3284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		user defined low power mode	implementations require
3285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configUSE_TICKLESS_IDLE to be set to a value other than 1. */
3286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICKLESS_IDLE != 0 )
3287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		TickType_t xExpectedIdleTime;
3289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* It is not desirable to suspend then resume the scheduler on
3291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			each iteration of the idle task.  Therefore, a preliminary
3292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			test of the expected idle time is performed without the
3293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			scheduler suspended.  The result here is not necessarily
ARM GAS  /tmp/cc8PdMPr.s 			page 61


3294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			valid. */
3295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xExpectedIdleTime = prvGetExpectedIdleTime();
3296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vTaskSuspendAll();
3300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Now the scheduler is suspended, the expected idle
3302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					time can be sampled again, and this time its value can
3303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					be used. */
3304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configASSERT( xNextTaskUnblockTime >= xTickCount );
3305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xExpectedIdleTime = prvGetExpectedIdleTime();
3306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Define the following macro to set xExpectedIdleTime to 0
3308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if the application does not want
3309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portSUPPRESS_TICKS_AND_SLEEP() to be called. */
3310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configPRE_SUPPRESS_TICKS_AND_SLEEP_PROCESSING( xExpectedIdleTime );
3311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						traceLOW_POWER_IDLE_BEGIN();
3315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime );
3316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						traceLOW_POWER_IDLE_END();
3317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
3319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) xTaskResumeAll();
3324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TICKLESS_IDLE */
3331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TICKLESS_IDLE != 0 )
3336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eSleepModeStatus eTaskConfirmSleepModeStatus( void )
3338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The idle task exists in addition to the application tasks. */
3340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const UBaseType_t uxNonApplicationTasks = 1;
3341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eSleepModeStatus eReturn = eStandardSleep;
3342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &xPendingReadyList ) != 0 )
3344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A task was made ready while the scheduler was suspended. */
3346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eReturn = eAbortSleep;
3347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( xYieldPending != pdFALSE )
3349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A yield was pended while the scheduler was suspended. */
ARM GAS  /tmp/cc8PdMPr.s 			page 62


3351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eReturn = eAbortSleep;
3352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If all the tasks are in the suspended list (which might mean they
3356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			have an infinite block time rather than actually being suspended)
3357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			then it is safe to turn all clocks off and just wait for external
3358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			interrupts. */
3359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == ( uxCurrentNumberOfTasks - uxNonApplicatio
3360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				eReturn = eNoTasksWaitingTimeout;
3362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return eReturn;
3370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
3373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSetThreadLocalStoragePointer( TaskHandle_t xTaskToSet, BaseType_t xIndex, void *pvValue 
3378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSet );
3384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
3385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void *pvTaskGetThreadLocalStoragePointer( TaskHandle_t xTaskToQuery, BaseType_t xIndex )
3394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void *pvReturn = NULL;
3396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToQuery );
3401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
3402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pvReturn = NULL;
3406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc8PdMPr.s 			page 63


3408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pvReturn;
3409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( portUSING_MPU_WRAPPERS == 1 )
3415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskAllocateMPURegions( TaskHandle_t xTaskToModify, const MemoryRegion_t * const xRegions )
3417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If null is passed in here then we are modifying the MPU settings of
3421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the calling task. */
3422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTaskToModify );
3423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxTCB->xMPUSettings ), xRegions, NULL, 0 );
3425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
3428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseTaskLists( void )
3431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxPriority;
3433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriorit
3435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
3437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList1 );
3440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
3441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
3442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInitialise( &xTasksWaitingTermination );
3446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
3450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInitialise( &xSuspendedTaskList );
3452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskSuspend */
3454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
3456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	using list2. */
3457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxDelayedTaskList = &xDelayedTaskList1;
3458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
3459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvCheckTasksWaitingTermination( void )
3463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc8PdMPr.s 			page 64


3465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/** THIS FUNCTION IS CALLED FROM THE RTOS IDLE TASK **/
3466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		TCB_t *pxTCB;
3470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* uxDeletedTasksWaitingCleanUp is used to prevent vTaskSuspendAll()
3472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		being called too often in the idle task. */
3473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
3474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
3476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) );
3478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
3479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
3480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxDeletedTasksWaitingCleanUp;
3481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
3483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvDeleteTCB( pxTCB );
3485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TRACE_FACILITY == 1 )
3492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskGetInfo( TaskHandle_t xTask, TaskStatus_t *pxTaskStatus, BaseType_t xGetFreeStackSpace, 
3494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* xTask is NULL then get the state of the calling task. */
3498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->xHandle = ( TaskHandle_t ) pxTCB;
3501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB->pcTaskName [ 0 ] );
3502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
3503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->pxStackBase = pxTCB->pxStack;
3504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
3505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_MUTEXES == 1 )
3507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->uxBasePriority = pxTCB->uxBasePriority;
3509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->uxBasePriority = 0;
3513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
3517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = pxTCB->ulRunTimeCounter;
3519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/cc8PdMPr.s 			page 65


3522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = 0;
3523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Obtaining the task state is a little fiddly, so is only done if the
3527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		value of eState passed into this function is eInvalid - otherwise the
3528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		state is just set to whatever is passed in. */
3529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( eState != eInvalid )
3530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
3532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->eCurrentState = eRunning;
3534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->eCurrentState = eState;
3538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
3540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If the task is in the suspended list then there is a
3542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					chance it is actually just blocked indefinitely - so really
3543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					it should be reported as being in the Blocked state. */
3544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( eState == eSuspended )
3545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						vTaskSuspendAll();
3547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
3548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
3549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
3550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								pxTaskStatus->eCurrentState = eBlocked;
3551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
3552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
3553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						( void ) xTaskResumeAll();
3554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif /* INCLUDE_vTaskSuspend */
3557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->eCurrentState = eTaskGetState( pxTCB );
3562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Obtaining the stack space takes some time, so the xGetFreeStackSpace
3565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		parameter is provided to allow it to be skipped. */
3566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xGetFreeStackSpace != pdFALSE )
3567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( portSTACK_GROWTH > 0 )
3569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxEndOfSt
3571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else
3573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxStack )
3575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
3577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
ARM GAS  /tmp/cc8PdMPr.s 			page 66


3579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->usStackHighWaterMark = 0;
3581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
3590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configLIST_VOLATILE TCB_t *pxNextTCB, *pxFirstTCB;
3592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTask = 0;
3593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
3595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
3597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Populate an TaskStatus_t structure within the
3599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatusArray array for each task that is referenced from
3600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxList.  See the definition of TaskStatus_t in task.h for the
3601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			meaning of each TaskStatus_t structure member. */
3602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			do
3603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
3605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
3606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxTask++;
3607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
3608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxTask;
3615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) )
3621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static uint16_t prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte )
3623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulCount = 0U;
3625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		while( *pucStackByte == ( uint8_t ) tskSTACK_FILL_BYTE )
3627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucStackByte -= portSTACK_GROWTH;
3629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulCount++;
3630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		ulCount /= ( uint32_t ) sizeof( StackType_t ); /*lint !e961 Casting is not redundant on smaller a
3633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return ( uint16_t ) ulCount;
3635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/cc8PdMPr.s 			page 67


3636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) ) */
3638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark == 1 )
3641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetStackHighWaterMark( TaskHandle_t xTask )
3643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t *pucEndOfStack;
3646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
3647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if portSTACK_GROWTH < 0
3651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
3653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxEndOfStack;
3657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxReturn = ( UBaseType_t ) prvTaskCheckFreeStackSpace( pucEndOfStack );
3661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
3663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskGetStackHighWaterMark */
3666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
3669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB )
3671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
3673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		above the vPortFree() calls.  The call is also used by ports/demos that
3674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		want to allocate and clean RAM statically. */
3675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAN_UP_TCB( pxTCB );
3676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Free up the memory allocated by the scheduler for the task.  It is up
3678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		to the task to free any memory allocated at the application level. */
3679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
3680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
3682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
3684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) && ( p
3686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The task can only have been allocated dynamically - free both
3688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the stack and TCB. */
3689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTCB->pxStack );
3690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTCB );
3691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated 
ARM GAS  /tmp/cc8PdMPr.s 			page 68


3693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The task could have been allocated statically or dynamically, so
3695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			check what was statically allocated before trying to free the
3696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			memory. */
3697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
3698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Both the stack and TCB were allocated dynamically, so both
3700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				must be freed. */
3701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB->pxStack );
3702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
3703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
3705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only the stack was statically allocated, so the TCB is the
3707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				only memory that must be freed. */
3708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
3709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Neither the stack nor the TCB were allocated dynamically, so
3713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				nothing needs to be freed. */
3714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
3715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
3719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
3722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvResetNextTaskUnblockTime( void )
3725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 114              		.loc 1 3725 1 is_stmt 1 view -0
 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 0
 117              		@ frame_needed = 0, uses_anonymous_args = 0
 118              		@ link register save eliminated.
3726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
 119              		.loc 1 3726 1 view .LVU26
3727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 120              		.loc 1 3728 2 view .LVU27
 121              		.loc 1 3728 6 is_stmt 0 view .LVU28
 122 0000 084B     		ldr	r3, .L15
 123 0002 1B68     		ldr	r3, [r3]
 124 0004 1B68     		ldr	r3, [r3]
 125              		.loc 1 3728 45 view .LVU29
 126 0006 002B     		cmp	r3, #0
 127 0008 04D1     		bne	.L13
3729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
3731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the maximum possible value so it is	extremely unlikely that the
3732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
3733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		there is an item in the delayed list. */
3734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
 128              		.loc 1 3734 3 is_stmt 1 view .LVU30
ARM GAS  /tmp/cc8PdMPr.s 			page 69


 129              		.loc 1 3734 24 is_stmt 0 view .LVU31
 130 000a 074B     		ldr	r3, .L15+4
 131 000c 0122     		movs	r2, #1
 132 000e 5242     		rsbs	r2, r2, #0
 133 0010 1A60     		str	r2, [r3]
 134              	.L12:
3735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
3737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The new current delayed list is not empty, get the value of
3739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the item at the head of the delayed list.  This is the time at
3740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		which the task at the head of the delayed list should be removed
3741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from the Blocked state. */
3742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( pxTCB ) = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
3743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
3744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 135              		.loc 1 3745 1 view .LVU32
 136              		@ sp needed
 137 0012 7047     		bx	lr
 138              	.L13:
3742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 139              		.loc 1 3742 3 is_stmt 1 view .LVU33
3742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 140              		.loc 1 3742 27 is_stmt 0 view .LVU34
 141 0014 034B     		ldr	r3, .L15
 142 0016 1B68     		ldr	r3, [r3]
 143 0018 DB68     		ldr	r3, [r3, #12]
3742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 144              		.loc 1 3742 13 view .LVU35
 145 001a DB68     		ldr	r3, [r3, #12]
 146              	.LVL8:
3743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 147              		.loc 1 3743 3 is_stmt 1 view .LVU36
3743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 148              		.loc 1 3743 26 is_stmt 0 view .LVU37
 149 001c 5A68     		ldr	r2, [r3, #4]
3743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 150              		.loc 1 3743 24 view .LVU38
 151 001e 024B     		ldr	r3, .L15+4
 152              	.LVL9:
3743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 153              		.loc 1 3743 24 view .LVU39
 154 0020 1A60     		str	r2, [r3]
 155              		.loc 1 3745 1 view .LVU40
 156 0022 F6E7     		b	.L12
 157              	.L16:
 158              		.align	2
 159              	.L15:
 160 0024 00000000 		.word	.LANCHOR2
 161 0028 00000000 		.word	.LANCHOR3
 162              		.cfi_endproc
 163              	.LFE35:
 165              		.section	.text.prvInitialiseNewTask,"ax",%progbits
 166              		.align	1
 167              		.syntax unified
 168              		.code	16
ARM GAS  /tmp/cc8PdMPr.s 			page 70


 169              		.thumb_func
 170              		.fpu softvfp
 172              	prvInitialiseNewTask:
 173              	.LVL10:
 174              	.LFB2:
 825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** StackType_t *pxTopOfStack;
 175              		.loc 1 825 1 is_stmt 1 view -0
 176              		.cfi_startproc
 177              		@ args = 16, pretend = 0, frame = 8
 178              		@ frame_needed = 0, uses_anonymous_args = 0
 825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** StackType_t *pxTopOfStack;
 179              		.loc 1 825 1 is_stmt 0 view .LVU42
 180 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 181              	.LCFI0:
 182              		.cfi_def_cfa_offset 20
 183              		.cfi_offset 4, -20
 184              		.cfi_offset 5, -16
 185              		.cfi_offset 6, -12
 186              		.cfi_offset 7, -8
 187              		.cfi_offset 14, -4
 188 0002 83B0     		sub	sp, sp, #12
 189              	.LCFI1:
 190              		.cfi_def_cfa_offset 32
 191 0004 0090     		str	r0, [sp]
 192 0006 0193     		str	r3, [sp, #4]
 193 0008 089C     		ldr	r4, [sp, #32]
 194 000a 0A9E     		ldr	r6, [sp, #40]
 826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t x;
 195              		.loc 1 826 1 is_stmt 1 view .LVU43
 827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 196              		.loc 1 827 1 view .LVU44
 857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 197              		.loc 1 857 3 view .LVU45
 857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 198              		.loc 1 857 36 is_stmt 0 view .LVU46
 199 000c 1C4B     		ldr	r3, .L24
 200              	.LVL11:
 857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 201              		.loc 1 857 36 view .LVU47
 202 000e 9C46     		mov	ip, r3
 203 0010 6244     		add	r2, r2, ip
 204              	.LVL12:
 857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 205              		.loc 1 857 36 view .LVU48
 206 0012 9200     		lsls	r2, r2, #2
 207              	.LVL13:
 857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 208              		.loc 1 857 16 view .LVU49
 209 0014 336B     		ldr	r3, [r6, #48]
 210 0016 9C46     		mov	ip, r3
 211 0018 6244     		add	r2, r2, ip
 212              	.LVL14:
 858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 213              		.loc 1 858 3 is_stmt 1 view .LVU50
 858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 214              		.loc 1 858 81 is_stmt 0 view .LVU51
 215 001a 0723     		movs	r3, #7
ARM GAS  /tmp/cc8PdMPr.s 			page 71


 216 001c 9A43     		bics	r2, r3
 217              	.LVL15:
 858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 218              		.loc 1 858 81 view .LVU52
 219 001e 1700     		movs	r7, r2
 220              	.LVL16:
 861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 221              		.loc 1 861 3 is_stmt 1 view .LVU53
 861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 222              		.loc 1 861 124 view .LVU54
 885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 223              		.loc 1 885 2 view .LVU55
 885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 224              		.loc 1 885 9 is_stmt 0 view .LVU56
 225 0020 0023     		movs	r3, #0
 226              	.LVL17:
 227              	.L18:
 885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 228              		.loc 1 885 2 discriminator 1 view .LVU57
 229 0022 0F2B     		cmp	r3, #15
 230 0024 07D8     		bhi	.L19
 887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 231              		.loc 1 887 3 is_stmt 1 view .LVU58
 887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 232              		.loc 1 887 37 is_stmt 0 view .LVU59
 233 0026 C85C     		ldrb	r0, [r1, r3]
 887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 234              		.loc 1 887 29 view .LVU60
 235 0028 F218     		adds	r2, r6, r3
 236 002a 3432     		adds	r2, r2, #52
 237 002c 1070     		strb	r0, [r2]
 892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 238              		.loc 1 892 3 is_stmt 1 view .LVU61
 892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 239              		.loc 1 892 5 is_stmt 0 view .LVU62
 240 002e 0028     		cmp	r0, #0
 241 0030 01D0     		beq	.L19
 898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 242              		.loc 1 898 28 is_stmt 1 discriminator 2 view .LVU63
 885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 243              		.loc 1 885 76 is_stmt 0 discriminator 2 view .LVU64
 244 0032 0133     		adds	r3, r3, #1
 245              	.LVL18:
 885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 246              		.loc 1 885 76 discriminator 2 view .LVU65
 247 0034 F5E7     		b	.L18
 248              	.L19:
 904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 249              		.loc 1 904 2 is_stmt 1 view .LVU66
 904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 250              		.loc 1 904 54 is_stmt 0 view .LVU67
 251 0036 4323     		movs	r3, #67
 252              	.LVL19:
 904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 253              		.loc 1 904 54 view .LVU68
 254 0038 0022     		movs	r2, #0
 255 003a F254     		strb	r2, [r6, r3]
ARM GAS  /tmp/cc8PdMPr.s 			page 72


 908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 256              		.loc 1 908 2 is_stmt 1 view .LVU69
 908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 257              		.loc 1 908 4 is_stmt 0 view .LVU70
 258 003c 062C     		cmp	r4, #6
 259 003e 00D9     		bls	.L21
 910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 260              		.loc 1 910 14 view .LVU71
 261 0040 0624     		movs	r4, #6
 262              	.L21:
 263              	.LVL20:
 914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 264              		.loc 1 914 27 is_stmt 1 view .LVU72
 917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 265              		.loc 1 917 2 view .LVU73
 917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 266              		.loc 1 917 23 is_stmt 0 view .LVU74
 267 0042 F462     		str	r4, [r6, #44]
 920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 268              		.loc 1 920 3 is_stmt 1 view .LVU75
 920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 269              		.loc 1 920 28 is_stmt 0 view .LVU76
 270 0044 7464     		str	r4, [r6, #68]
 921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 271              		.loc 1 921 3 is_stmt 1 view .LVU77
 921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 272              		.loc 1 921 27 is_stmt 0 view .LVU78
 273 0046 0025     		movs	r5, #0
 274 0048 B564     		str	r5, [r6, #72]
 925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 275              		.loc 1 925 2 is_stmt 1 view .LVU79
 276 004a 301D     		adds	r0, r6, #4
 277 004c FFF7FEFF 		bl	vListInitialiseItem
 278              	.LVL21:
 926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 279              		.loc 1 926 2 view .LVU80
 280 0050 3000     		movs	r0, r6
 281 0052 1830     		adds	r0, r0, #24
 282 0054 FFF7FEFF 		bl	vListInitialiseItem
 283              	.LVL22:
 930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 284              		.loc 1 930 2 view .LVU81
 285 0058 3661     		str	r6, [r6, #16]
 933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 286              		.loc 1 933 2 view .LVU82
 287 005a 0723     		movs	r3, #7
 288 005c 1C1B     		subs	r4, r3, r4
 289              	.LVL23:
 933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 290              		.loc 1 933 2 is_stmt 0 view .LVU83
 291 005e B461     		str	r4, [r6, #24]
 934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 292              		.loc 1 934 2 is_stmt 1 view .LVU84
 293 0060 7662     		str	r6, [r6, #36]
 961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 294              		.loc 1 961 3 view .LVU85
 976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
ARM GAS  /tmp/cc8PdMPr.s 			page 73


 295              		.loc 1 976 3 view .LVU86
 976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 296              		.loc 1 976 29 is_stmt 0 view .LVU87
 297 0062 F564     		str	r5, [r6, #76]
 977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 298              		.loc 1 977 3 is_stmt 1 view .LVU88
 977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 299              		.loc 1 977 27 is_stmt 0 view .LVU89
 300 0064 4933     		adds	r3, r3, #73
 301 0066 F554     		strb	r5, [r6, r3]
1004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 302              		.loc 1 1004 3 is_stmt 1 view .LVU90
1004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 303              		.loc 1 1004 28 is_stmt 0 view .LVU91
 304 0068 019A     		ldr	r2, [sp, #4]
 305 006a 0099     		ldr	r1, [sp]
 306 006c 3800     		movs	r0, r7
 307 006e FFF7FEFF 		bl	pxPortInitialiseStack
 308              	.LVL24:
1004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 309              		.loc 1 1004 26 view .LVU92
 310 0072 3060     		str	r0, [r6]
1008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 311              		.loc 1 1008 2 is_stmt 1 view .LVU93
1008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 312              		.loc 1 1008 4 is_stmt 0 view .LVU94
 313 0074 099B     		ldr	r3, [sp, #36]
 314 0076 002B     		cmp	r3, #0
 315 0078 00D0     		beq	.L17
1012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 316              		.loc 1 1012 3 is_stmt 1 view .LVU95
1012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 317              		.loc 1 1012 18 is_stmt 0 view .LVU96
 318 007a 1E60     		str	r6, [r3]
1016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 319              		.loc 1 1016 27 is_stmt 1 view .LVU97
 320              	.L17:
1018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 321              		.loc 1 1018 1 is_stmt 0 view .LVU98
 322 007c 03B0     		add	sp, sp, #12
 323              	.LVL25:
1018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 324              		.loc 1 1018 1 view .LVU99
 325              		@ sp needed
 326              	.LVL26:
1018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 327              		.loc 1 1018 1 view .LVU100
 328 007e F0BD     		pop	{r4, r5, r6, r7, pc}
 329              	.L25:
 330              		.align	2
 331              	.L24:
 332 0080 FFFFFF3F 		.word	1073741823
 333              		.cfi_endproc
 334              	.LFE2:
 336              		.section	.text.prvInitialiseTaskLists,"ax",%progbits
 337              		.align	1
 338              		.syntax unified
ARM GAS  /tmp/cc8PdMPr.s 			page 74


 339              		.code	16
 340              		.thumb_func
 341              		.fpu softvfp
 343              	prvInitialiseTaskLists:
 344              	.LFB32:
3431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxPriority;
 345              		.loc 1 3431 1 is_stmt 1 view -0
 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 0
 348              		@ frame_needed = 0, uses_anonymous_args = 0
 349 0000 70B5     		push	{r4, r5, r6, lr}
 350              	.LCFI2:
 351              		.cfi_def_cfa_offset 16
 352              		.cfi_offset 4, -16
 353              		.cfi_offset 5, -12
 354              		.cfi_offset 6, -8
 355              		.cfi_offset 14, -4
3432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 356              		.loc 1 3432 1 view .LVU102
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 357              		.loc 1 3434 2 view .LVU103
 358              	.LVL27:
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 359              		.loc 1 3434 18 is_stmt 0 view .LVU104
 360 0002 0024     		movs	r4, #0
 361              	.LVL28:
 362              	.L27:
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 363              		.loc 1 3434 2 discriminator 1 view .LVU105
 364 0004 062C     		cmp	r4, #6
 365 0006 08D8     		bhi	.L29
3436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 366              		.loc 1 3436 3 is_stmt 1 discriminator 3 view .LVU106
 367 0008 A300     		lsls	r3, r4, #2
 368 000a 1B19     		adds	r3, r3, r4
 369 000c 9800     		lsls	r0, r3, #2
 370 000e 0E4B     		ldr	r3, .L30
 371 0010 C018     		adds	r0, r0, r3
 372 0012 FFF7FEFF 		bl	vListInitialise
 373              	.LVL29:
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 374              		.loc 1 3434 101 is_stmt 0 discriminator 3 view .LVU107
 375 0016 0134     		adds	r4, r4, #1
 376              	.LVL30:
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 377              		.loc 1 3434 101 discriminator 3 view .LVU108
 378 0018 F4E7     		b	.L27
 379              	.L29:
3439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
 380              		.loc 1 3439 2 is_stmt 1 view .LVU109
 381 001a 0C4D     		ldr	r5, .L30+4
 382 001c 2800     		movs	r0, r5
 383 001e FFF7FEFF 		bl	vListInitialise
 384              	.LVL31:
3440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
 385              		.loc 1 3440 2 view .LVU110
 386 0022 0B4C     		ldr	r4, .L30+8
ARM GAS  /tmp/cc8PdMPr.s 			page 75


 387              	.LVL32:
3440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
 388              		.loc 1 3440 2 is_stmt 0 view .LVU111
 389 0024 2000     		movs	r0, r4
 390 0026 FFF7FEFF 		bl	vListInitialise
 391              	.LVL33:
3441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 392              		.loc 1 3441 2 is_stmt 1 view .LVU112
 393 002a 0A48     		ldr	r0, .L30+12
 394 002c FFF7FEFF 		bl	vListInitialise
 395              	.LVL34:
3445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 396              		.loc 1 3445 3 view .LVU113
 397 0030 0948     		ldr	r0, .L30+16
 398 0032 FFF7FEFF 		bl	vListInitialise
 399              	.LVL35:
3451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 400              		.loc 1 3451 3 view .LVU114
 401 0036 0948     		ldr	r0, .L30+20
 402 0038 FFF7FEFF 		bl	vListInitialise
 403              	.LVL36:
3457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 404              		.loc 1 3457 2 view .LVU115
3457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 405              		.loc 1 3457 20 is_stmt 0 view .LVU116
 406 003c 084B     		ldr	r3, .L30+24
 407 003e 1D60     		str	r5, [r3]
3458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 408              		.loc 1 3458 2 is_stmt 1 view .LVU117
3458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 409              		.loc 1 3458 28 is_stmt 0 view .LVU118
 410 0040 084B     		ldr	r3, .L30+28
 411 0042 1C60     		str	r4, [r3]
3459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 412              		.loc 1 3459 1 view .LVU119
 413              		@ sp needed
 414 0044 70BD     		pop	{r4, r5, r6, pc}
 415              	.L31:
 416 0046 C046     		.align	2
 417              	.L30:
 418 0048 00000000 		.word	pxReadyTasksLists
 419 004c 00000000 		.word	.LANCHOR4
 420 0050 00000000 		.word	.LANCHOR5
 421 0054 00000000 		.word	.LANCHOR1
 422 0058 00000000 		.word	.LANCHOR6
 423 005c 00000000 		.word	.LANCHOR0
 424 0060 00000000 		.word	.LANCHOR2
 425 0064 00000000 		.word	.LANCHOR7
 426              		.cfi_endproc
 427              	.LFE32:
 429              		.section	.text.prvAddNewTaskToReadyList,"ax",%progbits
 430              		.align	1
 431              		.syntax unified
 432              		.code	16
 433              		.thumb_func
 434              		.fpu softvfp
 436              	prvAddNewTaskToReadyList:
ARM GAS  /tmp/cc8PdMPr.s 			page 76


 437              	.LVL37:
 438              	.LFB3:
1022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
 439              		.loc 1 1022 1 is_stmt 1 view -0
 440              		.cfi_startproc
 441              		@ args = 0, pretend = 0, frame = 0
 442              		@ frame_needed = 0, uses_anonymous_args = 0
1022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
 443              		.loc 1 1022 1 is_stmt 0 view .LVU121
 444 0000 10B5     		push	{r4, lr}
 445              	.LCFI3:
 446              		.cfi_def_cfa_offset 8
 447              		.cfi_offset 4, -8
 448              		.cfi_offset 14, -4
 449 0002 0400     		movs	r4, r0
1025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 450              		.loc 1 1025 2 is_stmt 1 view .LVU122
 451 0004 FFF7FEFF 		bl	vPortEnterCritical
 452              	.LVL38:
1027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 453              		.loc 1 1027 3 view .LVU123
1027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 454              		.loc 1 1027 25 is_stmt 0 view .LVU124
 455 0008 1F4A     		ldr	r2, .L40
 456 000a 1368     		ldr	r3, [r2]
 457 000c 0133     		adds	r3, r3, #1
 458 000e 1360     		str	r3, [r2]
1028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 459              		.loc 1 1028 3 is_stmt 1 view .LVU125
1028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 460              		.loc 1 1028 20 is_stmt 0 view .LVU126
 461 0010 1E4B     		ldr	r3, .L40+4
 462 0012 1B68     		ldr	r3, [r3]
1028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 463              		.loc 1 1028 5 view .LVU127
 464 0014 002B     		cmp	r3, #0
 465 0016 0CD0     		beq	.L37
1051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 466              		.loc 1 1051 4 is_stmt 1 view .LVU128
1051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 467              		.loc 1 1051 26 is_stmt 0 view .LVU129
 468 0018 1D4B     		ldr	r3, .L40+8
 469 001a 1B68     		ldr	r3, [r3]
1051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 470              		.loc 1 1051 6 view .LVU130
 471 001c 002B     		cmp	r3, #0
 472 001e 0DD1     		bne	.L34
1053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 473              		.loc 1 1053 5 is_stmt 1 view .LVU131
1053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 474              		.loc 1 1053 21 is_stmt 0 view .LVU132
 475 0020 1A4B     		ldr	r3, .L40+4
 476 0022 1B68     		ldr	r3, [r3]
 477 0024 DB6A     		ldr	r3, [r3, #44]
1053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 478              		.loc 1 1053 7 view .LVU133
 479 0026 E26A     		ldr	r2, [r4, #44]
ARM GAS  /tmp/cc8PdMPr.s 			page 77


 480 0028 9342     		cmp	r3, r2
 481 002a 07D8     		bhi	.L34
1055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 482              		.loc 1 1055 6 is_stmt 1 view .LVU134
1055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 483              		.loc 1 1055 19 is_stmt 0 view .LVU135
 484 002c 174B     		ldr	r3, .L40+4
 485 002e 1C60     		str	r4, [r3]
 486 0030 04E0     		b	.L34
 487              	.L37:
1032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 488              		.loc 1 1032 4 is_stmt 1 view .LVU136
1032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 489              		.loc 1 1032 17 is_stmt 0 view .LVU137
 490 0032 164B     		ldr	r3, .L40+4
 491 0034 1C60     		str	r4, [r3]
1034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 492              		.loc 1 1034 4 is_stmt 1 view .LVU138
1034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 493              		.loc 1 1034 31 is_stmt 0 view .LVU139
 494 0036 1368     		ldr	r3, [r2]
1034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 495              		.loc 1 1034 6 view .LVU140
 496 0038 012B     		cmp	r3, #1
 497 003a 1FD0     		beq	.L38
 498              	.L34:
1064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 499              		.loc 1 1064 29 is_stmt 1 view .LVU141
1068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 500              		.loc 1 1068 3 view .LVU142
1068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 501              		.loc 1 1068 15 is_stmt 0 view .LVU143
 502 003c 154A     		ldr	r2, .L40+12
 503 003e 1368     		ldr	r3, [r2]
 504 0040 0133     		adds	r3, r3, #1
 505 0042 1360     		str	r3, [r2]
1076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 506              		.loc 1 1076 31 is_stmt 1 view .LVU144
1078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 507              		.loc 1 1078 3 view .LVU145
1078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 508              		.loc 1 1078 3 view .LVU146
 509 0044 E26A     		ldr	r2, [r4, #44]
 510 0046 144B     		ldr	r3, .L40+16
 511 0048 1B68     		ldr	r3, [r3]
 512 004a 9A42     		cmp	r2, r3
 513 004c 01D9     		bls	.L35
1078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 514              		.loc 1 1078 3 discriminator 1 view .LVU147
 515 004e 124B     		ldr	r3, .L40+16
 516 0050 1A60     		str	r2, [r3]
 517              	.L35:
1078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 518              		.loc 1 1078 3 discriminator 3 view .LVU148
1078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 519              		.loc 1 1078 3 discriminator 3 view .LVU149
 520 0052 211D     		adds	r1, r4, #4
ARM GAS  /tmp/cc8PdMPr.s 			page 78


 521 0054 9300     		lsls	r3, r2, #2
 522 0056 9B18     		adds	r3, r3, r2
 523 0058 9800     		lsls	r0, r3, #2
 524 005a 104B     		ldr	r3, .L40+20
 525 005c C018     		adds	r0, r0, r3
 526 005e FFF7FEFF 		bl	vListInsertEnd
 527              	.LVL39:
1078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 528              		.loc 1 1078 36 discriminator 3 view .LVU150
1080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 529              		.loc 1 1080 3 discriminator 3 view .LVU151
1082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 530              		.loc 1 1082 2 discriminator 3 view .LVU152
 531 0062 FFF7FEFF 		bl	vPortExitCritical
 532              	.LVL40:
1084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 533              		.loc 1 1084 2 discriminator 3 view .LVU153
1084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 534              		.loc 1 1084 24 is_stmt 0 discriminator 3 view .LVU154
 535 0066 0A4B     		ldr	r3, .L40+8
 536 0068 1B68     		ldr	r3, [r3]
1084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 537              		.loc 1 1084 4 discriminator 3 view .LVU155
 538 006a 002B     		cmp	r3, #0
 539 006c 05D0     		beq	.L32
1088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 540              		.loc 1 1088 3 is_stmt 1 view .LVU156
1088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 541              		.loc 1 1088 19 is_stmt 0 view .LVU157
 542 006e 074B     		ldr	r3, .L40+4
 543 0070 1B68     		ldr	r3, [r3]
 544 0072 DA6A     		ldr	r2, [r3, #44]
1088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 545              		.loc 1 1088 42 view .LVU158
 546 0074 E36A     		ldr	r3, [r4, #44]
1088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 547              		.loc 1 1088 5 view .LVU159
 548 0076 9A42     		cmp	r2, r3
 549 0078 03D3     		bcc	.L39
 550              	.L32:
1101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 551              		.loc 1 1101 1 view .LVU160
 552              		@ sp needed
 553              	.LVL41:
1101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 554              		.loc 1 1101 1 view .LVU161
 555 007a 10BD     		pop	{r4, pc}
 556              	.LVL42:
 557              	.L38:
1039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 558              		.loc 1 1039 5 is_stmt 1 view .LVU162
 559 007c FFF7FEFF 		bl	prvInitialiseTaskLists
 560              	.LVL43:
 561 0080 DCE7     		b	.L34
 562              	.L39:
1090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 563              		.loc 1 1090 4 view .LVU163
ARM GAS  /tmp/cc8PdMPr.s 			page 79


 564 0082 FFF7FEFF 		bl	vPortYield
 565              	.LVL44:
1099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 566              		.loc 1 1099 27 view .LVU164
1101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 567              		.loc 1 1101 1 is_stmt 0 view .LVU165
 568 0086 F8E7     		b	.L32
 569              	.L41:
 570              		.align	2
 571              	.L40:
 572 0088 00000000 		.word	.LANCHOR8
 573 008c 00000000 		.word	.LANCHOR9
 574 0090 00000000 		.word	.LANCHOR10
 575 0094 00000000 		.word	.LANCHOR11
 576 0098 00000000 		.word	.LANCHOR12
 577 009c 00000000 		.word	pxReadyTasksLists
 578              		.cfi_endproc
 579              	.LFE3:
 581              		.section	.text.prvDeleteTCB,"ax",%progbits
 582              		.align	1
 583              		.syntax unified
 584              		.code	16
 585              		.thumb_func
 586              		.fpu softvfp
 588              	prvDeleteTCB:
 589              	.LVL45:
 590              	.LFB34:
3671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
 591              		.loc 1 3671 2 is_stmt 1 view -0
 592              		.cfi_startproc
 593              		@ args = 0, pretend = 0, frame = 0
 594              		@ frame_needed = 0, uses_anonymous_args = 0
3671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
 595              		.loc 1 3671 2 is_stmt 0 view .LVU167
 596 0000 10B5     		push	{r4, lr}
 597              	.LCFI4:
 598              		.cfi_def_cfa_offset 8
 599              		.cfi_offset 4, -8
 600              		.cfi_offset 14, -4
 601 0002 0400     		movs	r4, r0
3675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 602              		.loc 1 3675 3 is_stmt 1 view .LVU168
3697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 603              		.loc 1 3697 4 view .LVU169
3697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 604              		.loc 1 3697 13 is_stmt 0 view .LVU170
 605 0004 5123     		movs	r3, #81
 606 0006 C35C     		ldrb	r3, [r0, r3]
3697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 607              		.loc 1 3697 6 view .LVU171
 608 0008 002B     		cmp	r3, #0
 609 000a 05D0     		beq	.L47
3704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 610              		.loc 1 3704 9 is_stmt 1 view .LVU172
3704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 611              		.loc 1 3704 11 is_stmt 0 view .LVU173
 612 000c 012B     		cmp	r3, #1
ARM GAS  /tmp/cc8PdMPr.s 			page 80


 613 000e 0AD0     		beq	.L48
3714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 614              		.loc 1 3714 5 is_stmt 1 view .LVU174
 615 0010 022B     		cmp	r3, #2
 616 0012 07D0     		beq	.L42
3714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 617              		.loc 1 3714 5 discriminator 1 view .LVU175
 618              		.syntax divided
 619              	@ 3714 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 620 0014 72B6     		 cpsid i 
 621              	@ 0 "" 2
 622              		.thumb
 623              		.syntax unified
 624              	.L46:
3714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 625              		.loc 1 3714 5 discriminator 1 view .LVU176
3714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 626              		.loc 1 3714 5 discriminator 1 view .LVU177
 627 0016 FEE7     		b	.L46
 628              	.L47:
3701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
 629              		.loc 1 3701 5 view .LVU178
 630 0018 006B     		ldr	r0, [r0, #48]
 631              	.LVL46:
3701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
 632              		.loc 1 3701 5 is_stmt 0 view .LVU179
 633 001a FFF7FEFF 		bl	vPortFree
 634              	.LVL47:
3702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 635              		.loc 1 3702 5 is_stmt 1 view .LVU180
 636 001e 2000     		movs	r0, r4
 637 0020 FFF7FEFF 		bl	vPortFree
 638              	.LVL48:
 639              	.L42:
3719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 640              		.loc 1 3719 2 is_stmt 0 view .LVU181
 641              		@ sp needed
 642              	.LVL49:
3719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 643              		.loc 1 3719 2 view .LVU182
 644 0024 10BD     		pop	{r4, pc}
 645              	.LVL50:
 646              	.L48:
3708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 647              		.loc 1 3708 5 is_stmt 1 view .LVU183
 648 0026 FFF7FEFF 		bl	vPortFree
 649              	.LVL51:
3708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 650              		.loc 1 3708 5 is_stmt 0 view .LVU184
 651 002a FBE7     		b	.L42
 652              		.cfi_endproc
 653              	.LFE34:
 655              		.section	.text.prvCheckTasksWaitingTermination,"ax",%progbits
 656              		.align	1
 657              		.syntax unified
 658              		.code	16
 659              		.thumb_func
ARM GAS  /tmp/cc8PdMPr.s 			page 81


 660              		.fpu softvfp
 662              	prvCheckTasksWaitingTermination:
 663              	.LFB33:
3463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 664              		.loc 1 3463 1 is_stmt 1 view -0
 665              		.cfi_startproc
 666              		@ args = 0, pretend = 0, frame = 0
 667              		@ frame_needed = 0, uses_anonymous_args = 0
 668 0000 10B5     		push	{r4, lr}
 669              	.LCFI5:
 670              		.cfi_def_cfa_offset 8
 671              		.cfi_offset 4, -8
 672              		.cfi_offset 14, -4
 673              	.LBB2:
3469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 674              		.loc 1 3469 3 view .LVU186
3473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 675              		.loc 1 3473 3 view .LVU187
 676              	.L50:
3473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 677              		.loc 1 3473 39 is_stmt 0 view .LVU188
 678 0002 0D4B     		ldr	r3, .L53
 679 0004 1B68     		ldr	r3, [r3]
3473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 680              		.loc 1 3473 8 view .LVU189
 681 0006 002B     		cmp	r3, #0
 682 0008 15D0     		beq	.L52
3475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 683              		.loc 1 3475 4 is_stmt 1 view .LVU190
 684 000a FFF7FEFF 		bl	vPortEnterCritical
 685              	.LVL52:
3477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 686              		.loc 1 3477 5 view .LVU191
3477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 687              		.loc 1 3477 25 is_stmt 0 view .LVU192
 688 000e 0B4B     		ldr	r3, .L53+4
 689 0010 DB68     		ldr	r3, [r3, #12]
3477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 690              		.loc 1 3477 11 view .LVU193
 691 0012 DC68     		ldr	r4, [r3, #12]
 692              	.LVL53:
3478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
 693              		.loc 1 3478 5 is_stmt 1 view .LVU194
3478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
 694              		.loc 1 3478 14 is_stmt 0 view .LVU195
 695 0014 201D     		adds	r0, r4, #4
 696 0016 FFF7FEFF 		bl	uxListRemove
 697              	.LVL54:
3479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxDeletedTasksWaitingCleanUp;
 698              		.loc 1 3479 5 is_stmt 1 view .LVU196
 699 001a 094A     		ldr	r2, .L53+8
 700 001c 1368     		ldr	r3, [r2]
 701 001e 013B     		subs	r3, r3, #1
 702 0020 1360     		str	r3, [r2]
3480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 703              		.loc 1 3480 5 view .LVU197
 704 0022 054A     		ldr	r2, .L53
ARM GAS  /tmp/cc8PdMPr.s 			page 82


 705 0024 1368     		ldr	r3, [r2]
 706 0026 013B     		subs	r3, r3, #1
 707 0028 1360     		str	r3, [r2]
3482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 708              		.loc 1 3482 4 view .LVU198
 709 002a FFF7FEFF 		bl	vPortExitCritical
 710              	.LVL55:
3484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 711              		.loc 1 3484 4 view .LVU199
 712 002e 2000     		movs	r0, r4
 713 0030 FFF7FEFF 		bl	prvDeleteTCB
 714              	.LVL56:
 715 0034 E5E7     		b	.L50
 716              	.LVL57:
 717              	.L52:
3484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 718              		.loc 1 3484 4 is_stmt 0 view .LVU200
 719              	.LBE2:
3488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 720              		.loc 1 3488 1 view .LVU201
 721              		@ sp needed
 722 0036 10BD     		pop	{r4, pc}
 723              	.L54:
 724              		.align	2
 725              	.L53:
 726 0038 00000000 		.word	.LANCHOR13
 727 003c 00000000 		.word	.LANCHOR6
 728 0040 00000000 		.word	.LANCHOR8
 729              		.cfi_endproc
 730              	.LFE33:
 732              		.section	.text.prvIdleTask,"ax",%progbits
 733              		.align	1
 734              		.syntax unified
 735              		.code	16
 736              		.thumb_func
 737              		.fpu softvfp
 739              	prvIdleTask:
 740              	.LFB31:
3219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop warnings. */
 741              		.loc 1 3219 1 is_stmt 1 view -0
 742              		.cfi_startproc
 743              		@ Volatile: function does not return.
 744              		@ args = 0, pretend = 0, frame = 0
 745              		@ frame_needed = 0, uses_anonymous_args = 0
 746              	.LVL58:
3219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop warnings. */
 747              		.loc 1 3219 1 is_stmt 0 view .LVU203
 748 0000 10B5     		push	{r4, lr}
 749              	.LCFI6:
 750              		.cfi_def_cfa_offset 8
 751              		.cfi_offset 4, -8
 752              		.cfi_offset 14, -4
 753              	.LVL59:
 754              	.L56:
3221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 755              		.loc 1 3221 2 is_stmt 1 view .LVU204
3229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc8PdMPr.s 			page 83


 756              		.loc 1 3229 35 view .LVU205
3231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 757              		.loc 1 3231 2 view .LVU206
3235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 758              		.loc 1 3235 3 view .LVU207
 759 0002 FFF7FEFF 		bl	prvCheckTasksWaitingTermination
 760              	.LVL60:
3258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 761              		.loc 1 3258 4 view .LVU208
3258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 762              		.loc 1 3258 8 is_stmt 0 view .LVU209
 763 0006 034B     		ldr	r3, .L58
 764 0008 1B68     		ldr	r3, [r3]
3258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 765              		.loc 1 3258 6 view .LVU210
 766 000a 012B     		cmp	r3, #1
 767 000c F9D9     		bls	.L56
3260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 768              		.loc 1 3260 5 is_stmt 1 view .LVU211
 769 000e FFF7FEFF 		bl	vPortYield
 770              	.LVL61:
 771 0012 F6E7     		b	.L56
 772              	.L59:
 773              		.align	2
 774              	.L58:
 775 0014 00000000 		.word	pxReadyTasksLists
 776              		.cfi_endproc
 777              	.LFE31:
 779              		.section	.text.prvAddCurrentTaskToDelayedList,"ax",%progbits
 780              		.align	1
 781              		.syntax unified
 782              		.code	16
 783              		.thumb_func
 784              		.fpu softvfp
 786              	prvAddCurrentTaskToDelayedList:
 787              	.LVL62:
 788              	.LFB49:
3746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) )
3749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetCurrentTaskHandle( void )
3751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
3753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* A critical section is not required as this is not called from
3755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		an interrupt and the current TCB will always be the same for any
3756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		individual execution thread. */
3757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pxCurrentTCB;
3758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
3760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) ) */
3763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
ARM GAS  /tmp/cc8PdMPr.s 			page 84


3766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGetSchedulerState( void )
3768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
3770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning == pdFALSE )
3772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = taskSCHEDULER_NOT_STARTED;
3774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = taskSCHEDULER_RUNNING;
3780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = taskSCHEDULER_SUSPENDED;
3784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
3788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) ) */
3791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskPriorityInherit( TaskHandle_t const pxMutexHolder )
3796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = ( TCB_t * ) pxMutexHolder;
3798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
3799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the mutex was given back by an interrupt while the queue was
3801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		locked then the mutex holder might now be NULL.  _RB_ Is this still
3802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		needed as interrupts can no longer use mutexes? */
3803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
3804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the holder of the mutex has a priority below the priority of
3806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the task attempting to obtain the mutex then it will temporarily
3807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			inherit the priority of the task attempting to obtain the mutex. */
3808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
3809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Adjust the mutex holder state to account for its new
3811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				priority.  Only reset the event list item value if the value is
3812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				not being used for anything else. */
3813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VA
3814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIOR
3816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
3818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task being modified is in the ready state it will need
ARM GAS  /tmp/cc8PdMPr.s 			page 85


3823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				to be moved into a new list. */
3824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutex
3825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
3827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxMutexHolderTCB->uxPriority );
3829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
3831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Inherit the priority before being moved into the new list. */
3836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
3837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
3838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
3840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Just inherit the priority. */
3842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
3843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_PRIORITY_INHERIT( pxMutexHolderTCB, pxCurrentTCB->uxPriority );
3846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Inheritance occurred. */
3848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
3849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
3853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The base priority of the mutex holder is lower than the
3855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority of the task attempting to take the mutex, but the
3856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					current priority of the mutex holder is not lower than the
3857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority of the task attempting to take the mutex.
3858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Therefore the mutex holder must have already inherited a
3859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority, but inheritance would have occurred if that had
3860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					not been the case. */
3861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
3862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
3864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
3875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
3878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc8PdMPr.s 			page 86


3880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskPriorityDisinherit( TaskHandle_t const pxMutexHolder )
3883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
3885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
3886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
3888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A task can only have an inherited priority if it holds the mutex.
3890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			If the mutex is held by a task then it cannot be given from an
3891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			interrupt, and if a mutex is given by the holding task then it must
3892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			be the running state task. */
3893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB == pxCurrentTCB );
3894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
3895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
3896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Has the holder of the mutex inherited the priority of another
3898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task? */
3899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
3900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only disinherit if no other mutexes are held. */
3902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
3903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A task can only have an inherited priority if it holds
3905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the mutex.  If the mutex is held by a task then it cannot be
3906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					given from an interrupt, and if a mutex is given by the
3907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					holding task then it must be the running state task.  Remove
3908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the holding task from the ready list. */
3909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
3910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
3912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
3914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Disinherit the priority before adding the task into the
3919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					new	ready list. */
3920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
3921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = pxTCB->uxBasePriority;
3922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Reset the event list item value.  It cannot be in use for
3924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					any other purpose if this task is running, and it must be
3925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					running to give back the mutex. */
3926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( T
3927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
3928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Return true to indicate that a context switch is required.
3930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					This is only actually required in the corner case whereby
3931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					multiple mutexes were held and the mutexes were given back
3932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					in an order different to that in which they were taken.
3933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					If a context switch did not occur when the first mutex was
3934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					returned, even if a task was waiting on it, then a context
3935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					switch should occur when the last mutex is returned whether
3936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					a task is waiting on it or not. */
ARM GAS  /tmp/cc8PdMPr.s 			page 87


3937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
3938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
3940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
3955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
3958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskPriorityDisinheritAfterTimeout( TaskHandle_t const pxMutexHolder, UBaseType_t uxHighestP
3963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
3965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxPriorityUsedOnEntry, uxPriorityToUse;
3966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const UBaseType_t uxOnlyOneMutexHeld = ( UBaseType_t ) 1;
3967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
3969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If pxMutexHolder is not NULL then the holder must hold at least
3971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			one mutex. */
3972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
3973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Determine the priority to which the priority of the task that
3975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			holds the mutex should be set.  This will be the greater of the
3976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			holding task's base priority and the priority of the highest
3977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			priority task that is waiting to obtain the mutex. */
3978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
3979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxPriorityToUse = uxHighestPriorityWaitingTask;
3981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxPriorityToUse = pxTCB->uxBasePriority;
3985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Does the priority need to change? */
3988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxPriority != uxPriorityToUse )
3989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only disinherit if no other mutexes are held.  This is a
3991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				simplification in the priority inheritance implementation.  If
3992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the task that holds the mutex is also holding other mutexes then
3993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the other mutexes may have caused the priority inheritance. */
ARM GAS  /tmp/cc8PdMPr.s 			page 88


3994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
3995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If a task has timed out because it already holds the
3997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mutex it was trying to obtain then it cannot of inherited
3998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					its own priority. */
3999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configASSERT( pxTCB != pxCurrentTCB );
4000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Disinherit the priority, remembering the previous
4002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority to facilitate determining the subject task's
4003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					state. */
4004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
4005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxPriorityUsedOnEntry = pxTCB->uxPriority;
4006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = uxPriorityToUse;
4007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Only reset the event list item value if the value is not
4009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					being used for anything else. */
4010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE
4011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( 
4013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If the running task is not the task that holds the mutex
4020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					then the task that holds the mutex could be in either the
4021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Ready, Blocked or Suspended states.  Only remove the task
4022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					from its current state list if it is in the Ready state as
4023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the task's priority is going to change and there is one
4024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Ready list per priority. */
4025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xState
4026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
4028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							taskRESET_READY_PRIORITY( pxTCB->uxPriority );
4030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						else
4032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
4034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						prvAddTaskToReadyList( pxTCB );
4037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
ARM GAS  /tmp/cc8PdMPr.s 			page 89


4051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskEnterCritical( void )
4065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portDISABLE_INTERRUPTS();
4067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
4069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxCurrentTCB->uxCriticalNesting )++;
4071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* This is not the interrupt safe version of the enter critical
4073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			function so	assert() if it is being called from an interrupt
4074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			context.  Only API functions that end in "FromISR" can be used in an
4075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			interrupt.  Only assert if the critical nesting count is 1 to
4076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			protect against recursive calls if the assert function also uses a
4077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			critical section. */
4078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting == 1 )
4079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portASSERT_IF_IN_ISR();
4081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskExitCritical( void )
4095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
4097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting > 0U )
4099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( pxCurrentTCB->uxCriticalNesting )--;
4101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxCurrentTCB->uxCriticalNesting == 0U )
4103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portENABLE_INTERRUPTS();
4105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/cc8PdMPr.s 			page 90


4108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
4126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName )
4128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	size_t x;
4130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Start by copying the entire string. */
4132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		strcpy( pcBuffer, pcTaskName );
4133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Pad the end of the string with spaces to ensure columns line up when
4135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		printed out. */
4136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for( x = strlen( pcBuffer ); x < ( size_t ) ( configMAX_TASK_NAME_LEN - 1 ); x++ )
4137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pcBuffer[ x ] = ' ';
4139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Terminate. */
4142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pcBuffer[ x ] = 0x00;
4143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Return the new end of string. */
4145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return &( pcBuffer[ x ] );
4146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) */
4149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( config
4152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskList( char * pcWriteBuffer )
4154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	volatile UBaseType_t uxArraySize, x;
4157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	char cStatus;
4158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/*
4160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * PLEASE NOTE:
4161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * scheduler.
ARM GAS  /tmp/cc8PdMPr.s 			page 91


4165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskList() calls uxTaskGetSystemState(), then formats part of the
4167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * uxTaskGetSystemState() output into a human readable table that
4168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * displays task names, states and stack usage.
4169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskList() has a dependency on the sprintf() C library function that
4171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * might bloat the code size, use a lot of stack, and provide different
4172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * results on different platforms.  An alternative, tiny, third party,
4173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * and limited functionality implementation of sprintf() is provided in
4174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * many of the FreeRTOS/Demo sub-directories in a file called
4175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * printf-stdarg.c (note printf-stdarg.c does not provide a full
4176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * snprintf() implementation!).
4177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * through a call to vTaskList().
4181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 */
4182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		*pcWriteBuffer = 0x00;
4186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function is executing. */
4189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  if
4192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		equate to NULL. */
4194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) );
4195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Generate the (binary) data. */
4199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, NULL );
4200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Create a human readable table from the binary data. */
4202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			for( x = 0; x < uxArraySize; x++ )
4203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				switch( pxTaskStatusArray[ x ].eCurrentState )
4205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eRunning:		cStatus = tskRUNNING_CHAR;
4207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eReady:		cStatus = tskREADY_CHAR;
4210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eBlocked:		cStatus = tskBLOCKED_CHAR;
4213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eSuspended:	cStatus = tskSUSPENDED_CHAR;
4216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eDeleted:		cStatus = tskDELETED_CHAR;
4219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					default:			/* Should not get here, but it is included
ARM GAS  /tmp/cc8PdMPr.s 			page 92


4222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										to prevent static checking errors. */
4223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										cStatus = 0x00;
4224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Write the task name to the string, padding with spaces so it
4228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				can be printed in tabular form more easily. */
4229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Write the rest of the string. */
4232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				sprintf( pcWriteBuffer, "\t%c\t%u\t%u\t%u\r\n", cStatus, ( unsigned int ) pxTaskStatusArray[ x 
4233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pcWriteBuffer += strlen( pcWriteBuffer );
4234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( 
4247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
4248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( c
4250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskGetRunTimeStats( char *pcWriteBuffer )
4252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	volatile UBaseType_t uxArraySize, x;
4255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulTotalTime, ulStatsAsPercentage;
4256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_TRACE_FACILITY != 1 )
4258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#error configUSE_TRACE_FACILITY must also be set to 1 in FreeRTOSConfig.h to use vTaskGetRunTime
4260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
4262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/*
4264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * PLEASE NOTE:
4265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * scheduler.
4269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskGetRunTimeStats() calls uxTaskGetSystemState(), then formats part
4271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * of the uxTaskGetSystemState() output into a human readable table that
4272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * displays the amount of time each task has spent in the Running state
4273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * in both absolute and percentage terms.
4274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskGetRunTimeStats() has a dependency on the sprintf() C library
4276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * function that might bloat the code size, use a lot of stack, and
4277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * provide different results on different platforms.  An alternative,
4278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * tiny, third party, and limited functionality implementation of
ARM GAS  /tmp/cc8PdMPr.s 			page 93


4279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * sprintf() is provided in many of the FreeRTOS/Demo sub-directories in
4280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * a file called printf-stdarg.c (note printf-stdarg.c does not provide
4281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * a full snprintf() implementation!).
4282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * through a call to vTaskGetRunTimeStats().
4286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 */
4287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		*pcWriteBuffer = 0x00;
4290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function is executing. */
4293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  If
4296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		equate to NULL. */
4298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) );
4299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Generate the (binary) data. */
4303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, &ulTotalTime );
4304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* For percentage calculations. */
4306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulTotalTime /= 100UL;
4307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Avoid divide by zero errors. */
4309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ulTotalTime > 0 )
4310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Create a human readable table from the binary data. */
4312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				for( x = 0; x < uxArraySize; x++ )
4313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* What percentage of the total run time has the task used?
4315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					This will always be rounded down to the nearest integer.
4316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					ulTotalRunTimeDiv100 has already been divided by 100. */
4317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					ulStatsAsPercentage = pxTaskStatusArray[ x ].ulRunTimeCounter / ulTotalTime;
4318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Write the task name to the string, padding with
4320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					spaces so it can be printed in tabular form more
4321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					easily. */
4322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ulStatsAsPercentage > 0UL )
4325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t%lu%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter, ulSta
4329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
4331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							printf() library can be used. */
4334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t%u%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
ARM GAS  /tmp/cc8PdMPr.s 			page 94


4336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
4337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* If the percentage is zero here then the task has
4341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						consumed less than 1% of the total run time. */
4342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t<1%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter );
4345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
4347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							printf() library can be used. */
4350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t<1%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
4353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pcWriteBuffer += strlen( pcWriteBuffer );
4356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) 
4374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t uxTaskResetEventItemValue( void )
4377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
4378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t uxReturn;
4379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uxReturn = listGET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ) );
4381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Reset the event list item to its normal value - so it can be used with
4383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	queues and semaphores. */
4384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES 
4385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return uxReturn;
4387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
4388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void *pvTaskIncrementMutexHeldCount( void )
ARM GAS  /tmp/cc8PdMPr.s 			page 95


4393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xSemaphoreCreateMutex() is called before any tasks have been created
4395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		then pxCurrentTCB will be NULL. */
4396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB != NULL )
4397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxCurrentTCB->uxMutexesHeld )++;
4399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pxCurrentTCB;
4402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulTaskNotifyTake( BaseType_t xClearCountOnExit, TickType_t xTicksToWait )
4410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
4412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Only block if the notification count is not already non-zero. */
4416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ulNotifiedValue == 0UL )
4417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
4425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					section (some will yield immediately, others wait until the
4428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					critical section exits) - but it is not something that
4429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					application code should ever do. */
4430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portYIELD_WITHIN_API();
4431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_TAKE();
4447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
4448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ulReturn != 0UL )
ARM GAS  /tmp/cc8PdMPr.s 			page 96


4450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xClearCountOnExit != pdFALSE )
4452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = 0UL;
4454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = ulReturn - ( uint32_t ) 1;
4458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return ulReturn;
4470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskNotifyWait( uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint32_t 
4478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
4480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Only block if a notification is not already pending. */
4484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
4485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Clear bits in the task's notification value as bits may get
4487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				set	by the notifying task or interrupt.  This can be used to
4488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				clear the value to zero. */
4489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnEntry;
4490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
4498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					section (some will yield immediately, others wait until the
4501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					critical section exits) - but it is not something that
4502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					application code should ever do. */
4503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portYIELD_WITHIN_API();
4504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/cc8PdMPr.s 			page 97


4507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_WAIT();
4520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pulNotificationValue != NULL )
4522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Output the current notification value, which may or may not
4524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				have changed. */
4525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				*pulNotificationValue = pxCurrentTCB->ulNotifiedValue;
4526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If ucNotifyValue is set then either the task never entered the
4529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			blocked state (because a notification was already pending) or the
4530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task unblocked because of a notification.  Otherwise the task
4531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			unblocked because of a timeout. */
4532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
4533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A notification was not received. */
4535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFALSE;
4536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A notification was already pending or a notification was
4540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				received while the task was waiting. */
4541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnExit;
4542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
4543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGenericNotify( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction
4558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
4560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
ARM GAS  /tmp/cc8PdMPr.s 			page 98


4564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			switch( eAction )
4578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetBits	:
4580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eIncrement	:
4584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithOverwrite	:
4588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The value could not be written to the task. */
4599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xReturn = pdFAIL;
4600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eNoAction:
4604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is being notified without its notify value being
4605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					updated. */
4606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY();
4610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
4613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
4617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
4619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc8PdMPr.s 			page 99


4621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if( configUSE_TICKLESS_IDLE != 0 )
4622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If a task is blocked waiting for a notification then
4624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime might be set to the blocked task's time
4625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					out time.  If the task is unblocked for a reason other than
4626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					a timeout xNextTaskUnblockTime is normally left unchanged,
4627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					because it will automatically get reset to a new value when
4628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the tick count equals xNextTaskUnblockTime.  However if
4629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					tickless idling is used it might be more important to enter
4630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					sleep mode at the earliest possible time - so reset
4631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime here to ensure it is updated at the
4632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					earliest possible time. */
4633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvResetNextTaskUnblockTime();
4634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
4636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
4640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
4641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
4642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGenericNotifyFromISR( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction 
4664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
4666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
4671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
ARM GAS  /tmp/cc8PdMPr.s 			page 100


4678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
4687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
4689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
4693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			switch( eAction )
4703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetBits	:
4705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eIncrement	:
4709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithOverwrite	:
4713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The value could not be written to the task. */
4724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xReturn = pdFAIL;
4725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eNoAction :
4729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is being notified without its notify value being
4730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					updated. */
4731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_FROM_ISR();
ARM GAS  /tmp/cc8PdMPr.s 			page 101


4735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
4738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
4741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
4744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this task pending until the scheduler is resumed. */
4752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
4753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
4758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
4759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
4760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
4762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Mark that a yield is pending in case the user is not
4766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						using the "xHigherPriorityTaskWoken" parameter to an ISR
4767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						safe FreeRTOS function. */
4768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
4769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
4778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskNotifyGiveFromISR( TaskHandle_t xTaskToNotify, BaseType_t *pxHigherPriorityTaskWoken )
4788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
4790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
ARM GAS  /tmp/cc8PdMPr.s 			page 102


4792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
4794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
4801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
4810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
4812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
4816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* 'Giving' is equivalent to incrementing a count in a counting
4821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			semaphore. */
4822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->ulNotifiedValue )++;
4823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_GIVE_FROM_ISR();
4825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
4828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
4831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
4834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this task pending until the scheduler is resumed. */
4842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
4843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
4848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
ARM GAS  /tmp/cc8PdMPr.s 			page 103


4849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
4850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
4852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Mark that a yield is pending in case the user is not
4856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						using the "xHigherPriorityTaskWoken" parameter in an ISR
4857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						safe FreeRTOS function. */
4858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
4859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
4868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskNotifyStateClear( TaskHandle_t xTask )
4877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
4879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
4880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If null is passed in here then it is the calling task that is having
4882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		its notification state cleared. */
4883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
4884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->ucNotifyState == taskNOTIFICATION_RECEIVED )
4888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
4891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFAIL;
4895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc8PdMPr.s 			page 104


4906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
4907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 789              		.loc 1 4907 1 view -0
 790              		.cfi_startproc
 791              		@ args = 0, pretend = 0, frame = 0
 792              		@ frame_needed = 0, uses_anonymous_args = 0
 793              		.loc 1 4907 1 is_stmt 0 view .LVU213
 794 0000 70B5     		push	{r4, r5, r6, lr}
 795              	.LCFI7:
 796              		.cfi_def_cfa_offset 16
 797              		.cfi_offset 4, -16
 798              		.cfi_offset 5, -12
 799              		.cfi_offset 6, -8
 800              		.cfi_offset 14, -4
 801 0002 0400     		movs	r4, r0
 802 0004 0D00     		movs	r5, r1
4908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTimeToWake;
 803              		.loc 1 4908 1 is_stmt 1 view .LVU214
4909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** const TickType_t xConstTickCount = xTickCount;
 804              		.loc 1 4909 1 view .LVU215
 805              		.loc 1 4909 18 is_stmt 0 view .LVU216
 806 0006 174B     		ldr	r3, .L65
 807 0008 1E68     		ldr	r6, [r3]
 808              	.LVL63:
4910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
4912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* About to enter a delayed list, so ensure the ucDelayAborted flag is
4914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		reset to pdFALSE so it can be detected as having been set to pdTRUE
4915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		when the task leaves the Blocked state. */
4916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxCurrentTCB->ucDelayAborted = pdFALSE;
4917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
4919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Remove the task from the ready list before adding it to the blocked list
4921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	as the same list item is used for both lists. */
4922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 809              		.loc 1 4922 2 is_stmt 1 view .LVU217
 810              		.loc 1 4922 35 is_stmt 0 view .LVU218
 811 000a 174B     		ldr	r3, .L65+4
 812 000c 1868     		ldr	r0, [r3]
 813              	.LVL64:
 814              		.loc 1 4922 6 view .LVU219
 815 000e 0430     		adds	r0, r0, #4
 816 0010 FFF7FEFF 		bl	uxListRemove
 817              	.LVL65:
4923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The current task must be in a ready list, so there is no need to
4925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		check, and the port reset macro can be called directly. */
4926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority );
4927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
4929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 818              		.loc 1 4930 27 is_stmt 1 view .LVU220
4931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc8PdMPr.s 			page 105


4933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
4934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 819              		.loc 1 4935 3 view .LVU221
 820              		.loc 1 4935 5 is_stmt 0 view .LVU222
 821 0014 631C     		adds	r3, r4, #1
 822 0016 0DD0     		beq	.L64
 823              	.L61:
4936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Add the task to the suspended task list instead of a delayed task
4938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			list to ensure it is not woken by a timing event.  It will block
4939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			indefinitely. */
4940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
4941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Calculate the time at which the task should be woken if the event
4945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			does not occur.  This may overflow but this doesn't matter, the
4946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			kernel will manage it correctly. */
4947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTimeToWake = xConstTickCount + xTicksToWait;
 824              		.loc 1 4947 4 is_stmt 1 view .LVU223
 825              		.loc 1 4947 16 is_stmt 0 view .LVU224
 826 0018 3419     		adds	r4, r6, r4
 827              	.LVL66:
4948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The list item will be inserted in wake time order. */
4950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 828              		.loc 1 4950 4 is_stmt 1 view .LVU225
 829 001a 134B     		ldr	r3, .L65+4
 830 001c 1B68     		ldr	r3, [r3]
 831 001e 5C60     		str	r4, [r3, #4]
4951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xTimeToWake < xConstTickCount )
 832              		.loc 1 4952 4 view .LVU226
 833              		.loc 1 4952 6 is_stmt 0 view .LVU227
 834 0020 A642     		cmp	r6, r4
 835 0022 10D9     		bls	.L63
4953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Wake time has overflowed.  Place this item in the overflow
4955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				list. */
4956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 836              		.loc 1 4956 5 is_stmt 1 view .LVU228
 837 0024 114B     		ldr	r3, .L65+8
 838 0026 1868     		ldr	r0, [r3]
 839              		.loc 1 4956 60 is_stmt 0 view .LVU229
 840 0028 0F4B     		ldr	r3, .L65+4
 841 002a 1968     		ldr	r1, [r3]
 842              		.loc 1 4956 5 view .LVU230
 843 002c 0431     		adds	r1, r1, #4
 844 002e FFF7FEFF 		bl	vListInsert
 845              	.LVL67:
 846              	.L60:
4957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The wake time has not overflowed, so the current block list
4961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is used. */
ARM GAS  /tmp/cc8PdMPr.s 			page 106


4962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
4963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task entering the blocked state was placed at the
4965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				head of the list of blocked tasks then xNextTaskUnblockTime
4966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				needs to be updated too. */
4967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xTimeToWake < xNextTaskUnblockTime )
4968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime = xTimeToWake;
4970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* INCLUDE_vTaskSuspend */
4979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Calculate the time at which the task should be woken if the event
4981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		does not occur.  This may overflow but this doesn't matter, the kernel
4982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		will manage it correctly. */
4983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTimeToWake = xConstTickCount + xTicksToWait;
4984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The list item will be inserted in wake time order. */
4986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
4987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTimeToWake < xConstTickCount )
4989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Wake time has overflowed.  Place this item in the overflow list. */
4991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
4992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The wake time has not overflowed, so the current block list is used. */
4996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
4997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task entering the blocked state was placed at the head of the
4999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			list of blocked tasks then xNextTaskUnblockTime needs to be updated
5000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			too. */
5001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xTimeToWake < xNextTaskUnblockTime )
5002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xNextTaskUnblockTime = xTimeToWake;
5004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
5006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
5008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
5012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xCanBlockIndefinitely;
5013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskSuspend */
5015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 847              		.loc 1 5015 1 view .LVU231
 848              		@ sp needed
 849              	.LVL68:
ARM GAS  /tmp/cc8PdMPr.s 			page 107


 850              	.LVL69:
 851              		.loc 1 5015 1 view .LVU232
 852 0032 70BD     		pop	{r4, r5, r6, pc}
 853              	.LVL70:
 854              	.L64:
4935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 855              		.loc 1 4935 41 discriminator 1 view .LVU233
 856 0034 002D     		cmp	r5, #0
 857 0036 EFD0     		beq	.L61
4940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 858              		.loc 1 4940 4 is_stmt 1 view .LVU234
4940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 859              		.loc 1 4940 56 is_stmt 0 view .LVU235
 860 0038 0B4B     		ldr	r3, .L65+4
 861 003a 1968     		ldr	r1, [r3]
4940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 862              		.loc 1 4940 4 view .LVU236
 863 003c 0431     		adds	r1, r1, #4
 864 003e 0C48     		ldr	r0, .L65+12
 865 0040 FFF7FEFF 		bl	vListInsertEnd
 866              	.LVL71:
 867 0044 F5E7     		b	.L60
 868              	.LVL72:
 869              	.L63:
4962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 870              		.loc 1 4962 5 is_stmt 1 view .LVU237
 871 0046 0B4B     		ldr	r3, .L65+16
 872 0048 1868     		ldr	r0, [r3]
4962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 873              		.loc 1 4962 52 is_stmt 0 view .LVU238
 874 004a 074B     		ldr	r3, .L65+4
 875 004c 1968     		ldr	r1, [r3]
4962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 876              		.loc 1 4962 5 view .LVU239
 877 004e 0431     		adds	r1, r1, #4
 878 0050 FFF7FEFF 		bl	vListInsert
 879              	.LVL73:
4967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 880              		.loc 1 4967 5 is_stmt 1 view .LVU240
4967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 881              		.loc 1 4967 21 is_stmt 0 view .LVU241
 882 0054 084B     		ldr	r3, .L65+20
 883 0056 1B68     		ldr	r3, [r3]
4967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 884              		.loc 1 4967 7 view .LVU242
 885 0058 A342     		cmp	r3, r4
 886 005a EAD9     		bls	.L60
4969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 887              		.loc 1 4969 6 is_stmt 1 view .LVU243
4969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 888              		.loc 1 4969 27 is_stmt 0 view .LVU244
 889 005c 064B     		ldr	r3, .L65+20
 890 005e 1C60     		str	r4, [r3]
4973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 891              		.loc 1 4973 30 is_stmt 1 view .LVU245
 892              		.loc 1 5015 1 is_stmt 0 view .LVU246
 893 0060 E7E7     		b	.L60
ARM GAS  /tmp/cc8PdMPr.s 			page 108


 894              	.L66:
 895 0062 C046     		.align	2
 896              	.L65:
 897 0064 00000000 		.word	.LANCHOR14
 898 0068 00000000 		.word	.LANCHOR9
 899 006c 00000000 		.word	.LANCHOR7
 900 0070 00000000 		.word	.LANCHOR0
 901 0074 00000000 		.word	.LANCHOR2
 902 0078 00000000 		.word	.LANCHOR3
 903              		.cfi_endproc
 904              	.LFE49:
 906              		.section	.text.xTaskCreateStatic,"ax",%progbits
 907              		.align	1
 908              		.global	xTaskCreateStatic
 909              		.syntax unified
 910              		.code	16
 911              		.thumb_func
 912              		.fpu softvfp
 914              	xTaskCreateStatic:
 915              	.LVL74:
 916              	.LFB0:
 582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 917              		.loc 1 582 2 is_stmt 1 view -0
 918              		.cfi_startproc
 919              		@ args = 12, pretend = 0, frame = 8
 920              		@ frame_needed = 0, uses_anonymous_args = 0
 582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 921              		.loc 1 582 2 is_stmt 0 view .LVU248
 922 0000 70B5     		push	{r4, r5, r6, lr}
 923              	.LCFI8:
 924              		.cfi_def_cfa_offset 16
 925              		.cfi_offset 4, -16
 926              		.cfi_offset 5, -12
 927              		.cfi_offset 6, -8
 928              		.cfi_offset 14, -4
 929 0002 86B0     		sub	sp, sp, #24
 930              	.LCFI9:
 931              		.cfi_def_cfa_offset 40
 932 0004 0B9D     		ldr	r5, [sp, #44]
 933 0006 0C9C     		ldr	r4, [sp, #48]
 583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
 934              		.loc 1 583 2 is_stmt 1 view .LVU249
 584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 935              		.loc 1 584 2 view .LVU250
 586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 936              		.loc 1 586 3 view .LVU251
 937 0008 002D     		cmp	r5, #0
 938 000a 08D0     		beq	.L74
 586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 939              		.loc 1 586 41 discriminator 2 view .LVU252
 587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 940              		.loc 1 587 3 discriminator 2 view .LVU253
 941 000c 002C     		cmp	r4, #0
 942 000e 08D0     		beq	.L75
 587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 943              		.loc 1 587 39 discriminator 2 view .LVU254
 944              	.LBB3:
ARM GAS  /tmp/cc8PdMPr.s 			page 109


 594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( xSize == sizeof( TCB_t ) );
 945              		.loc 1 594 4 discriminator 2 view .LVU255
 594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( xSize == sizeof( TCB_t ) );
 946              		.loc 1 594 20 is_stmt 0 discriminator 2 view .LVU256
 947 0010 5426     		movs	r6, #84
 948 0012 0496     		str	r6, [sp, #16]
 595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 949              		.loc 1 595 4 is_stmt 1 discriminator 2 view .LVU257
 950 0014 049E     		ldr	r6, [sp, #16]
 951 0016 542E     		cmp	r6, #84
 952 0018 05D0     		beq	.L72
 595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 953              		.loc 1 595 4 discriminator 1 view .LVU258
 954              		.syntax divided
 955              	@ 595 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 956 001a 72B6     		 cpsid i 
 957              	@ 0 "" 2
 958              		.thumb
 959              		.syntax unified
 960              	.L73:
 595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 961              		.loc 1 595 4 discriminator 3 view .LVU259
 595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 962              		.loc 1 595 4 discriminator 3 view .LVU260
 963 001c FEE7     		b	.L73
 964              	.L74:
 965              	.LBE3:
 586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 966              		.loc 1 586 3 discriminator 1 view .LVU261
 967              		.syntax divided
 968              	@ 586 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 969 001e 72B6     		 cpsid i 
 970              	@ 0 "" 2
 971              		.thumb
 972              		.syntax unified
 973              	.L69:
 586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 974              		.loc 1 586 3 discriminator 1 view .LVU262
 586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 975              		.loc 1 586 3 discriminator 1 view .LVU263
 976 0020 FEE7     		b	.L69
 977              	.L75:
 587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 978              		.loc 1 587 3 discriminator 1 view .LVU264
 979              		.syntax divided
 980              	@ 587 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 981 0022 72B6     		 cpsid i 
 982              	@ 0 "" 2
 983              		.thumb
 984              		.syntax unified
 985              	.L71:
 587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 986              		.loc 1 587 3 discriminator 2 view .LVU265
 587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 987              		.loc 1 587 3 discriminator 2 view .LVU266
 988 0024 FEE7     		b	.L71
 989              	.L72:
ARM GAS  /tmp/cc8PdMPr.s 			page 110


 990              	.LBB4:
 595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 991              		.loc 1 595 44 view .LVU267
 992              	.LBE4:
 600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 993              		.loc 1 600 3 view .LVU268
 604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 994              		.loc 1 604 4 view .LVU269
 995              	.LVL75:
 605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 996              		.loc 1 605 4 view .LVU270
 605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 997              		.loc 1 605 22 is_stmt 0 view .LVU271
 998 0026 2563     		str	r5, [r4, #48]
 611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 999              		.loc 1 611 5 is_stmt 1 view .LVU272
 611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1000              		.loc 1 611 37 is_stmt 0 view .LVU273
 1001 0028 5125     		movs	r5, #81
 1002 002a 0226     		movs	r6, #2
 1003 002c 6655     		strb	r6, [r4, r5]
 615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 1004              		.loc 1 615 4 is_stmt 1 view .LVU274
 1005 002e 0025     		movs	r5, #0
 1006 0030 0395     		str	r5, [sp, #12]
 1007 0032 0294     		str	r4, [sp, #8]
 1008 0034 05AD     		add	r5, sp, #20
 1009 0036 0195     		str	r5, [sp, #4]
 1010 0038 0A9D     		ldr	r5, [sp, #40]
 1011 003a 0095     		str	r5, [sp]
 1012 003c FFF7FEFF 		bl	prvInitialiseNewTask
 1013              	.LVL76:
 616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1014              		.loc 1 616 4 view .LVU275
 1015 0040 2000     		movs	r0, r4
 1016 0042 FFF7FEFF 		bl	prvAddNewTaskToReadyList
 1017              	.LVL77:
 623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1018              		.loc 1 623 3 view .LVU276
 624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1019              		.loc 1 624 2 is_stmt 0 view .LVU277
 1020 0046 0598     		ldr	r0, [sp, #20]
 1021 0048 06B0     		add	sp, sp, #24
 1022              		@ sp needed
 1023              	.LVL78:
 624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1024              		.loc 1 624 2 view .LVU278
 1025 004a 70BD     		pop	{r4, r5, r6, pc}
 1026              		.cfi_endproc
 1027              	.LFE0:
 1029              		.section	.text.xTaskCreate,"ax",%progbits
 1030              		.align	1
 1031              		.global	xTaskCreate
 1032              		.syntax unified
 1033              		.code	16
 1034              		.thumb_func
 1035              		.fpu softvfp
ARM GAS  /tmp/cc8PdMPr.s 			page 111


 1037              	xTaskCreate:
 1038              	.LVL79:
 1039              	.LFB1:
 732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 1040              		.loc 1 732 2 is_stmt 1 view -0
 1041              		.cfi_startproc
 1042              		@ args = 8, pretend = 0, frame = 8
 1043              		@ frame_needed = 0, uses_anonymous_args = 0
 732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 1044              		.loc 1 732 2 is_stmt 0 view .LVU280
 1045 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1046              	.LCFI10:
 1047              		.cfi_def_cfa_offset 20
 1048              		.cfi_offset 4, -20
 1049              		.cfi_offset 5, -16
 1050              		.cfi_offset 6, -12
 1051              		.cfi_offset 7, -8
 1052              		.cfi_offset 14, -4
 1053 0002 87B0     		sub	sp, sp, #28
 1054              	.LCFI11:
 1055              		.cfi_def_cfa_offset 48
 1056 0004 0490     		str	r0, [sp, #16]
 1057 0006 0591     		str	r1, [sp, #20]
 1058 0008 1500     		movs	r5, r2
 1059 000a 1F00     		movs	r7, r3
 733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 1060              		.loc 1 733 2 is_stmt 1 view .LVU281
 734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1061              		.loc 1 734 2 view .LVU282
 1062              	.LBB5:
 763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1063              		.loc 1 763 3 view .LVU283
 766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1064              		.loc 1 766 4 view .LVU284
 766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1065              		.loc 1 766 32 is_stmt 0 view .LVU285
 1066 000c 9000     		lsls	r0, r2, #2
 1067              	.LVL80:
 766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1068              		.loc 1 766 32 view .LVU286
 1069 000e FFF7FEFF 		bl	pvPortMalloc
 1070              	.LVL81:
 766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1071              		.loc 1 766 32 view .LVU287
 1072 0012 061E     		subs	r6, r0, #0
 1073              	.LVL82:
 768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1074              		.loc 1 768 4 is_stmt 1 view .LVU288
 768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1075              		.loc 1 768 6 is_stmt 0 view .LVU289
 1076 0014 1FD0     		beq	.L80
 771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1077              		.loc 1 771 5 is_stmt 1 view .LVU290
 771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1078              		.loc 1 771 28 is_stmt 0 view .LVU291
 1079 0016 5420     		movs	r0, #84
 1080              	.LVL83:
ARM GAS  /tmp/cc8PdMPr.s 			page 112


 771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1081              		.loc 1 771 28 view .LVU292
 1082 0018 FFF7FEFF 		bl	pvPortMalloc
 1083              	.LVL84:
 1084 001c 041E     		subs	r4, r0, #0
 1085              	.LVL85:
 773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1086              		.loc 1 773 5 is_stmt 1 view .LVU293
 773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1087              		.loc 1 773 7 is_stmt 0 view .LVU294
 1088 001e 16D0     		beq	.L78
 776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1089              		.loc 1 776 6 is_stmt 1 view .LVU295
 776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1090              		.loc 1 776 24 is_stmt 0 view .LVU296
 1091 0020 0663     		str	r6, [r0, #48]
 1092              	.LVL86:
 1093              	.L79:
 776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1094              		.loc 1 776 24 view .LVU297
 1095              	.LBE5:
 792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1096              		.loc 1 792 3 is_stmt 1 view .LVU298
 792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1097              		.loc 1 792 5 is_stmt 0 view .LVU299
 1098 0022 002C     		cmp	r4, #0
 1099 0024 1BD0     		beq	.L81
 798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1100              		.loc 1 798 5 is_stmt 1 view .LVU300
 798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1101              		.loc 1 798 37 is_stmt 0 view .LVU301
 1102 0026 0023     		movs	r3, #0
 1103 0028 5122     		movs	r2, #81
 1104 002a A354     		strb	r3, [r4, r2]
 802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 1105              		.loc 1 802 4 is_stmt 1 view .LVU302
 1106 002c 0393     		str	r3, [sp, #12]
 1107 002e 0294     		str	r4, [sp, #8]
 1108 0030 0D9B     		ldr	r3, [sp, #52]
 1109 0032 0193     		str	r3, [sp, #4]
 1110 0034 0C9B     		ldr	r3, [sp, #48]
 1111 0036 0093     		str	r3, [sp]
 1112 0038 3B00     		movs	r3, r7
 1113 003a 2A00     		movs	r2, r5
 1114 003c 0599     		ldr	r1, [sp, #20]
 1115 003e 0498     		ldr	r0, [sp, #16]
 1116 0040 FFF7FEFF 		bl	prvInitialiseNewTask
 1117              	.LVL87:
 803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
 1118              		.loc 1 803 4 view .LVU303
 1119 0044 2000     		movs	r0, r4
 1120 0046 FFF7FEFF 		bl	prvAddNewTaskToReadyList
 1121              	.LVL88:
 804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1122              		.loc 1 804 4 view .LVU304
 804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1123              		.loc 1 804 12 is_stmt 0 view .LVU305
ARM GAS  /tmp/cc8PdMPr.s 			page 113


 1124 004a 0120     		movs	r0, #1
 1125 004c 05E0     		b	.L76
 1126              	.LVL89:
 1127              	.L78:
 1128              	.LBB6:
 782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1129              		.loc 1 782 6 is_stmt 1 view .LVU306
 1130 004e 3000     		movs	r0, r6
 1131              	.LVL90:
 782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1132              		.loc 1 782 6 is_stmt 0 view .LVU307
 1133 0050 FFF7FEFF 		bl	vPortFree
 1134              	.LVL91:
 1135 0054 E5E7     		b	.L79
 1136              	.LVL92:
 1137              	.L80:
 782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1138              		.loc 1 782 6 view .LVU308
 1139              	.LBE6:
 808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1140              		.loc 1 808 12 view .LVU309
 1141 0056 0120     		movs	r0, #1
 1142              	.LVL93:
 808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1143              		.loc 1 808 12 view .LVU310
 1144 0058 4042     		rsbs	r0, r0, #0
 1145              	.L76:
 812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1146              		.loc 1 812 2 view .LVU311
 1147 005a 07B0     		add	sp, sp, #28
 1148              		@ sp needed
 1149              	.LVL94:
 1150              	.LVL95:
 812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1151              		.loc 1 812 2 view .LVU312
 1152 005c F0BD     		pop	{r4, r5, r6, r7, pc}
 1153              	.LVL96:
 1154              	.L81:
 808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1155              		.loc 1 808 12 view .LVU313
 1156 005e 0120     		movs	r0, #1
 1157 0060 4042     		rsbs	r0, r0, #0
 1158              	.LVL97:
 811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1159              		.loc 1 811 3 is_stmt 1 view .LVU314
 811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1160              		.loc 1 811 10 is_stmt 0 view .LVU315
 1161 0062 FAE7     		b	.L76
 1162              		.cfi_endproc
 1163              	.LFE1:
 1165              		.section	.text.vTaskDelete,"ax",%progbits
 1166              		.align	1
 1167              		.global	vTaskDelete
 1168              		.syntax unified
 1169              		.code	16
 1170              		.thumb_func
 1171              		.fpu softvfp
ARM GAS  /tmp/cc8PdMPr.s 			page 114


 1173              	vTaskDelete:
 1174              	.LVL98:
 1175              	.LFB4:
1107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1176              		.loc 1 1107 2 is_stmt 1 view -0
 1177              		.cfi_startproc
 1178              		@ args = 0, pretend = 0, frame = 0
 1179              		@ frame_needed = 0, uses_anonymous_args = 0
1107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1180              		.loc 1 1107 2 is_stmt 0 view .LVU317
 1181 0000 70B5     		push	{r4, r5, r6, lr}
 1182              	.LCFI12:
 1183              		.cfi_def_cfa_offset 16
 1184              		.cfi_offset 4, -16
 1185              		.cfi_offset 5, -12
 1186              		.cfi_offset 6, -8
 1187              		.cfi_offset 14, -4
 1188 0002 0400     		movs	r4, r0
1108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1189              		.loc 1 1108 2 is_stmt 1 view .LVU318
1110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1190              		.loc 1 1110 3 view .LVU319
 1191 0004 FFF7FEFF 		bl	vPortEnterCritical
 1192              	.LVL99:
1114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1193              		.loc 1 1114 4 view .LVU320
1114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1194              		.loc 1 1114 12 is_stmt 0 view .LVU321
 1195 0008 002C     		cmp	r4, #0
 1196 000a 26D0     		beq	.L90
 1197              	.LVL100:
 1198              	.L83:
1117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1199              		.loc 1 1117 4 is_stmt 1 discriminator 4 view .LVU322
1117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1200              		.loc 1 1117 8 is_stmt 0 discriminator 4 view .LVU323
 1201 000c 251D     		adds	r5, r4, #4
 1202 000e 2800     		movs	r0, r5
 1203 0010 FFF7FEFF 		bl	uxListRemove
 1204              	.LVL101:
1123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1205              		.loc 1 1123 29 is_stmt 1 discriminator 4 view .LVU324
1127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1206              		.loc 1 1127 4 discriminator 4 view .LVU325
1127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1207              		.loc 1 1127 6 is_stmt 0 discriminator 4 view .LVU326
 1208 0014 A36A     		ldr	r3, [r4, #40]
 1209 0016 002B     		cmp	r3, #0
 1210 0018 03D0     		beq	.L84
1129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1211              		.loc 1 1129 5 is_stmt 1 view .LVU327
1129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1212              		.loc 1 1129 14 is_stmt 0 view .LVU328
 1213 001a 2000     		movs	r0, r4
 1214 001c 1830     		adds	r0, r0, #24
 1215 001e FFF7FEFF 		bl	uxListRemove
 1216              	.LVL102:
ARM GAS  /tmp/cc8PdMPr.s 			page 115


 1217              	.L84:
1133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1218              		.loc 1 1133 29 is_stmt 1 view .LVU329
1140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1219              		.loc 1 1140 4 view .LVU330
1140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1220              		.loc 1 1140 16 is_stmt 0 view .LVU331
 1221 0022 184A     		ldr	r2, .L93
 1222 0024 1368     		ldr	r3, [r2]
 1223 0026 0133     		adds	r3, r3, #1
 1224 0028 1360     		str	r3, [r2]
1142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1225              		.loc 1 1142 4 is_stmt 1 view .LVU332
1142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1226              		.loc 1 1142 14 is_stmt 0 view .LVU333
 1227 002a 174B     		ldr	r3, .L93+4
 1228 002c 1B68     		ldr	r3, [r3]
1142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1229              		.loc 1 1142 6 view .LVU334
 1230 002e A342     		cmp	r3, r4
 1231 0030 16D0     		beq	.L91
1165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvDeleteTCB( pxTCB );
 1232              		.loc 1 1165 5 is_stmt 1 view .LVU335
 1233 0032 164A     		ldr	r2, .L93+8
 1234 0034 1368     		ldr	r3, [r2]
 1235 0036 013B     		subs	r3, r3, #1
 1236 0038 1360     		str	r3, [r2]
1166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1237              		.loc 1 1166 5 view .LVU336
 1238 003a 2000     		movs	r0, r4
 1239 003c FFF7FEFF 		bl	prvDeleteTCB
 1240              	.LVL103:
1170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1241              		.loc 1 1170 5 view .LVU337
 1242 0040 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 1243              	.LVL104:
 1244              	.L86:
1173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1245              		.loc 1 1173 29 view .LVU338
1175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1246              		.loc 1 1175 3 view .LVU339
 1247 0044 FFF7FEFF 		bl	vPortExitCritical
 1248              	.LVL105:
1179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1249              		.loc 1 1179 3 view .LVU340
1179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1250              		.loc 1 1179 25 is_stmt 0 view .LVU341
 1251 0048 114B     		ldr	r3, .L93+12
 1252 004a 1B68     		ldr	r3, [r3]
1179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1253              		.loc 1 1179 5 view .LVU342
 1254 004c 002B     		cmp	r3, #0
 1255 004e 03D0     		beq	.L82
1181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1256              		.loc 1 1181 4 is_stmt 1 view .LVU343
1181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1257              		.loc 1 1181 14 is_stmt 0 view .LVU344
ARM GAS  /tmp/cc8PdMPr.s 			page 116


 1258 0050 0D4B     		ldr	r3, .L93+4
 1259 0052 1B68     		ldr	r3, [r3]
1181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1260              		.loc 1 1181 6 view .LVU345
 1261 0054 A342     		cmp	r3, r4
 1262 0056 0CD0     		beq	.L92
 1263              	.L82:
1191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1264              		.loc 1 1191 2 view .LVU346
 1265              		@ sp needed
 1266              	.LVL106:
 1267              	.LVL107:
1191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1268              		.loc 1 1191 2 view .LVU347
 1269 0058 70BD     		pop	{r4, r5, r6, pc}
 1270              	.LVL108:
 1271              	.L90:
1114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1272              		.loc 1 1114 12 discriminator 1 view .LVU348
 1273 005a 0B4B     		ldr	r3, .L93+4
 1274 005c 1C68     		ldr	r4, [r3]
 1275              	.LVL109:
1114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1276              		.loc 1 1114 12 discriminator 1 view .LVU349
 1277 005e D5E7     		b	.L83
 1278              	.LVL110:
 1279              	.L91:
1149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1280              		.loc 1 1149 5 is_stmt 1 view .LVU350
 1281 0060 2900     		movs	r1, r5
 1282 0062 0C48     		ldr	r0, .L93+16
 1283 0064 FFF7FEFF 		bl	vListInsertEnd
 1284              	.LVL111:
1154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1285              		.loc 1 1154 5 view .LVU351
 1286 0068 0B4A     		ldr	r2, .L93+20
 1287 006a 1368     		ldr	r3, [r2]
 1288 006c 0133     		adds	r3, r3, #1
 1289 006e 1360     		str	r3, [r2]
1161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1290              		.loc 1 1161 54 view .LVU352
 1291 0070 E8E7     		b	.L86
 1292              	.L92:
1183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1293              		.loc 1 1183 5 view .LVU353
 1294 0072 0A4B     		ldr	r3, .L93+24
 1295 0074 1B68     		ldr	r3, [r3]
 1296 0076 002B     		cmp	r3, #0
 1297 0078 01D0     		beq	.L88
1183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1298              		.loc 1 1183 5 discriminator 1 view .LVU354
 1299              		.syntax divided
 1300              	@ 1183 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1301 007a 72B6     		 cpsid i 
 1302              	@ 0 "" 2
 1303              		.thumb
 1304              		.syntax unified
ARM GAS  /tmp/cc8PdMPr.s 			page 117


 1305              	.L89:
1183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1306              		.loc 1 1183 5 discriminator 1 view .LVU355
1183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1307              		.loc 1 1183 5 discriminator 1 view .LVU356
 1308 007c FEE7     		b	.L89
 1309              	.L88:
1183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1310              		.loc 1 1183 46 discriminator 2 view .LVU357
1184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1311              		.loc 1 1184 5 discriminator 2 view .LVU358
 1312 007e FFF7FEFF 		bl	vPortYield
 1313              	.LVL112:
1188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1314              		.loc 1 1188 29 discriminator 2 view .LVU359
1191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1315              		.loc 1 1191 2 is_stmt 0 discriminator 2 view .LVU360
 1316 0082 E9E7     		b	.L82
 1317              	.L94:
 1318              		.align	2
 1319              	.L93:
 1320 0084 00000000 		.word	.LANCHOR11
 1321 0088 00000000 		.word	.LANCHOR9
 1322 008c 00000000 		.word	.LANCHOR8
 1323 0090 00000000 		.word	.LANCHOR10
 1324 0094 00000000 		.word	.LANCHOR6
 1325 0098 00000000 		.word	.LANCHOR13
 1326 009c 00000000 		.word	.LANCHOR15
 1327              		.cfi_endproc
 1328              	.LFE4:
 1330              		.section	.text.uxTaskPriorityGet,"ax",%progbits
 1331              		.align	1
 1332              		.global	uxTaskPriorityGet
 1333              		.syntax unified
 1334              		.code	16
 1335              		.thumb_func
 1336              		.fpu softvfp
 1338              	uxTaskPriorityGet:
 1339              	.LVL113:
 1340              	.LFB6:
1399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1341              		.loc 1 1399 2 is_stmt 1 view -0
 1342              		.cfi_startproc
 1343              		@ args = 0, pretend = 0, frame = 0
 1344              		@ frame_needed = 0, uses_anonymous_args = 0
1399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1345              		.loc 1 1399 2 is_stmt 0 view .LVU362
 1346 0000 10B5     		push	{r4, lr}
 1347              	.LCFI13:
 1348              		.cfi_def_cfa_offset 8
 1349              		.cfi_offset 4, -8
 1350              		.cfi_offset 14, -4
 1351 0002 0400     		movs	r4, r0
1400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
 1352              		.loc 1 1400 2 is_stmt 1 view .LVU363
1401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1353              		.loc 1 1401 2 view .LVU364
ARM GAS  /tmp/cc8PdMPr.s 			page 118


1403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1354              		.loc 1 1403 3 view .LVU365
 1355 0004 FFF7FEFF 		bl	vPortEnterCritical
 1356              	.LVL114:
1407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1357              		.loc 1 1407 4 view .LVU366
1407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1358              		.loc 1 1407 12 is_stmt 0 view .LVU367
 1359 0008 002C     		cmp	r4, #0
 1360 000a 04D0     		beq	.L97
 1361              	.LVL115:
 1362              	.L96:
1408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1363              		.loc 1 1408 4 is_stmt 1 discriminator 4 view .LVU368
1408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1364              		.loc 1 1408 13 is_stmt 0 discriminator 4 view .LVU369
 1365 000c E46A     		ldr	r4, [r4, #44]
 1366              	.LVL116:
1410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1367              		.loc 1 1410 3 is_stmt 1 discriminator 4 view .LVU370
 1368 000e FFF7FEFF 		bl	vPortExitCritical
 1369              	.LVL117:
1412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1370              		.loc 1 1412 3 discriminator 4 view .LVU371
1413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1371              		.loc 1 1413 2 is_stmt 0 discriminator 4 view .LVU372
 1372 0012 2000     		movs	r0, r4
 1373              		@ sp needed
 1374              	.LVL118:
1413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1375              		.loc 1 1413 2 discriminator 4 view .LVU373
 1376 0014 10BD     		pop	{r4, pc}
 1377              	.LVL119:
 1378              	.L97:
1407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1379              		.loc 1 1407 12 discriminator 1 view .LVU374
 1380 0016 014B     		ldr	r3, .L98
 1381 0018 1C68     		ldr	r4, [r3]
 1382              	.LVL120:
1407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1383              		.loc 1 1407 12 discriminator 1 view .LVU375
 1384 001a F7E7     		b	.L96
 1385              	.L99:
 1386              		.align	2
 1387              	.L98:
 1388 001c 00000000 		.word	.LANCHOR9
 1389              		.cfi_endproc
 1390              	.LFE6:
 1392              		.section	.text.uxTaskPriorityGetFromISR,"ax",%progbits
 1393              		.align	1
 1394              		.global	uxTaskPriorityGetFromISR
 1395              		.syntax unified
 1396              		.code	16
 1397              		.thumb_func
 1398              		.fpu softvfp
 1400              	uxTaskPriorityGetFromISR:
 1401              	.LVL121:
ARM GAS  /tmp/cc8PdMPr.s 			page 119


 1402              	.LFB7:
1421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1403              		.loc 1 1421 2 is_stmt 1 view -0
 1404              		.cfi_startproc
 1405              		@ args = 0, pretend = 0, frame = 0
 1406              		@ frame_needed = 0, uses_anonymous_args = 0
1421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1407              		.loc 1 1421 2 is_stmt 0 view .LVU377
 1408 0000 10B5     		push	{r4, lr}
 1409              	.LCFI14:
 1410              		.cfi_def_cfa_offset 8
 1411              		.cfi_offset 4, -8
 1412              		.cfi_offset 14, -4
 1413 0002 0400     		movs	r4, r0
1422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn, uxSavedInterruptState;
 1414              		.loc 1 1422 2 is_stmt 1 view .LVU378
1423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1415              		.loc 1 1423 2 view .LVU379
1441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1416              		.loc 1 1441 45 view .LVU380
1443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1417              		.loc 1 1443 3 view .LVU381
1443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1418              		.loc 1 1443 27 is_stmt 0 view .LVU382
 1419 0004 FFF7FEFF 		bl	ulSetInterruptMaskFromISR
 1420              	.LVL122:
1447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1421              		.loc 1 1447 4 is_stmt 1 view .LVU383
1447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1422              		.loc 1 1447 12 is_stmt 0 view .LVU384
 1423 0008 002C     		cmp	r4, #0
 1424 000a 04D0     		beq	.L102
 1425              	.LVL123:
 1426              	.L101:
1448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1427              		.loc 1 1448 4 is_stmt 1 discriminator 4 view .LVU385
1448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1428              		.loc 1 1448 13 is_stmt 0 discriminator 4 view .LVU386
 1429 000c E46A     		ldr	r4, [r4, #44]
 1430              	.LVL124:
1450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1431              		.loc 1 1450 3 is_stmt 1 discriminator 4 view .LVU387
 1432 000e FFF7FEFF 		bl	vClearInterruptMaskFromISR
 1433              	.LVL125:
1452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1434              		.loc 1 1452 3 discriminator 4 view .LVU388
1453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1435              		.loc 1 1453 2 is_stmt 0 discriminator 4 view .LVU389
 1436 0012 2000     		movs	r0, r4
 1437              		@ sp needed
 1438              	.LVL126:
1453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1439              		.loc 1 1453 2 discriminator 4 view .LVU390
 1440 0014 10BD     		pop	{r4, pc}
 1441              	.LVL127:
 1442              	.L102:
1447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
ARM GAS  /tmp/cc8PdMPr.s 			page 120


 1443              		.loc 1 1447 12 discriminator 1 view .LVU391
 1444 0016 014B     		ldr	r3, .L103
 1445 0018 1C68     		ldr	r4, [r3]
 1446              	.LVL128:
1447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1447              		.loc 1 1447 12 discriminator 1 view .LVU392
 1448 001a F7E7     		b	.L101
 1449              	.L104:
 1450              		.align	2
 1451              	.L103:
 1452 001c 00000000 		.word	.LANCHOR9
 1453              		.cfi_endproc
 1454              	.LFE7:
 1456              		.section	.text.vTaskPrioritySet,"ax",%progbits
 1457              		.align	1
 1458              		.global	vTaskPrioritySet
 1459              		.syntax unified
 1460              		.code	16
 1461              		.thumb_func
 1462              		.fpu softvfp
 1464              	vTaskPrioritySet:
 1465              	.LVL129:
 1466              	.LFB8:
1461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1467              		.loc 1 1461 2 is_stmt 1 view -0
 1468              		.cfi_startproc
 1469              		@ args = 0, pretend = 0, frame = 0
 1470              		@ frame_needed = 0, uses_anonymous_args = 0
1461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1471              		.loc 1 1461 2 is_stmt 0 view .LVU394
 1472 0000 70B5     		push	{r4, r5, r6, lr}
 1473              	.LCFI15:
 1474              		.cfi_def_cfa_offset 16
 1475              		.cfi_offset 4, -16
 1476              		.cfi_offset 5, -12
 1477              		.cfi_offset 6, -8
 1478              		.cfi_offset 14, -4
 1479 0002 0400     		movs	r4, r0
 1480 0004 0D00     		movs	r5, r1
1462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
 1481              		.loc 1 1462 2 is_stmt 1 view .LVU395
1463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1482              		.loc 1 1463 2 view .LVU396
1464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1483              		.loc 1 1464 2 view .LVU397
 1484              	.LVL130:
1466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1485              		.loc 1 1466 3 view .LVU398
 1486 0006 0629     		cmp	r1, #6
 1487 0008 01D9     		bls	.L106
1466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1488              		.loc 1 1466 3 discriminator 1 view .LVU399
 1489              		.syntax divided
 1490              	@ 1466 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1491 000a 72B6     		 cpsid i 
 1492              	@ 0 "" 2
 1493              		.thumb
ARM GAS  /tmp/cc8PdMPr.s 			page 121


 1494              		.syntax unified
 1495              	.L107:
1466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1496              		.loc 1 1466 3 discriminator 1 view .LVU400
1466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1497              		.loc 1 1466 3 discriminator 1 view .LVU401
 1498 000c FEE7     		b	.L107
 1499              	.L106:
1466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1500              		.loc 1 1466 59 view .LVU402
1469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1501              		.loc 1 1469 3 view .LVU403
1475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1502              		.loc 1 1475 28 view .LVU404
1478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1503              		.loc 1 1478 3 view .LVU405
 1504 000e FFF7FEFF 		bl	vPortEnterCritical
 1505              	.LVL131:
1482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1506              		.loc 1 1482 4 view .LVU406
1482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1507              		.loc 1 1482 12 is_stmt 0 view .LVU407
 1508 0012 002C     		cmp	r4, #0
 1509 0014 0ED0     		beq	.L119
 1510              	.LVL132:
 1511              	.L108:
1484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1512              		.loc 1 1484 50 is_stmt 1 discriminator 4 view .LVU408
1488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1513              		.loc 1 1488 5 discriminator 4 view .LVU409
1488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1514              		.loc 1 1488 27 is_stmt 0 discriminator 4 view .LVU410
 1515 0016 626C     		ldr	r2, [r4, #68]
 1516              	.LVL133:
1496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1517              		.loc 1 1496 4 is_stmt 1 discriminator 4 view .LVU411
1496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1518              		.loc 1 1496 6 is_stmt 0 discriminator 4 view .LVU412
 1519 0018 9542     		cmp	r5, r2
 1520 001a 27D0     		beq	.L109
1500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1521              		.loc 1 1500 5 is_stmt 1 view .LVU413
1500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1522              		.loc 1 1500 7 is_stmt 0 view .LVU414
 1523 001c 0DD9     		bls	.L110
1502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1524              		.loc 1 1502 6 is_stmt 1 view .LVU415
1502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1525              		.loc 1 1502 16 is_stmt 0 view .LVU416
 1526 001e 244B     		ldr	r3, .L123
 1527 0020 1B68     		ldr	r3, [r3]
1502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1528              		.loc 1 1502 8 view .LVU417
 1529 0022 A342     		cmp	r3, r4
 1530 0024 25D0     		beq	.L116
1507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 1531              		.loc 1 1507 7 is_stmt 1 view .LVU418
ARM GAS  /tmp/cc8PdMPr.s 			page 122


1507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 1532              		.loc 1 1507 40 is_stmt 0 view .LVU419
 1533 0026 224B     		ldr	r3, .L123
 1534 0028 1B68     		ldr	r3, [r3]
 1535 002a DB6A     		ldr	r3, [r3, #44]
1507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 1536              		.loc 1 1507 9 view .LVU420
 1537 002c AB42     		cmp	r3, r5
 1538 002e 22D9     		bls	.L117
1464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1539              		.loc 1 1464 13 view .LVU421
 1540 0030 0026     		movs	r6, #0
 1541 0032 07E0     		b	.L111
 1542              	.LVL134:
 1543              	.L119:
1482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1544              		.loc 1 1482 12 discriminator 1 view .LVU422
 1545 0034 1E4B     		ldr	r3, .L123
 1546 0036 1C68     		ldr	r4, [r3]
 1547              	.LVL135:
1482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1548              		.loc 1 1482 12 discriminator 1 view .LVU423
 1549 0038 EDE7     		b	.L108
 1550              	.LVL136:
 1551              	.L110:
1523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1552              		.loc 1 1523 10 is_stmt 1 view .LVU424
1523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1553              		.loc 1 1523 20 is_stmt 0 view .LVU425
 1554 003a 1D4B     		ldr	r3, .L123
 1555 003c 1B68     		ldr	r3, [r3]
1523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1556              		.loc 1 1523 12 view .LVU426
 1557 003e A342     		cmp	r3, r4
 1558 0040 1BD0     		beq	.L118
1464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1559              		.loc 1 1464 13 view .LVU427
 1560 0042 0026     		movs	r6, #0
 1561              	.L111:
 1562              	.LVL137:
1535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1563              		.loc 1 1535 5 is_stmt 1 view .LVU428
1540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1564              		.loc 1 1540 5 view .LVU429
1540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1565              		.loc 1 1540 27 is_stmt 0 view .LVU430
 1566 0044 E36A     		ldr	r3, [r4, #44]
 1567              	.LVL138:
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1568              		.loc 1 1546 6 is_stmt 1 view .LVU431
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1569              		.loc 1 1546 8 is_stmt 0 view .LVU432
 1570 0046 9A42     		cmp	r2, r3
 1571 0048 19D0     		beq	.L120
 1572              	.L112:
1552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1573              		.loc 1 1552 31 is_stmt 1 view .LVU433
ARM GAS  /tmp/cc8PdMPr.s 			page 123


1556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1574              		.loc 1 1556 6 view .LVU434
1556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1575              		.loc 1 1556 28 is_stmt 0 view .LVU435
 1576 004a 6564     		str	r5, [r4, #68]
1566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1577              		.loc 1 1566 5 is_stmt 1 view .LVU436
1566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1578              		.loc 1 1566 7 is_stmt 0 view .LVU437
 1579 004c A269     		ldr	r2, [r4, #24]
 1580              	.LVL139:
1566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1581              		.loc 1 1566 7 view .LVU438
 1582 004e 002A     		cmp	r2, #0
 1583 0050 02DB     		blt	.L113
1568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1584              		.loc 1 1568 6 is_stmt 1 view .LVU439
 1585 0052 0722     		movs	r2, #7
 1586 0054 551B     		subs	r5, r2, r5
 1587              	.LVL140:
1568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1588              		.loc 1 1568 6 is_stmt 0 view .LVU440
 1589 0056 A561     		str	r5, [r4, #24]
 1590              	.L113:
1572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1591              		.loc 1 1572 30 is_stmt 1 view .LVU441
1579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1592              		.loc 1 1579 5 view .LVU442
1579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1593              		.loc 1 1579 9 is_stmt 0 view .LVU443
 1594 0058 9A00     		lsls	r2, r3, #2
 1595 005a D218     		adds	r2, r2, r3
 1596 005c 9300     		lsls	r3, r2, #2
 1597              	.LVL141:
1579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1598              		.loc 1 1579 9 view .LVU444
 1599 005e 154A     		ldr	r2, .L123+4
 1600 0060 9B18     		adds	r3, r3, r2
1579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1601              		.loc 1 1579 112 view .LVU445
 1602 0062 6269     		ldr	r2, [r4, #20]
 1603 0064 9A42     		cmp	r2, r3
 1604 0066 0CD0     		beq	.L121
 1605              	.LVL142:
 1606              	.L114:
1599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1607              		.loc 1 1599 30 is_stmt 1 view .LVU446
1602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1608              		.loc 1 1602 5 view .LVU447
1602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1609              		.loc 1 1602 7 is_stmt 0 view .LVU448
 1610 0068 002E     		cmp	r6, #0
 1611 006a 1ED1     		bne	.L122
 1612              	.LVL143:
 1613              	.L109:
1608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1614              		.loc 1 1608 30 is_stmt 1 view .LVU449
ARM GAS  /tmp/cc8PdMPr.s 			page 124


1613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1615              		.loc 1 1613 5 view .LVU450
1616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1616              		.loc 1 1616 3 view .LVU451
 1617 006c FFF7FEFF 		bl	vPortExitCritical
 1618              	.LVL144:
1617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1619              		.loc 1 1617 2 is_stmt 0 view .LVU452
 1620              		@ sp needed
 1621              	.LVL145:
1617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1622              		.loc 1 1617 2 view .LVU453
 1623 0070 70BD     		pop	{r4, r5, r6, pc}
 1624              	.LVL146:
 1625              	.L116:
1464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1626              		.loc 1 1464 13 view .LVU454
 1627 0072 0026     		movs	r6, #0
 1628 0074 E6E7     		b	.L111
 1629              	.L117:
1509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
 1630              		.loc 1 1509 23 view .LVU455
 1631 0076 0126     		movs	r6, #1
 1632 0078 E4E7     		b	.L111
 1633              	.L118:
1528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1634              		.loc 1 1528 21 view .LVU456
 1635 007a 0126     		movs	r6, #1
 1636 007c E2E7     		b	.L111
 1637              	.LVL147:
 1638              	.L120:
1548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1639              		.loc 1 1548 7 is_stmt 1 view .LVU457
1548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1640              		.loc 1 1548 25 is_stmt 0 view .LVU458
 1641 007e E562     		str	r5, [r4, #44]
 1642 0080 E3E7     		b	.L112
 1643              	.LVL148:
 1644              	.L121:
1584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1645              		.loc 1 1584 6 is_stmt 1 view .LVU459
1584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1646              		.loc 1 1584 10 is_stmt 0 view .LVU460
 1647 0082 251D     		adds	r5, r4, #4
 1648 0084 2800     		movs	r0, r5
 1649 0086 FFF7FEFF 		bl	uxListRemove
 1650              	.LVL149:
1593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1651              		.loc 1 1593 31 is_stmt 1 view .LVU461
1595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1652              		.loc 1 1595 6 view .LVU462
1595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1653              		.loc 1 1595 6 view .LVU463
 1654 008a E26A     		ldr	r2, [r4, #44]
 1655 008c 0A4B     		ldr	r3, .L123+8
 1656 008e 1B68     		ldr	r3, [r3]
 1657 0090 9A42     		cmp	r2, r3
ARM GAS  /tmp/cc8PdMPr.s 			page 125


 1658 0092 01D9     		bls	.L115
1595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1659              		.loc 1 1595 6 discriminator 1 view .LVU464
 1660 0094 084B     		ldr	r3, .L123+8
 1661 0096 1A60     		str	r2, [r3]
 1662              	.L115:
1595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1663              		.loc 1 1595 6 discriminator 3 view .LVU465
1595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1664              		.loc 1 1595 6 discriminator 3 view .LVU466
 1665 0098 9300     		lsls	r3, r2, #2
 1666 009a 9B18     		adds	r3, r3, r2
 1667 009c 9800     		lsls	r0, r3, #2
 1668 009e 054B     		ldr	r3, .L123+4
 1669 00a0 C018     		adds	r0, r0, r3
 1670 00a2 2900     		movs	r1, r5
 1671 00a4 FFF7FEFF 		bl	vListInsertEnd
 1672              	.LVL150:
1595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1673              		.loc 1 1595 36 discriminator 3 view .LVU467
 1674 00a8 DEE7     		b	.L114
 1675              	.L122:
1604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1676              		.loc 1 1604 6 view .LVU468
 1677 00aa FFF7FEFF 		bl	vPortYield
 1678              	.LVL151:
 1679 00ae DDE7     		b	.L109
 1680              	.L124:
 1681              		.align	2
 1682              	.L123:
 1683 00b0 00000000 		.word	.LANCHOR9
 1684 00b4 00000000 		.word	pxReadyTasksLists
 1685 00b8 00000000 		.word	.LANCHOR12
 1686              		.cfi_endproc
 1687              	.LFE8:
 1689              		.section	.text.vTaskResume,"ax",%progbits
 1690              		.align	1
 1691              		.global	vTaskResume
 1692              		.syntax unified
 1693              		.code	16
 1694              		.thumb_func
 1695              		.fpu softvfp
 1697              	vTaskResume:
 1698              	.LVL152:
 1699              	.LFB11:
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1700              		.loc 1 1772 2 view -0
 1701              		.cfi_startproc
 1702              		@ args = 0, pretend = 0, frame = 0
 1703              		@ frame_needed = 0, uses_anonymous_args = 0
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1704              		.loc 1 1772 2 is_stmt 0 view .LVU470
 1705 0000 70B5     		push	{r4, r5, r6, lr}
 1706              	.LCFI16:
 1707              		.cfi_def_cfa_offset 16
 1708              		.cfi_offset 4, -16
 1709              		.cfi_offset 5, -12
ARM GAS  /tmp/cc8PdMPr.s 			page 126


 1710              		.cfi_offset 6, -8
 1711              		.cfi_offset 14, -4
 1712 0002 041E     		subs	r4, r0, #0
1773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1713              		.loc 1 1773 2 is_stmt 1 view .LVU471
 1714              	.LVL153:
1776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1715              		.loc 1 1776 3 view .LVU472
 1716 0004 0DD0     		beq	.L131
1776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1717              		.loc 1 1776 32 discriminator 1 view .LVU473
1780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1718              		.loc 1 1780 3 discriminator 1 view .LVU474
1780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1719              		.loc 1 1780 36 is_stmt 0 discriminator 1 view .LVU475
 1720 0006 164B     		ldr	r3, .L133
 1721 0008 1B68     		ldr	r3, [r3]
1780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1722              		.loc 1 1780 25 discriminator 1 view .LVU476
 1723 000a 8342     		cmp	r3, r0
 1724 000c 08D0     		beq	.L125
1782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1725              		.loc 1 1782 4 is_stmt 1 view .LVU477
 1726 000e FFF7FEFF 		bl	vPortEnterCritical
 1727              	.LVL154:
1784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1728              		.loc 1 1784 5 view .LVU478
1784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1729              		.loc 1 1784 9 is_stmt 0 view .LVU479
 1730 0012 2000     		movs	r0, r4
 1731 0014 FFF7FEFF 		bl	prvTaskIsTaskSuspended
 1732              	.LVL155:
1784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1733              		.loc 1 1784 7 view .LVU480
 1734 0018 0028     		cmp	r0, #0
 1735 001a 04D1     		bne	.L132
 1736              	.L129:
1808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1737              		.loc 1 1808 30 is_stmt 1 view .LVU481
1811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1738              		.loc 1 1811 4 view .LVU482
 1739 001c FFF7FEFF 		bl	vPortExitCritical
 1740              	.LVL156:
1815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1741              		.loc 1 1815 28 view .LVU483
 1742              	.L125:
1817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1743              		.loc 1 1817 2 is_stmt 0 view .LVU484
 1744              		@ sp needed
 1745              	.LVL157:
1817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1746              		.loc 1 1817 2 view .LVU485
 1747 0020 70BD     		pop	{r4, r5, r6, pc}
 1748              	.LVL158:
 1749              	.L131:
1776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1750              		.loc 1 1776 3 is_stmt 1 discriminator 1 view .LVU486
ARM GAS  /tmp/cc8PdMPr.s 			page 127


 1751              		.syntax divided
 1752              	@ 1776 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1753 0022 72B6     		 cpsid i 
 1754              	@ 0 "" 2
 1755              		.thumb
 1756              		.syntax unified
 1757              	.L127:
1776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1758              		.loc 1 1776 3 discriminator 1 view .LVU487
1776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1759              		.loc 1 1776 3 discriminator 1 view .LVU488
 1760 0024 FEE7     		b	.L127
 1761              	.LVL159:
 1762              	.L132:
1786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1763              		.loc 1 1786 31 view .LVU489
1790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1764              		.loc 1 1790 6 view .LVU490
1790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1765              		.loc 1 1790 15 is_stmt 0 view .LVU491
 1766 0026 251D     		adds	r5, r4, #4
 1767 0028 2800     		movs	r0, r5
 1768 002a FFF7FEFF 		bl	uxListRemove
 1769              	.LVL160:
1791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1770              		.loc 1 1791 6 is_stmt 1 view .LVU492
1791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1771              		.loc 1 1791 6 view .LVU493
 1772 002e E26A     		ldr	r2, [r4, #44]
 1773 0030 0C4B     		ldr	r3, .L133+4
 1774 0032 1B68     		ldr	r3, [r3]
 1775 0034 9A42     		cmp	r2, r3
 1776 0036 01D9     		bls	.L130
1791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1777              		.loc 1 1791 6 discriminator 1 view .LVU494
 1778 0038 0A4B     		ldr	r3, .L133+4
 1779 003a 1A60     		str	r2, [r3]
 1780              	.L130:
1791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1781              		.loc 1 1791 6 discriminator 3 view .LVU495
1791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1782              		.loc 1 1791 6 discriminator 3 view .LVU496
 1783 003c 9300     		lsls	r3, r2, #2
 1784 003e 9B18     		adds	r3, r3, r2
 1785 0040 9800     		lsls	r0, r3, #2
 1786 0042 094B     		ldr	r3, .L133+8
 1787 0044 C018     		adds	r0, r0, r3
 1788 0046 2900     		movs	r1, r5
 1789 0048 FFF7FEFF 		bl	vListInsertEnd
 1790              	.LVL161:
1791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1791              		.loc 1 1791 36 discriminator 3 view .LVU497
1794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1792              		.loc 1 1794 6 discriminator 3 view .LVU498
1794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1793              		.loc 1 1794 15 is_stmt 0 discriminator 3 view .LVU499
 1794 004c E26A     		ldr	r2, [r4, #44]
ARM GAS  /tmp/cc8PdMPr.s 			page 128


1794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1795              		.loc 1 1794 43 discriminator 3 view .LVU500
 1796 004e 044B     		ldr	r3, .L133
 1797 0050 1B68     		ldr	r3, [r3]
 1798 0052 DB6A     		ldr	r3, [r3, #44]
1794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1799              		.loc 1 1794 8 discriminator 3 view .LVU501
 1800 0054 9A42     		cmp	r2, r3
 1801 0056 E1D3     		bcc	.L129
1799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1802              		.loc 1 1799 7 is_stmt 1 view .LVU502
 1803 0058 FFF7FEFF 		bl	vPortYield
 1804              	.LVL162:
 1805 005c DEE7     		b	.L129
 1806              	.L134:
 1807 005e C046     		.align	2
 1808              	.L133:
 1809 0060 00000000 		.word	.LANCHOR9
 1810 0064 00000000 		.word	.LANCHOR12
 1811 0068 00000000 		.word	pxReadyTasksLists
 1812              		.cfi_endproc
 1813              	.LFE11:
 1815              		.section	.text.xTaskResumeFromISR,"ax",%progbits
 1816              		.align	1
 1817              		.global	xTaskResumeFromISR
 1818              		.syntax unified
 1819              		.code	16
 1820              		.thumb_func
 1821              		.fpu softvfp
 1823              	xTaskResumeFromISR:
 1824              	.LVL163:
 1825              	.LFB12:
1826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1826              		.loc 1 1826 2 view -0
 1827              		.cfi_startproc
 1828              		@ args = 0, pretend = 0, frame = 0
 1829              		@ frame_needed = 0, uses_anonymous_args = 0
1826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1830              		.loc 1 1826 2 is_stmt 0 view .LVU504
 1831 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1832              	.LCFI17:
 1833              		.cfi_def_cfa_offset 24
 1834              		.cfi_offset 3, -24
 1835              		.cfi_offset 4, -20
 1836              		.cfi_offset 5, -16
 1837              		.cfi_offset 6, -12
 1838              		.cfi_offset 7, -8
 1839              		.cfi_offset 14, -4
 1840 0002 041E     		subs	r4, r0, #0
1827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1841              		.loc 1 1827 2 is_stmt 1 view .LVU505
 1842              	.LVL164:
1828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 1843              		.loc 1 1828 2 view .LVU506
1829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1844              		.loc 1 1829 2 view .LVU507
1831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc8PdMPr.s 			page 129


 1845              		.loc 1 1831 3 view .LVU508
 1846 0004 2AD0     		beq	.L143
1831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1847              		.loc 1 1831 32 discriminator 2 view .LVU509
1849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1848              		.loc 1 1849 45 discriminator 2 view .LVU510
1851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1849              		.loc 1 1851 3 discriminator 2 view .LVU511
1851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1850              		.loc 1 1851 28 is_stmt 0 discriminator 2 view .LVU512
 1851 0006 FFF7FEFF 		bl	ulSetInterruptMaskFromISR
 1852              	.LVL165:
1851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1853              		.loc 1 1851 28 discriminator 2 view .LVU513
 1854 000a 0600     		movs	r6, r0
 1855              	.LVL166:
1853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1856              		.loc 1 1853 4 is_stmt 1 discriminator 2 view .LVU514
1853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1857              		.loc 1 1853 8 is_stmt 0 discriminator 2 view .LVU515
 1858 000c 2000     		movs	r0, r4
 1859              	.LVL167:
1853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1860              		.loc 1 1853 8 discriminator 2 view .LVU516
 1861 000e FFF7FEFF 		bl	prvTaskIsTaskSuspended
 1862              	.LVL168:
 1863 0012 051E     		subs	r5, r0, #0
1853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1864              		.loc 1 1853 6 discriminator 2 view .LVU517
 1865 0014 1DD0     		beq	.L138
1855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1866              		.loc 1 1855 39 is_stmt 1 view .LVU518
1858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1867              		.loc 1 1858 5 view .LVU519
1858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1868              		.loc 1 1858 30 is_stmt 0 view .LVU520
 1869 0016 174B     		ldr	r3, .L144
 1870 0018 1B68     		ldr	r3, [r3]
1858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1871              		.loc 1 1858 7 view .LVU521
 1872 001a 002B     		cmp	r3, #0
 1873 001c 22D1     		bne	.L139
1862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1874              		.loc 1 1862 6 is_stmt 1 view .LVU522
1862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1875              		.loc 1 1862 43 is_stmt 0 view .LVU523
 1876 001e 164B     		ldr	r3, .L144+4
 1877 0020 1B68     		ldr	r3, [r3]
 1878 0022 DB6A     		ldr	r3, [r3, #44]
1862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1879              		.loc 1 1862 8 view .LVU524
 1880 0024 E26A     		ldr	r2, [r4, #44]
 1881 0026 9A42     		cmp	r2, r3
 1882 0028 1AD2     		bcs	.L142
1827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1883              		.loc 1 1827 13 view .LVU525
 1884 002a 0025     		movs	r5, #0
ARM GAS  /tmp/cc8PdMPr.s 			page 130


 1885              	.L140:
 1886              	.LVL169:
1868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1887              		.loc 1 1868 31 is_stmt 1 view .LVU526
1871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1888              		.loc 1 1871 6 view .LVU527
1871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1889              		.loc 1 1871 15 is_stmt 0 view .LVU528
 1890 002c 271D     		adds	r7, r4, #4
 1891 002e 3800     		movs	r0, r7
 1892 0030 FFF7FEFF 		bl	uxListRemove
 1893              	.LVL170:
1872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1894              		.loc 1 1872 6 is_stmt 1 view .LVU529
1872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1895              		.loc 1 1872 6 view .LVU530
 1896 0034 E26A     		ldr	r2, [r4, #44]
 1897 0036 114B     		ldr	r3, .L144+8
 1898 0038 1B68     		ldr	r3, [r3]
 1899 003a 9A42     		cmp	r2, r3
 1900 003c 01D9     		bls	.L141
1872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1901              		.loc 1 1872 6 discriminator 1 view .LVU531
 1902 003e 0F4B     		ldr	r3, .L144+8
 1903 0040 1A60     		str	r2, [r3]
 1904              	.L141:
1872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1905              		.loc 1 1872 6 discriminator 3 view .LVU532
1872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1906              		.loc 1 1872 6 discriminator 3 view .LVU533
 1907 0042 9300     		lsls	r3, r2, #2
 1908 0044 9B18     		adds	r3, r3, r2
 1909 0046 9800     		lsls	r0, r3, #2
 1910 0048 0D4B     		ldr	r3, .L144+12
 1911 004a C018     		adds	r0, r0, r3
 1912 004c 3900     		movs	r1, r7
 1913 004e FFF7FEFF 		bl	vListInsertEnd
 1914              	.LVL171:
1872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1915              		.loc 1 1872 36 discriminator 3 view .LVU534
 1916              	.L138:
1884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1917              		.loc 1 1884 29 view .LVU535
1887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1918              		.loc 1 1887 3 view .LVU536
 1919 0052 3000     		movs	r0, r6
 1920 0054 FFF7FEFF 		bl	vClearInterruptMaskFromISR
 1921              	.LVL172:
1889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1922              		.loc 1 1889 3 view .LVU537
1890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1923              		.loc 1 1890 2 is_stmt 0 view .LVU538
 1924 0058 2800     		movs	r0, r5
 1925              		@ sp needed
 1926              	.LVL173:
 1927              	.LVL174:
 1928              	.LVL175:
ARM GAS  /tmp/cc8PdMPr.s 			page 131


1890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1929              		.loc 1 1890 2 view .LVU539
 1930 005a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1931              	.LVL176:
 1932              	.L143:
1831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1933              		.loc 1 1831 3 is_stmt 1 discriminator 1 view .LVU540
 1934              		.syntax divided
 1935              	@ 1831 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1936 005c 72B6     		 cpsid i 
 1937              	@ 0 "" 2
 1938              		.thumb
 1939              		.syntax unified
 1940              	.L137:
1831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1941              		.loc 1 1831 3 discriminator 1 view .LVU541
1831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1942              		.loc 1 1831 3 discriminator 1 view .LVU542
 1943 005e FEE7     		b	.L137
 1944              	.LVL177:
 1945              	.L142:
1864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1946              		.loc 1 1864 22 is_stmt 0 view .LVU543
 1947 0060 0125     		movs	r5, #1
 1948 0062 E3E7     		b	.L140
 1949              	.L139:
1879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1950              		.loc 1 1879 6 is_stmt 1 view .LVU544
 1951 0064 2100     		movs	r1, r4
 1952 0066 1831     		adds	r1, r1, #24
 1953 0068 0648     		ldr	r0, .L144+16
 1954 006a FFF7FEFF 		bl	vListInsertEnd
 1955              	.LVL178:
1827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1956              		.loc 1 1827 13 is_stmt 0 view .LVU545
 1957 006e 0025     		movs	r5, #0
 1958 0070 EFE7     		b	.L138
 1959              	.L145:
 1960 0072 C046     		.align	2
 1961              	.L144:
 1962 0074 00000000 		.word	.LANCHOR15
 1963 0078 00000000 		.word	.LANCHOR9
 1964 007c 00000000 		.word	.LANCHOR12
 1965 0080 00000000 		.word	pxReadyTasksLists
 1966 0084 00000000 		.word	.LANCHOR1
 1967              		.cfi_endproc
 1968              	.LFE12:
 1970              		.section	.text.vTaskStartScheduler,"ax",%progbits
 1971              		.align	1
 1972              		.global	vTaskStartScheduler
 1973              		.syntax unified
 1974              		.code	16
 1975              		.thumb_func
 1976              		.fpu softvfp
 1978              	vTaskStartScheduler:
 1979              	.LFB13:
1896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
ARM GAS  /tmp/cc8PdMPr.s 			page 132


 1980              		.loc 1 1896 1 is_stmt 1 view -0
 1981              		.cfi_startproc
 1982              		@ args = 0, pretend = 0, frame = 16
 1983              		@ frame_needed = 0, uses_anonymous_args = 0
 1984 0000 10B5     		push	{r4, lr}
 1985              	.LCFI18:
 1986              		.cfi_def_cfa_offset 8
 1987              		.cfi_offset 4, -8
 1988              		.cfi_offset 14, -4
 1989 0002 88B0     		sub	sp, sp, #32
 1990              	.LCFI19:
 1991              		.cfi_def_cfa_offset 40
1897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1992              		.loc 1 1897 1 view .LVU547
 1993              	.LBB7:
1902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
 1994              		.loc 1 1902 3 view .LVU548
1902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
 1995              		.loc 1 1902 17 is_stmt 0 view .LVU549
 1996 0004 0024     		movs	r4, #0
 1997 0006 0594     		str	r4, [sp, #20]
1903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t ulIdleTaskStackSize;
 1998              		.loc 1 1903 3 is_stmt 1 view .LVU550
1903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t ulIdleTaskStackSize;
 1999              		.loc 1 1903 16 is_stmt 0 view .LVU551
 2000 0008 0694     		str	r4, [sp, #24]
1904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2001              		.loc 1 1904 3 is_stmt 1 view .LVU552
1908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 2002              		.loc 1 1908 3 view .LVU553
 2003 000a 07AA     		add	r2, sp, #28
 2004 000c 06A9     		add	r1, sp, #24
 2005 000e 05A8     		add	r0, sp, #20
 2006 0010 FFF7FEFF 		bl	vApplicationGetIdleTaskMemory
 2007              	.LVL179:
1909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												configIDLE_TASK_NAME,
 2008              		.loc 1 1909 3 view .LVU554
1909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												configIDLE_TASK_NAME,
 2009              		.loc 1 1909 21 is_stmt 0 view .LVU555
 2010 0014 059B     		ldr	r3, [sp, #20]
 2011 0016 0293     		str	r3, [sp, #8]
 2012 0018 069B     		ldr	r3, [sp, #24]
 2013 001a 0193     		str	r3, [sp, #4]
 2014 001c 0094     		str	r4, [sp]
 2015 001e 0023     		movs	r3, #0
 2016 0020 079A     		ldr	r2, [sp, #28]
 2017 0022 0A49     		ldr	r1, .L149
 2018 0024 0A48     		ldr	r0, .L149+4
 2019 0026 FFF7FEFF 		bl	xTaskCreateStatic
 2020              	.LVL180:
1917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2021              		.loc 1 1917 3 is_stmt 1 view .LVU556
1917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2022              		.loc 1 1917 5 is_stmt 0 view .LVU557
 2023 002a 0028     		cmp	r0, #0
 2024 002c 0CD0     		beq	.L146
 2025              	.LVL181:
ARM GAS  /tmp/cc8PdMPr.s 			page 133


1917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2026              		.loc 1 1917 5 view .LVU558
 2027              	.LBE7:
1951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2028              		.loc 1 1951 2 is_stmt 1 view .LVU559
1967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2029              		.loc 1 1967 3 view .LVU560
 2030              		.syntax divided
 2031              	@ 1967 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2032 002e 72B6     		 cpsid i 
 2033              	@ 0 "" 2
1977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
 2034              		.loc 1 1977 3 view .LVU561
1977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
 2035              		.loc 1 1977 24 is_stmt 0 view .LVU562
 2036              		.thumb
 2037              		.syntax unified
 2038 0030 084B     		ldr	r3, .L149+8
 2039 0032 0122     		movs	r2, #1
 2040 0034 5242     		rsbs	r2, r2, #0
 2041 0036 1A60     		str	r2, [r3]
1978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = ( TickType_t ) 0U;
 2042              		.loc 1 1978 3 is_stmt 1 view .LVU563
1978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = ( TickType_t ) 0U;
 2043              		.loc 1 1978 21 is_stmt 0 view .LVU564
 2044 0038 074B     		ldr	r3, .L149+12
 2045 003a 0232     		adds	r2, r2, #2
 2046 003c 1A60     		str	r2, [r3]
1979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2047              		.loc 1 1979 3 is_stmt 1 view .LVU565
1979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2048              		.loc 1 1979 14 is_stmt 0 view .LVU566
 2049 003e 074B     		ldr	r3, .L149+16
 2050 0040 0022     		movs	r2, #0
 2051 0042 1A60     		str	r2, [r3]
1987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2052              		.loc 1 1987 43 is_stmt 1 view .LVU567
1991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2053              		.loc 1 1991 3 view .LVU568
1991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2054              		.loc 1 1991 7 is_stmt 0 view .LVU569
 2055 0044 FFF7FEFF 		bl	xPortStartScheduler
 2056              	.LVL182:
 2057              	.L146:
2012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2058              		.loc 1 2012 1 view .LVU570
 2059 0048 08B0     		add	sp, sp, #32
 2060              		@ sp needed
 2061 004a 10BD     		pop	{r4, pc}
 2062              	.L150:
 2063              		.align	2
 2064              	.L149:
 2065 004c 00000000 		.word	.LC48
 2066 0050 00000000 		.word	prvIdleTask
 2067 0054 00000000 		.word	.LANCHOR3
 2068 0058 00000000 		.word	.LANCHOR10
 2069 005c 00000000 		.word	.LANCHOR14
ARM GAS  /tmp/cc8PdMPr.s 			page 134


 2070              		.cfi_endproc
 2071              	.LFE13:
 2073              		.section	.text.vTaskEndScheduler,"ax",%progbits
 2074              		.align	1
 2075              		.global	vTaskEndScheduler
 2076              		.syntax unified
 2077              		.code	16
 2078              		.thumb_func
 2079              		.fpu softvfp
 2081              	vTaskEndScheduler:
 2082              	.LFB14:
2016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
 2083              		.loc 1 2016 1 is_stmt 1 view -0
 2084              		.cfi_startproc
 2085              		@ args = 0, pretend = 0, frame = 0
 2086              		@ frame_needed = 0, uses_anonymous_args = 0
 2087 0000 10B5     		push	{r4, lr}
 2088              	.LCFI20:
 2089              		.cfi_def_cfa_offset 8
 2090              		.cfi_offset 4, -8
 2091              		.cfi_offset 14, -4
2020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xSchedulerRunning = pdFALSE;
 2092              		.loc 1 2020 2 view .LVU572
 2093              		.syntax divided
 2094              	@ 2020 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2095 0002 72B6     		 cpsid i 
 2096              	@ 0 "" 2
2021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vPortEndScheduler();
 2097              		.loc 1 2021 2 view .LVU573
2021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vPortEndScheduler();
 2098              		.loc 1 2021 20 is_stmt 0 view .LVU574
 2099              		.thumb
 2100              		.syntax unified
 2101 0004 024B     		ldr	r3, .L152
 2102 0006 0022     		movs	r2, #0
 2103 0008 1A60     		str	r2, [r3]
2022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2104              		.loc 1 2022 2 is_stmt 1 view .LVU575
 2105 000a FFF7FEFF 		bl	vPortEndScheduler
 2106              	.LVL183:
2023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
 2107              		.loc 1 2023 1 is_stmt 0 view .LVU576
 2108              		@ sp needed
 2109 000e 10BD     		pop	{r4, pc}
 2110              	.L153:
 2111              		.align	2
 2112              	.L152:
 2113 0010 00000000 		.word	.LANCHOR10
 2114              		.cfi_endproc
 2115              	.LFE14:
 2117              		.section	.text.vTaskSuspendAll,"ax",%progbits
 2118              		.align	1
 2119              		.global	vTaskSuspendAll
 2120              		.syntax unified
 2121              		.code	16
 2122              		.thumb_func
 2123              		.fpu softvfp
ARM GAS  /tmp/cc8PdMPr.s 			page 135


 2125              	vTaskSuspendAll:
 2126              	.LFB15:
2027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required as the variable is of type
 2127              		.loc 1 2027 1 is_stmt 1 view -0
 2128              		.cfi_startproc
 2129              		@ args = 0, pretend = 0, frame = 0
 2130              		@ frame_needed = 0, uses_anonymous_args = 0
 2131              		@ link register save eliminated.
2032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2132              		.loc 1 2032 2 view .LVU578
 2133 0000 024A     		ldr	r2, .L155
 2134 0002 1368     		ldr	r3, [r2]
 2135 0004 0133     		adds	r3, r3, #1
 2136 0006 1360     		str	r3, [r2]
2033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
 2137              		.loc 1 2033 1 is_stmt 0 view .LVU579
 2138              		@ sp needed
 2139 0008 7047     		bx	lr
 2140              	.L156:
 2141 000a C046     		.align	2
 2142              	.L155:
 2143 000c 00000000 		.word	.LANCHOR15
 2144              		.cfi_endproc
 2145              	.LFE15:
 2147              		.section	.text.xTaskGetTickCount,"ax",%progbits
 2148              		.align	1
 2149              		.global	xTaskGetTickCount
 2150              		.syntax unified
 2151              		.code	16
 2152              		.thumb_func
 2153              		.fpu softvfp
 2155              	xTaskGetTickCount:
 2156              	.LFB17:
2210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTicks;
 2157              		.loc 1 2210 1 is_stmt 1 view -0
 2158              		.cfi_startproc
 2159              		@ args = 0, pretend = 0, frame = 0
 2160              		@ frame_needed = 0, uses_anonymous_args = 0
 2161              		@ link register save eliminated.
2211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2162              		.loc 1 2211 1 view .LVU581
2214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2163              		.loc 1 2214 32 view .LVU582
2216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2164              		.loc 1 2216 3 view .LVU583
2216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2165              		.loc 1 2216 10 is_stmt 0 view .LVU584
 2166 0000 014B     		ldr	r3, .L158
 2167 0002 1868     		ldr	r0, [r3]
 2168              	.LVL184:
2218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2169              		.loc 1 2218 31 is_stmt 1 view .LVU585
2220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2170              		.loc 1 2220 2 view .LVU586
2221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2171              		.loc 1 2221 1 is_stmt 0 view .LVU587
 2172              		@ sp needed
ARM GAS  /tmp/cc8PdMPr.s 			page 136


 2173 0004 7047     		bx	lr
 2174              	.L159:
 2175 0006 C046     		.align	2
 2176              	.L158:
 2177 0008 00000000 		.word	.LANCHOR14
 2178              		.cfi_endproc
 2179              	.LFE17:
 2181              		.section	.text.xTaskGetTickCountFromISR,"ax",%progbits
 2182              		.align	1
 2183              		.global	xTaskGetTickCountFromISR
 2184              		.syntax unified
 2185              		.code	16
 2186              		.thumb_func
 2187              		.fpu softvfp
 2189              	xTaskGetTickCountFromISR:
 2190              	.LFB18:
2225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xReturn;
 2191              		.loc 1 2225 1 is_stmt 1 view -0
 2192              		.cfi_startproc
 2193              		@ args = 0, pretend = 0, frame = 0
 2194              		@ frame_needed = 0, uses_anonymous_args = 0
 2195              		@ link register save eliminated.
2226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxSavedInterruptStatus;
 2196              		.loc 1 2226 1 view .LVU589
2227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2197              		.loc 1 2227 1 view .LVU590
2243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2198              		.loc 1 2243 44 view .LVU591
2245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2199              		.loc 1 2245 2 view .LVU592
 2200              	.LVL185:
2247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2201              		.loc 1 2247 3 view .LVU593
2247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2202              		.loc 1 2247 11 is_stmt 0 view .LVU594
 2203 0000 014B     		ldr	r3, .L161
 2204 0002 1868     		ldr	r0, [r3]
 2205              	.LVL186:
2249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2206              		.loc 1 2249 2 is_stmt 1 view .LVU595
2251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2207              		.loc 1 2251 2 view .LVU596
2252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2208              		.loc 1 2252 1 is_stmt 0 view .LVU597
 2209              		@ sp needed
 2210 0004 7047     		bx	lr
 2211              	.L162:
 2212 0006 C046     		.align	2
 2213              	.L161:
 2214 0008 00000000 		.word	.LANCHOR14
 2215              		.cfi_endproc
 2216              	.LFE18:
 2218              		.section	.text.uxTaskGetNumberOfTasks,"ax",%progbits
 2219              		.align	1
 2220              		.global	uxTaskGetNumberOfTasks
 2221              		.syntax unified
 2222              		.code	16
ARM GAS  /tmp/cc8PdMPr.s 			page 137


 2223              		.thumb_func
 2224              		.fpu softvfp
 2226              	uxTaskGetNumberOfTasks:
 2227              	.LFB19:
2256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required because the variables are of type
 2228              		.loc 1 2256 1 is_stmt 1 view -0
 2229              		.cfi_startproc
 2230              		@ args = 0, pretend = 0, frame = 0
 2231              		@ frame_needed = 0, uses_anonymous_args = 0
 2232              		@ link register save eliminated.
2259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2233              		.loc 1 2259 2 view .LVU599
2259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2234              		.loc 1 2259 9 is_stmt 0 view .LVU600
 2235 0000 014B     		ldr	r3, .L164
 2236 0002 1868     		ldr	r0, [r3]
2260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2237              		.loc 1 2260 1 view .LVU601
 2238              		@ sp needed
 2239 0004 7047     		bx	lr
 2240              	.L165:
 2241 0006 C046     		.align	2
 2242              	.L164:
 2243 0008 00000000 		.word	.LANCHOR8
 2244              		.cfi_endproc
 2245              	.LFE19:
 2247              		.section	.text.pcTaskGetName,"ax",%progbits
 2248              		.align	1
 2249              		.global	pcTaskGetName
 2250              		.syntax unified
 2251              		.code	16
 2252              		.thumb_func
 2253              		.fpu softvfp
 2255              	pcTaskGetName:
 2256              	.LVL187:
 2257              	.LFB20:
2264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
 2258              		.loc 1 2264 1 is_stmt 1 view -0
 2259              		.cfi_startproc
 2260              		@ args = 0, pretend = 0, frame = 0
 2261              		@ frame_needed = 0, uses_anonymous_args = 0
 2262              		@ link register save eliminated.
2265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2263              		.loc 1 2265 1 view .LVU603
2269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 2264              		.loc 1 2269 2 view .LVU604
2269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 2265              		.loc 1 2269 10 is_stmt 0 view .LVU605
 2266 0000 0028     		cmp	r0, #0
 2267 0002 03D0     		beq	.L170
 2268              	.LVL188:
 2269              	.L167:
2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2270              		.loc 1 2270 2 is_stmt 1 discriminator 4 view .LVU606
 2271 0004 0028     		cmp	r0, #0
 2272 0006 04D0     		beq	.L171
2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
ARM GAS  /tmp/cc8PdMPr.s 			page 138


 2273              		.loc 1 2270 23 discriminator 2 view .LVU607
2271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2274              		.loc 1 2271 2 discriminator 2 view .LVU608
2271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2275              		.loc 1 2271 9 is_stmt 0 discriminator 2 view .LVU609
 2276 0008 3430     		adds	r0, r0, #52
 2277              	.LVL189:
2272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2278              		.loc 1 2272 1 discriminator 2 view .LVU610
 2279              		@ sp needed
 2280 000a 7047     		bx	lr
 2281              	.LVL190:
 2282              	.L170:
2269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 2283              		.loc 1 2269 10 discriminator 1 view .LVU611
 2284 000c 024B     		ldr	r3, .L172
 2285 000e 1868     		ldr	r0, [r3]
 2286              	.LVL191:
2269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 2287              		.loc 1 2269 10 discriminator 1 view .LVU612
 2288 0010 F8E7     		b	.L167
 2289              	.LVL192:
 2290              	.L171:
2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2291              		.loc 1 2270 2 is_stmt 1 discriminator 1 view .LVU613
 2292              		.syntax divided
 2293              	@ 2270 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2294 0012 72B6     		 cpsid i 
 2295              	@ 0 "" 2
 2296              		.thumb
 2297              		.syntax unified
 2298              	.L169:
2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2299              		.loc 1 2270 2 discriminator 1 view .LVU614
2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2300              		.loc 1 2270 2 discriminator 1 view .LVU615
 2301 0014 FEE7     		b	.L169
 2302              	.L173:
 2303 0016 C046     		.align	2
 2304              	.L172:
 2305 0018 00000000 		.word	.LANCHOR9
 2306              		.cfi_endproc
 2307              	.LFE20:
 2309              		.section	.text.xTaskIncrementTick,"ax",%progbits
 2310              		.align	1
 2311              		.global	xTaskIncrementTick
 2312              		.syntax unified
 2313              		.code	16
 2314              		.thumb_func
 2315              		.fpu softvfp
 2317              	xTaskIncrementTick:
 2318              	.LFB21:
2584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t * pxTCB;
 2319              		.loc 1 2584 1 view -0
 2320              		.cfi_startproc
 2321              		@ args = 0, pretend = 0, frame = 0
 2322              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cc8PdMPr.s 			page 139


 2323 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2324              	.LCFI21:
 2325              		.cfi_def_cfa_offset 24
 2326              		.cfi_offset 3, -24
 2327              		.cfi_offset 4, -20
 2328              		.cfi_offset 5, -16
 2329              		.cfi_offset 6, -12
 2330              		.cfi_offset 7, -8
 2331              		.cfi_offset 14, -4
2585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xItemValue;
 2332              		.loc 1 2585 1 view .LVU617
2586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xSwitchRequired = pdFALSE;
 2333              		.loc 1 2586 1 view .LVU618
2587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2334              		.loc 1 2587 1 view .LVU619
 2335              	.LVL193:
2592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 2336              		.loc 1 2592 40 view .LVU620
2593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2337              		.loc 1 2593 2 view .LVU621
2593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2338              		.loc 1 2593 27 is_stmt 0 view .LVU622
 2339 0002 394B     		ldr	r3, .L195
 2340 0004 1B68     		ldr	r3, [r3]
2593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2341              		.loc 1 2593 4 view .LVU623
 2342 0006 002B     		cmp	r3, #0
 2343 0008 61D1     		bne	.L175
 2344              	.LBB8:
2597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2345              		.loc 1 2597 3 is_stmt 1 view .LVU624
2597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2346              		.loc 1 2597 49 is_stmt 0 view .LVU625
 2347 000a 384B     		ldr	r3, .L195+4
 2348 000c 1D68     		ldr	r5, [r3]
2597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2349              		.loc 1 2597 20 view .LVU626
 2350 000e 0135     		adds	r5, r5, #1
 2351              	.LVL194:
2601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2352              		.loc 1 2601 3 is_stmt 1 view .LVU627
2601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2353              		.loc 1 2601 14 is_stmt 0 view .LVU628
 2354 0010 1D60     		str	r5, [r3]
2603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2355              		.loc 1 2603 3 is_stmt 1 view .LVU629
2603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2356              		.loc 1 2603 5 is_stmt 0 view .LVU630
 2357 0012 002D     		cmp	r5, #0
 2358 0014 12D1     		bne	.L176
 2359              	.LBB9:
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2360              		.loc 1 2605 4 is_stmt 1 view .LVU631
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2361              		.loc 1 2605 4 view .LVU632
 2362 0016 364B     		ldr	r3, .L195+8
 2363 0018 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cc8PdMPr.s 			page 140


 2364 001a 1B68     		ldr	r3, [r3]
 2365 001c 002B     		cmp	r3, #0
 2366 001e 01D0     		beq	.L177
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2367              		.loc 1 2605 4 discriminator 1 view .LVU633
 2368              		.syntax divided
 2369              	@ 2605 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2370 0020 72B6     		 cpsid i 
 2371              	@ 0 "" 2
 2372              		.thumb
 2373              		.syntax unified
 2374              	.L178:
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2375              		.loc 1 2605 4 discriminator 1 view .LVU634
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2376              		.loc 1 2605 4 discriminator 1 view .LVU635
 2377 0022 FEE7     		b	.L178
 2378              	.L177:
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2379              		.loc 1 2605 4 discriminator 2 view .LVU636
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2380              		.loc 1 2605 4 discriminator 2 view .LVU637
 2381 0024 324A     		ldr	r2, .L195+8
 2382 0026 1168     		ldr	r1, [r2]
 2383              	.LVL195:
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2384              		.loc 1 2605 4 discriminator 2 view .LVU638
 2385 0028 324B     		ldr	r3, .L195+12
 2386 002a 1868     		ldr	r0, [r3]
 2387 002c 1060     		str	r0, [r2]
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2388              		.loc 1 2605 4 discriminator 2 view .LVU639
 2389 002e 1960     		str	r1, [r3]
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2390              		.loc 1 2605 4 discriminator 2 view .LVU640
 2391 0030 314A     		ldr	r2, .L195+16
 2392 0032 1368     		ldr	r3, [r2]
 2393 0034 0133     		adds	r3, r3, #1
 2394 0036 1360     		str	r3, [r2]
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2395              		.loc 1 2605 4 discriminator 2 view .LVU641
 2396 0038 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2397              	.LVL196:
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2398              		.loc 1 2605 4 is_stmt 0 discriminator 2 view .LVU642
 2399              	.LBE9:
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2400              		.loc 1 2605 30 is_stmt 1 discriminator 2 view .LVU643
 2401              	.L176:
2609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2402              		.loc 1 2609 28 view .LVU644
2616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2403              		.loc 1 2616 3 view .LVU645
2616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2404              		.loc 1 2616 23 is_stmt 0 view .LVU646
 2405 003c 2F4B     		ldr	r3, .L195+20
 2406 003e 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cc8PdMPr.s 			page 141


2616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2407              		.loc 1 2616 5 view .LVU647
 2408 0040 AB42     		cmp	r3, r5
 2409 0042 0CD9     		bls	.L189
 2410              	.LBE8:
2587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2411              		.loc 1 2587 12 view .LVU648
 2412 0044 0024     		movs	r4, #0
 2413              	.LVL197:
 2414              	.L180:
 2415              	.LBB10:
2699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2416              		.loc 1 2699 4 is_stmt 1 view .LVU649
2699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2417              		.loc 1 2699 8 is_stmt 0 view .LVU650
 2418 0046 2E4B     		ldr	r3, .L195+24
 2419 0048 1B68     		ldr	r3, [r3]
 2420 004a DA6A     		ldr	r2, [r3, #44]
 2421 004c 9300     		lsls	r3, r2, #2
 2422 004e 9B18     		adds	r3, r3, r2
 2423 0050 9A00     		lsls	r2, r3, #2
 2424 0052 2C4B     		ldr	r3, .L195+28
 2425 0054 D358     		ldr	r3, [r2, r3]
2699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2426              		.loc 1 2699 6 view .LVU651
 2427 0056 012B     		cmp	r3, #1
 2428 0058 3ED9     		bls	.L187
2701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2429              		.loc 1 2701 21 view .LVU652
 2430 005a 0124     		movs	r4, #1
 2431              	.LVL198:
2701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2432              		.loc 1 2701 21 view .LVU653
 2433 005c 3CE0     		b	.L187
 2434              	.LVL199:
 2435              	.L189:
2701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2436              		.loc 1 2701 21 view .LVU654
 2437              	.LBE10:
2587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2438              		.loc 1 2587 12 view .LVU655
 2439 005e 0024     		movs	r4, #0
 2440 0060 16E0     		b	.L179
 2441              	.LVL200:
 2442              	.L193:
 2443              	.LBB11:
2627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 2444              		.loc 1 2627 6 is_stmt 1 view .LVU656
2627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 2445              		.loc 1 2627 27 is_stmt 0 view .LVU657
 2446 0062 264B     		ldr	r3, .L195+20
 2447 0064 0122     		movs	r2, #1
 2448 0066 5242     		rsbs	r2, r2, #0
 2449 0068 1A60     		str	r2, [r3]
2628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2450              		.loc 1 2628 6 is_stmt 1 view .LVU658
 2451 006a ECE7     		b	.L180
ARM GAS  /tmp/cc8PdMPr.s 			page 142


 2452              	.LVL201:
 2453              	.L194:
2646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break;
 2454              		.loc 1 2646 7 view .LVU659
2646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break;
 2455              		.loc 1 2646 28 is_stmt 0 view .LVU660
 2456 006c 234A     		ldr	r2, .L195+20
 2457 006e 1360     		str	r3, [r2]
2647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2458              		.loc 1 2647 7 is_stmt 1 view .LVU661
 2459 0070 E9E7     		b	.L180
 2460              	.LVL202:
 2461              	.L184:
2670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2462              		.loc 1 2670 6 discriminator 3 view .LVU662
2670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2463              		.loc 1 2670 6 discriminator 3 view .LVU663
 2464 0072 9300     		lsls	r3, r2, #2
 2465 0074 9B18     		adds	r3, r3, r2
 2466 0076 9800     		lsls	r0, r3, #2
 2467 0078 224B     		ldr	r3, .L195+28
 2468 007a C018     		adds	r0, r0, r3
 2469 007c 3900     		movs	r1, r7
 2470 007e FFF7FEFF 		bl	vListInsertEnd
 2471              	.LVL203:
2670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2472              		.loc 1 2670 36 discriminator 3 view .LVU664
2680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2473              		.loc 1 2680 7 discriminator 3 view .LVU665
2680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2474              		.loc 1 2680 16 is_stmt 0 discriminator 3 view .LVU666
 2475 0082 F26A     		ldr	r2, [r6, #44]
2680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2476              		.loc 1 2680 44 discriminator 3 view .LVU667
 2477 0084 1E4B     		ldr	r3, .L195+24
 2478 0086 1B68     		ldr	r3, [r3]
 2479 0088 DB6A     		ldr	r3, [r3, #44]
2680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2480              		.loc 1 2680 9 discriminator 3 view .LVU668
 2481 008a 9A42     		cmp	r2, r3
 2482 008c 00D3     		bcc	.L179
2682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
 2483              		.loc 1 2682 24 view .LVU669
 2484 008e 0124     		movs	r4, #1
 2485              	.LVL204:
 2486              	.L179:
2618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2487              		.loc 1 2618 4 is_stmt 1 view .LVU670
2620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2488              		.loc 1 2620 5 view .LVU671
2620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2489              		.loc 1 2620 9 is_stmt 0 view .LVU672
 2490 0090 174B     		ldr	r3, .L195+8
 2491 0092 1B68     		ldr	r3, [r3]
 2492 0094 1B68     		ldr	r3, [r3]
2620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2493              		.loc 1 2620 48 view .LVU673
ARM GAS  /tmp/cc8PdMPr.s 			page 143


 2494 0096 002B     		cmp	r3, #0
 2495 0098 E3D0     		beq	.L193
2636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 2496              		.loc 1 2636 6 is_stmt 1 view .LVU674
2636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 2497              		.loc 1 2636 26 is_stmt 0 view .LVU675
 2498 009a 154B     		ldr	r3, .L195+8
 2499 009c 1B68     		ldr	r3, [r3]
 2500 009e DB68     		ldr	r3, [r3, #12]
2636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 2501              		.loc 1 2636 12 view .LVU676
 2502 00a0 DE68     		ldr	r6, [r3, #12]
 2503              	.LVL205:
2637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2504              		.loc 1 2637 6 is_stmt 1 view .LVU677
2637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2505              		.loc 1 2637 17 is_stmt 0 view .LVU678
 2506 00a2 7368     		ldr	r3, [r6, #4]
 2507              	.LVL206:
2639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2508              		.loc 1 2639 6 is_stmt 1 view .LVU679
2639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2509              		.loc 1 2639 8 is_stmt 0 view .LVU680
 2510 00a4 9D42     		cmp	r5, r3
 2511 00a6 E1D3     		bcc	.L194
2651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2512              		.loc 1 2651 31 is_stmt 1 view .LVU681
2655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2513              		.loc 1 2655 6 view .LVU682
2655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2514              		.loc 1 2655 15 is_stmt 0 view .LVU683
 2515 00a8 371D     		adds	r7, r6, #4
 2516 00aa 3800     		movs	r0, r7
 2517 00ac FFF7FEFF 		bl	uxListRemove
 2518              	.LVL207:
2659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2519              		.loc 1 2659 6 is_stmt 1 view .LVU684
2659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2520              		.loc 1 2659 8 is_stmt 0 view .LVU685
 2521 00b0 B36A     		ldr	r3, [r6, #40]
 2522 00b2 002B     		cmp	r3, #0
 2523 00b4 03D0     		beq	.L183
2661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2524              		.loc 1 2661 7 is_stmt 1 view .LVU686
2661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2525              		.loc 1 2661 16 is_stmt 0 view .LVU687
 2526 00b6 3000     		movs	r0, r6
 2527 00b8 1830     		adds	r0, r0, #24
 2528 00ba FFF7FEFF 		bl	uxListRemove
 2529              	.LVL208:
 2530              	.L183:
2665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2531              		.loc 1 2665 31 is_stmt 1 view .LVU688
2670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2532              		.loc 1 2670 6 view .LVU689
2670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2533              		.loc 1 2670 6 view .LVU690
ARM GAS  /tmp/cc8PdMPr.s 			page 144


 2534 00be F26A     		ldr	r2, [r6, #44]
 2535 00c0 114B     		ldr	r3, .L195+32
 2536 00c2 1B68     		ldr	r3, [r3]
 2537 00c4 9A42     		cmp	r2, r3
 2538 00c6 D4D9     		bls	.L184
2670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2539              		.loc 1 2670 6 discriminator 1 view .LVU691
 2540 00c8 0F4B     		ldr	r3, .L195+32
 2541 00ca 1A60     		str	r2, [r3]
 2542 00cc D1E7     		b	.L184
 2543              	.LVL209:
 2544              	.L175:
2670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2545              		.loc 1 2670 6 is_stmt 0 discriminator 1 view .LVU692
 2546              	.LBE11:
2727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2547              		.loc 1 2727 3 is_stmt 1 view .LVU693
 2548 00ce 0F4A     		ldr	r2, .L195+36
 2549 00d0 1368     		ldr	r3, [r2]
 2550 00d2 0133     		adds	r3, r3, #1
 2551 00d4 1360     		str	r3, [r2]
2587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2552              		.loc 1 2587 12 is_stmt 0 view .LVU694
 2553 00d6 0024     		movs	r4, #0
 2554              	.LVL210:
 2555              	.L187:
2740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2556              		.loc 1 2740 3 is_stmt 1 view .LVU695
2740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2557              		.loc 1 2740 21 is_stmt 0 view .LVU696
 2558 00d8 0D4B     		ldr	r3, .L195+40
 2559 00da 1B68     		ldr	r3, [r3]
2740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2560              		.loc 1 2740 5 view .LVU697
 2561 00dc 002B     		cmp	r3, #0
 2562 00de 00D0     		beq	.L174
2742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2563              		.loc 1 2742 20 view .LVU698
 2564 00e0 0124     		movs	r4, #1
 2565              	.LVL211:
2746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2566              		.loc 1 2746 28 is_stmt 1 view .LVU699
2751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2567              		.loc 1 2751 2 view .LVU700
 2568              	.L174:
2752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2569              		.loc 1 2752 1 is_stmt 0 view .LVU701
 2570 00e2 2000     		movs	r0, r4
 2571              		@ sp needed
 2572 00e4 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2573              	.L196:
 2574 00e6 C046     		.align	2
 2575              	.L195:
 2576 00e8 00000000 		.word	.LANCHOR15
 2577 00ec 00000000 		.word	.LANCHOR14
 2578 00f0 00000000 		.word	.LANCHOR2
 2579 00f4 00000000 		.word	.LANCHOR7
ARM GAS  /tmp/cc8PdMPr.s 			page 145


 2580 00f8 00000000 		.word	.LANCHOR16
 2581 00fc 00000000 		.word	.LANCHOR3
 2582 0100 00000000 		.word	.LANCHOR9
 2583 0104 00000000 		.word	pxReadyTasksLists
 2584 0108 00000000 		.word	.LANCHOR12
 2585 010c 00000000 		.word	.LANCHOR17
 2586 0110 00000000 		.word	.LANCHOR18
 2587              		.cfi_endproc
 2588              	.LFE21:
 2590              		.section	.text.xTaskResumeAll,"ax",%progbits
 2591              		.align	1
 2592              		.global	xTaskResumeAll
 2593              		.syntax unified
 2594              		.code	16
 2595              		.thumb_func
 2596              		.fpu softvfp
 2598              	xTaskResumeAll:
 2599              	.LFB16:
2100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB = NULL;
 2600              		.loc 1 2100 1 is_stmt 1 view -0
 2601              		.cfi_startproc
 2602              		@ args = 0, pretend = 0, frame = 0
 2603              		@ frame_needed = 0, uses_anonymous_args = 0
 2604 0000 70B5     		push	{r4, r5, r6, lr}
 2605              	.LCFI22:
 2606              		.cfi_def_cfa_offset 16
 2607              		.cfi_offset 4, -16
 2608              		.cfi_offset 5, -12
 2609              		.cfi_offset 6, -8
 2610              		.cfi_offset 14, -4
2101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
 2611              		.loc 1 2101 1 view .LVU703
 2612              	.LVL212:
2102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2613              		.loc 1 2102 1 view .LVU704
2106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2614              		.loc 1 2106 2 view .LVU705
 2615 0002 314B     		ldr	r3, .L213
 2616 0004 1B68     		ldr	r3, [r3]
 2617 0006 002B     		cmp	r3, #0
 2618 0008 01D1     		bne	.L198
2106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2619              		.loc 1 2106 2 discriminator 1 view .LVU706
 2620              		.syntax divided
 2621              	@ 2106 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2622 000a 72B6     		 cpsid i 
 2623              	@ 0 "" 2
 2624              		.thumb
 2625              		.syntax unified
 2626              	.L199:
2106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2627              		.loc 1 2106 2 discriminator 1 view .LVU707
2106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2628              		.loc 1 2106 2 discriminator 1 view .LVU708
 2629 000c FEE7     		b	.L199
 2630              	.L198:
2106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc8PdMPr.s 			page 146


 2631              		.loc 1 2106 38 discriminator 2 view .LVU709
2113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2632              		.loc 1 2113 2 discriminator 2 view .LVU710
 2633 000e FFF7FEFF 		bl	vPortEnterCritical
 2634              	.LVL213:
2115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2635              		.loc 1 2115 3 discriminator 2 view .LVU711
 2636 0012 2D4B     		ldr	r3, .L213
 2637 0014 1A68     		ldr	r2, [r3]
 2638 0016 013A     		subs	r2, r2, #1
 2639 0018 1A60     		str	r2, [r3]
2117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2640              		.loc 1 2117 3 discriminator 2 view .LVU712
2117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2641              		.loc 1 2117 28 is_stmt 0 discriminator 2 view .LVU713
 2642 001a 1B68     		ldr	r3, [r3]
2117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2643              		.loc 1 2117 5 discriminator 2 view .LVU714
 2644 001c 002B     		cmp	r3, #0
 2645 001e 4DD1     		bne	.L209
2119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2646              		.loc 1 2119 4 is_stmt 1 view .LVU715
2119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2647              		.loc 1 2119 31 is_stmt 0 view .LVU716
 2648 0020 2A4B     		ldr	r3, .L213+4
 2649 0022 1B68     		ldr	r3, [r3]
2119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2650              		.loc 1 2119 6 view .LVU717
 2651 0024 002B     		cmp	r3, #0
 2652 0026 01D1     		bne	.L210
2102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2653              		.loc 1 2102 12 view .LVU718
 2654 0028 0024     		movs	r4, #0
 2655 002a 48E0     		b	.L200
 2656              	.L210:
2101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
 2657              		.loc 1 2101 8 view .LVU719
 2658 002c 0024     		movs	r4, #0
 2659              	.LVL214:
 2660              	.L201:
2138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2661              		.loc 1 2138 31 is_stmt 1 view .LVU720
2123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2662              		.loc 1 2123 12 is_stmt 0 view .LVU721
 2663 002e 284B     		ldr	r3, .L213+8
 2664 0030 1B68     		ldr	r3, [r3]
2123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2665              		.loc 1 2123 10 view .LVU722
 2666 0032 002B     		cmp	r3, #0
 2667 0034 23D0     		beq	.L211
2125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2668              		.loc 1 2125 6 is_stmt 1 view .LVU723
2125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2669              		.loc 1 2125 26 is_stmt 0 view .LVU724
 2670 0036 264B     		ldr	r3, .L213+8
 2671 0038 DB68     		ldr	r3, [r3, #12]
2125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
ARM GAS  /tmp/cc8PdMPr.s 			page 147


 2672              		.loc 1 2125 12 view .LVU725
 2673 003a DC68     		ldr	r4, [r3, #12]
 2674              	.LVL215:
2126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2675              		.loc 1 2126 6 is_stmt 1 view .LVU726
2126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2676              		.loc 1 2126 15 is_stmt 0 view .LVU727
 2677 003c 2000     		movs	r0, r4
 2678 003e 1830     		adds	r0, r0, #24
 2679 0040 FFF7FEFF 		bl	uxListRemove
 2680              	.LVL216:
2127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2681              		.loc 1 2127 6 is_stmt 1 view .LVU728
2127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2682              		.loc 1 2127 15 is_stmt 0 view .LVU729
 2683 0044 251D     		adds	r5, r4, #4
 2684 0046 2800     		movs	r0, r5
 2685 0048 FFF7FEFF 		bl	uxListRemove
 2686              	.LVL217:
2128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2687              		.loc 1 2128 6 is_stmt 1 view .LVU730
2128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2688              		.loc 1 2128 6 view .LVU731
 2689 004c E26A     		ldr	r2, [r4, #44]
 2690 004e 214B     		ldr	r3, .L213+12
 2691 0050 1B68     		ldr	r3, [r3]
 2692 0052 9A42     		cmp	r2, r3
 2693 0054 01D9     		bls	.L202
2128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2694              		.loc 1 2128 6 discriminator 1 view .LVU732
 2695 0056 1F4B     		ldr	r3, .L213+12
 2696 0058 1A60     		str	r2, [r3]
 2697              	.L202:
2128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2698              		.loc 1 2128 6 discriminator 3 view .LVU733
2128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2699              		.loc 1 2128 6 discriminator 3 view .LVU734
 2700 005a 9300     		lsls	r3, r2, #2
 2701 005c 9B18     		adds	r3, r3, r2
 2702 005e 9800     		lsls	r0, r3, #2
 2703 0060 1D4B     		ldr	r3, .L213+16
 2704 0062 C018     		adds	r0, r0, r3
 2705 0064 2900     		movs	r1, r5
 2706 0066 FFF7FEFF 		bl	vListInsertEnd
 2707              	.LVL218:
2128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2708              		.loc 1 2128 36 discriminator 3 view .LVU735
2132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2709              		.loc 1 2132 6 discriminator 3 view .LVU736
2132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2710              		.loc 1 2132 43 is_stmt 0 discriminator 3 view .LVU737
 2711 006a 1C4B     		ldr	r3, .L213+20
 2712 006c 1B68     		ldr	r3, [r3]
 2713 006e DB6A     		ldr	r3, [r3, #44]
2132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2714              		.loc 1 2132 8 discriminator 3 view .LVU738
 2715 0070 E26A     		ldr	r2, [r4, #44]
ARM GAS  /tmp/cc8PdMPr.s 			page 148


 2716 0072 9A42     		cmp	r2, r3
 2717 0074 DBD3     		bcc	.L201
2134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2718              		.loc 1 2134 7 is_stmt 1 view .LVU739
2134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2719              		.loc 1 2134 21 is_stmt 0 view .LVU740
 2720 0076 1A4B     		ldr	r3, .L213+24
 2721 0078 0122     		movs	r2, #1
 2722 007a 1A60     		str	r2, [r3]
 2723 007c D7E7     		b	.L201
 2724              	.L211:
2142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2725              		.loc 1 2142 5 is_stmt 1 view .LVU741
2142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2726              		.loc 1 2142 7 is_stmt 0 view .LVU742
 2727 007e 002C     		cmp	r4, #0
 2728 0080 01D0     		beq	.L205
2150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2729              		.loc 1 2150 6 is_stmt 1 view .LVU743
 2730 0082 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2731              	.LVL219:
 2732              	.L205:
 2733              	.LBB12:
2158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2734              		.loc 1 2158 6 view .LVU744
2158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2735              		.loc 1 2158 18 is_stmt 0 view .LVU745
 2736 0086 174B     		ldr	r3, .L213+28
 2737 0088 1C68     		ldr	r4, [r3]
 2738              	.LVL220:
2160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2739              		.loc 1 2160 6 is_stmt 1 view .LVU746
2160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2740              		.loc 1 2160 8 is_stmt 0 view .LVU747
 2741 008a 002C     		cmp	r4, #0
 2742 008c 0AD1     		bne	.L208
 2743              	.L206:
2179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2744              		.loc 1 2179 31 is_stmt 1 view .LVU748
 2745              	.LBE12:
2183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2746              		.loc 1 2183 5 view .LVU749
2183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2747              		.loc 1 2183 23 is_stmt 0 view .LVU750
 2748 008e 144B     		ldr	r3, .L213+24
 2749 0090 1C68     		ldr	r4, [r3]
 2750              	.LVL221:
2183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2751              		.loc 1 2183 7 view .LVU751
 2752 0092 002C     		cmp	r4, #0
 2753 0094 13D0     		beq	.L200
2187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2754              		.loc 1 2187 7 is_stmt 1 view .LVU752
 2755              	.LVL222:
2190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2756              		.loc 1 2190 6 view .LVU753
 2757 0096 FFF7FEFF 		bl	vPortYield
ARM GAS  /tmp/cc8PdMPr.s 			page 149


 2758              	.LVL223:
2187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2759              		.loc 1 2187 23 is_stmt 0 view .LVU754
 2760 009a 0124     		movs	r4, #1
 2761 009c 0FE0     		b	.L200
 2762              	.LVL224:
 2763              	.L207:
 2764              	.LBB13:
2170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
 2765              		.loc 1 2170 33 is_stmt 1 view .LVU755
2172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						} while( uxPendedCounts > ( UBaseType_t ) 0U );
 2766              		.loc 1 2172 8 view .LVU756
 2767 009e 013C     		subs	r4, r4, #1
 2768              	.LVL225:
2173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2769              		.loc 1 2173 7 is_stmt 0 view .LVU757
 2770 00a0 002C     		cmp	r4, #0
 2771 00a2 07D0     		beq	.L212
 2772              	.L208:
2162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2773              		.loc 1 2162 7 is_stmt 1 view .LVU758
2164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
 2774              		.loc 1 2164 8 view .LVU759
2164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
 2775              		.loc 1 2164 12 is_stmt 0 view .LVU760
 2776 00a4 FFF7FEFF 		bl	xTaskIncrementTick
 2777              	.LVL226:
2164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
 2778              		.loc 1 2164 10 view .LVU761
 2779 00a8 0028     		cmp	r0, #0
 2780 00aa F8D0     		beq	.L207
2166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
 2781              		.loc 1 2166 9 is_stmt 1 view .LVU762
2166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
 2782              		.loc 1 2166 23 is_stmt 0 view .LVU763
 2783 00ac 0C4B     		ldr	r3, .L213+24
 2784 00ae 0122     		movs	r2, #1
 2785 00b0 1A60     		str	r2, [r3]
 2786 00b2 F4E7     		b	.L207
 2787              	.L212:
2175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2788              		.loc 1 2175 7 is_stmt 1 view .LVU764
2175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2789              		.loc 1 2175 21 is_stmt 0 view .LVU765
 2790 00b4 0B4B     		ldr	r3, .L213+28
 2791 00b6 0022     		movs	r2, #0
 2792 00b8 1A60     		str	r2, [r3]
 2793 00ba E8E7     		b	.L206
 2794              	.LVL227:
 2795              	.L209:
2175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2796              		.loc 1 2175 21 view .LVU766
 2797              	.LBE13:
2102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2798              		.loc 1 2102 12 view .LVU767
 2799 00bc 0024     		movs	r4, #0
 2800              	.LVL228:
ARM GAS  /tmp/cc8PdMPr.s 			page 150


 2801              	.L200:
2200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2802              		.loc 1 2200 28 is_stmt 1 view .LVU768
2203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2803              		.loc 1 2203 2 view .LVU769
 2804 00be FFF7FEFF 		bl	vPortExitCritical
 2805              	.LVL229:
2205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2806              		.loc 1 2205 2 view .LVU770
2206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2807              		.loc 1 2206 1 is_stmt 0 view .LVU771
 2808 00c2 2000     		movs	r0, r4
 2809              		@ sp needed
 2810              	.LVL230:
2206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2811              		.loc 1 2206 1 view .LVU772
 2812 00c4 70BD     		pop	{r4, r5, r6, pc}
 2813              	.L214:
 2814 00c6 C046     		.align	2
 2815              	.L213:
 2816 00c8 00000000 		.word	.LANCHOR15
 2817 00cc 00000000 		.word	.LANCHOR8
 2818 00d0 00000000 		.word	.LANCHOR1
 2819 00d4 00000000 		.word	.LANCHOR12
 2820 00d8 00000000 		.word	pxReadyTasksLists
 2821 00dc 00000000 		.word	.LANCHOR9
 2822 00e0 00000000 		.word	.LANCHOR18
 2823 00e4 00000000 		.word	.LANCHOR17
 2824              		.cfi_endproc
 2825              	.LFE16:
 2827              		.section	.text.vTaskDelay,"ax",%progbits
 2828              		.align	1
 2829              		.global	vTaskDelay
 2830              		.syntax unified
 2831              		.code	16
 2832              		.thumb_func
 2833              		.fpu softvfp
 2835              	vTaskDelay:
 2836              	.LVL231:
 2837              	.LFB5:
1283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
 2838              		.loc 1 1283 2 is_stmt 1 view -0
 2839              		.cfi_startproc
 2840              		@ args = 0, pretend = 0, frame = 0
 2841              		@ frame_needed = 0, uses_anonymous_args = 0
1283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
 2842              		.loc 1 1283 2 is_stmt 0 view .LVU774
 2843 0000 10B5     		push	{r4, lr}
 2844              	.LCFI23:
 2845              		.cfi_def_cfa_offset 8
 2846              		.cfi_offset 4, -8
 2847              		.cfi_offset 14, -4
 2848 0002 041E     		subs	r4, r0, #0
1284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2849              		.loc 1 1284 2 is_stmt 1 view .LVU775
 2850              	.LVL232:
1287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/cc8PdMPr.s 			page 151


 2851              		.loc 1 1287 3 view .LVU776
1287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2852              		.loc 1 1287 5 is_stmt 0 view .LVU777
 2853 0004 0FD0     		beq	.L216
1289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 2854              		.loc 1 1289 4 is_stmt 1 view .LVU778
 2855 0006 094B     		ldr	r3, .L220
 2856 0008 1B68     		ldr	r3, [r3]
 2857 000a 002B     		cmp	r3, #0
 2858 000c 01D0     		beq	.L217
1289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 2859              		.loc 1 1289 4 discriminator 1 view .LVU779
 2860              		.syntax divided
 2861              	@ 1289 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2862 000e 72B6     		 cpsid i 
 2863              	@ 0 "" 2
 2864              		.thumb
 2865              		.syntax unified
 2866              	.L218:
1289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 2867              		.loc 1 1289 4 discriminator 1 view .LVU780
1289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 2868              		.loc 1 1289 4 discriminator 1 view .LVU781
 2869 0010 FEE7     		b	.L218
 2870              	.L217:
1289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 2871              		.loc 1 1289 45 discriminator 2 view .LVU782
1290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2872              		.loc 1 1290 4 discriminator 2 view .LVU783
 2873 0012 FFF7FEFF 		bl	vTaskSuspendAll
 2874              	.LVL233:
1292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2875              		.loc 1 1292 22 discriminator 2 view .LVU784
1301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2876              		.loc 1 1301 5 discriminator 2 view .LVU785
 2877 0016 0021     		movs	r1, #0
 2878 0018 2000     		movs	r0, r4
 2879 001a FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2880              	.LVL234:
1303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2881              		.loc 1 1303 4 discriminator 2 view .LVU786
1303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2882              		.loc 1 1303 22 is_stmt 0 discriminator 2 view .LVU787
 2883 001e FFF7FEFF 		bl	xTaskResumeAll
 2884              	.LVL235:
1307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2885              		.loc 1 1307 28 is_stmt 1 discriminator 2 view .LVU788
1312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2886              		.loc 1 1312 3 discriminator 2 view .LVU789
1312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2887              		.loc 1 1312 5 is_stmt 0 discriminator 2 view .LVU790
 2888 0022 0028     		cmp	r0, #0
 2889 0024 01D1     		bne	.L215
 2890              	.LVL236:
 2891              	.L216:
1314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2892              		.loc 1 1314 4 is_stmt 1 view .LVU791
ARM GAS  /tmp/cc8PdMPr.s 			page 152


 2893 0026 FFF7FEFF 		bl	vPortYield
 2894              	.LVL237:
1318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2895              		.loc 1 1318 28 view .LVU792
 2896              	.L215:
1320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2897              		.loc 1 1320 2 is_stmt 0 view .LVU793
 2898              		@ sp needed
 2899              	.LVL238:
1320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2900              		.loc 1 1320 2 view .LVU794
 2901 002a 10BD     		pop	{r4, pc}
 2902              	.L221:
 2903              		.align	2
 2904              	.L220:
 2905 002c 00000000 		.word	.LANCHOR15
 2906              		.cfi_endproc
 2907              	.LFE5:
 2909              		.section	.text.vTaskSwitchContext,"ax",%progbits
 2910              		.align	1
 2911              		.global	vTaskSwitchContext
 2912              		.syntax unified
 2913              		.code	16
 2914              		.thumb_func
 2915              		.fpu softvfp
 2917              	vTaskSwitchContext:
 2918              	.LFB22:
2846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 2919              		.loc 1 2846 1 is_stmt 1 view -0
 2920              		.cfi_startproc
 2921              		@ args = 0, pretend = 0, frame = 0
 2922              		@ frame_needed = 0, uses_anonymous_args = 0
 2923 0000 30B5     		push	{r4, r5, lr}
 2924              	.LCFI24:
 2925              		.cfi_def_cfa_offset 12
 2926              		.cfi_offset 4, -12
 2927              		.cfi_offset 5, -8
 2928              		.cfi_offset 14, -4
2847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2929              		.loc 1 2847 2 view .LVU796
2847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2930              		.loc 1 2847 27 is_stmt 0 view .LVU797
 2931 0002 1C4B     		ldr	r3, .L233
 2932 0004 1B68     		ldr	r3, [r3]
2847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2933              		.loc 1 2847 4 view .LVU798
 2934 0006 002B     		cmp	r3, #0
 2935 0008 03D0     		beq	.L223
2851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2936              		.loc 1 2851 3 is_stmt 1 view .LVU799
2851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2937              		.loc 1 2851 17 is_stmt 0 view .LVU800
 2938 000a 1B4B     		ldr	r3, .L233+4
 2939 000c 0122     		movs	r2, #1
 2940 000e 1A60     		str	r2, [r3]
 2941              	.L222:
2901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/cc8PdMPr.s 			page 153


 2942              		.loc 1 2901 1 view .LVU801
 2943              		@ sp needed
 2944 0010 30BD     		pop	{r4, r5, pc}
 2945              	.L223:
2855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
 2946              		.loc 1 2855 3 is_stmt 1 view .LVU802
2855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
 2947              		.loc 1 2855 17 is_stmt 0 view .LVU803
 2948 0012 194B     		ldr	r3, .L233+4
 2949 0014 0022     		movs	r2, #0
 2950 0016 1A60     		str	r2, [r3]
2856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2951              		.loc 1 2856 27 is_stmt 1 view .LVU804
2886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2952              		.loc 1 2886 33 view .LVU805
 2953              	.LBB14:
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2954              		.loc 1 2890 3 view .LVU806
 2955 0018 184B     		ldr	r3, .L233+8
 2956 001a 1B68     		ldr	r3, [r3]
 2957              	.LVL239:
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2958              		.loc 1 2890 3 view .LVU807
 2959              	.L225:
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2960              		.loc 1 2890 3 is_stmt 0 discriminator 5 view .LVU808
 2961 001c 9A00     		lsls	r2, r3, #2
 2962 001e D218     		adds	r2, r2, r3
 2963 0020 9100     		lsls	r1, r2, #2
 2964 0022 174A     		ldr	r2, .L233+12
 2965 0024 8A58     		ldr	r2, [r1, r2]
 2966 0026 002A     		cmp	r2, #0
 2967 0028 05D1     		bne	.L230
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2968              		.loc 1 2890 3 is_stmt 1 discriminator 6 view .LVU809
 2969 002a 002B     		cmp	r3, #0
 2970 002c 01D0     		beq	.L231
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2971              		.loc 1 2890 3 discriminator 3 view .LVU810
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2972              		.loc 1 2890 3 discriminator 3 view .LVU811
 2973 002e 013B     		subs	r3, r3, #1
 2974              	.LVL240:
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2975              		.loc 1 2890 3 is_stmt 0 discriminator 3 view .LVU812
 2976 0030 F4E7     		b	.L225
 2977              	.L231:
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2978              		.loc 1 2890 3 is_stmt 1 discriminator 2 view .LVU813
 2979              		.syntax divided
 2980              	@ 2890 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2981 0032 72B6     		 cpsid i 
 2982              	@ 0 "" 2
 2983              		.thumb
 2984              		.syntax unified
 2985              	.L227:
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
ARM GAS  /tmp/cc8PdMPr.s 			page 154


 2986              		.loc 1 2890 3 discriminator 1 view .LVU814
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2987              		.loc 1 2890 3 discriminator 1 view .LVU815
 2988 0034 FEE7     		b	.L227
 2989              	.L230:
 2990              	.LBB15:
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2991              		.loc 1 2890 3 discriminator 7 view .LVU816
 2992              	.LVL241:
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2993              		.loc 1 2890 3 discriminator 7 view .LVU817
 2994 0036 124D     		ldr	r5, .L233+12
 2995 0038 9900     		lsls	r1, r3, #2
 2996 003a CA18     		adds	r2, r1, r3
 2997 003c 9000     		lsls	r0, r2, #2
 2998 003e 2818     		adds	r0, r5, r0
 2999 0040 4268     		ldr	r2, [r0, #4]
 3000 0042 5468     		ldr	r4, [r2, #4]
 3001 0044 4460     		str	r4, [r0, #4]
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3002              		.loc 1 2890 3 discriminator 7 view .LVU818
 3003 0046 C918     		adds	r1, r1, r3
 3004 0048 8A00     		lsls	r2, r1, #2
 3005 004a 1100     		movs	r1, r2
 3006 004c 0832     		adds	r2, r2, #8
 3007 004e 5219     		adds	r2, r2, r5
 3008 0050 9442     		cmp	r4, r2
 3009 0052 0BD0     		beq	.L232
 3010              	.L229:
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3011              		.loc 1 2890 3 discriminator 10 view .LVU819
 3012 0054 9A00     		lsls	r2, r3, #2
 3013 0056 D218     		adds	r2, r2, r3
 3014 0058 9100     		lsls	r1, r2, #2
 3015 005a 094A     		ldr	r2, .L233+12
 3016 005c 5218     		adds	r2, r2, r1
 3017 005e 5268     		ldr	r2, [r2, #4]
 3018 0060 D168     		ldr	r1, [r2, #12]
 3019 0062 084A     		ldr	r2, .L233+16
 3020 0064 1160     		str	r1, [r2]
 3021              	.LBE15:
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3022              		.loc 1 2890 3 discriminator 10 view .LVU820
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3023              		.loc 1 2890 3 discriminator 10 view .LVU821
 3024 0066 054A     		ldr	r2, .L233+8
 3025 0068 1360     		str	r3, [r2]
 3026              	.LBE14:
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3027              		.loc 1 2890 37 discriminator 10 view .LVU822
2891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3028              		.loc 1 2891 26 discriminator 10 view .LVU823
2901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3029              		.loc 1 2901 1 is_stmt 0 discriminator 10 view .LVU824
 3030 006a D1E7     		b	.L222
 3031              	.L232:
 3032              	.LBB17:
ARM GAS  /tmp/cc8PdMPr.s 			page 155


 3033              	.LBB16:
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3034              		.loc 1 2890 3 is_stmt 1 discriminator 8 view .LVU825
 3035 006c 6068     		ldr	r0, [r4, #4]
 3036 006e 6A18     		adds	r2, r5, r1
 3037 0070 5060     		str	r0, [r2, #4]
 3038 0072 EFE7     		b	.L229
 3039              	.L234:
 3040              		.align	2
 3041              	.L233:
 3042 0074 00000000 		.word	.LANCHOR15
 3043 0078 00000000 		.word	.LANCHOR18
 3044 007c 00000000 		.word	.LANCHOR12
 3045 0080 00000000 		.word	pxReadyTasksLists
 3046 0084 00000000 		.word	.LANCHOR9
 3047              	.LBE16:
 3048              	.LBE17:
 3049              		.cfi_endproc
 3050              	.LFE22:
 3052              		.section	.text.vTaskSuspend,"ax",%progbits
 3053              		.align	1
 3054              		.global	vTaskSuspend
 3055              		.syntax unified
 3056              		.code	16
 3057              		.thumb_func
 3058              		.fpu softvfp
 3060              	vTaskSuspend:
 3061              	.LVL242:
 3062              	.LFB9:
1625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 3063              		.loc 1 1625 2 view -0
 3064              		.cfi_startproc
 3065              		@ args = 0, pretend = 0, frame = 0
 3066              		@ frame_needed = 0, uses_anonymous_args = 0
1625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 3067              		.loc 1 1625 2 is_stmt 0 view .LVU827
 3068 0000 70B5     		push	{r4, r5, r6, lr}
 3069              	.LCFI25:
 3070              		.cfi_def_cfa_offset 16
 3071              		.cfi_offset 4, -16
 3072              		.cfi_offset 5, -12
 3073              		.cfi_offset 6, -8
 3074              		.cfi_offset 14, -4
 3075 0002 0400     		movs	r4, r0
1626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3076              		.loc 1 1626 2 is_stmt 1 view .LVU828
1628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3077              		.loc 1 1628 3 view .LVU829
 3078 0004 FFF7FEFF 		bl	vPortEnterCritical
 3079              	.LVL243:
1632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3080              		.loc 1 1632 4 view .LVU830
1632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3081              		.loc 1 1632 12 is_stmt 0 view .LVU831
 3082 0008 002C     		cmp	r4, #0
 3083 000a 1DD0     		beq	.L245
 3084              	.LVL244:
ARM GAS  /tmp/cc8PdMPr.s 			page 156


 3085              	.L236:
1634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3086              		.loc 1 1634 30 is_stmt 1 discriminator 4 view .LVU832
1638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3087              		.loc 1 1638 4 discriminator 4 view .LVU833
1638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3088              		.loc 1 1638 8 is_stmt 0 discriminator 4 view .LVU834
 3089 000c 251D     		adds	r5, r4, #4
 3090 000e 2800     		movs	r0, r5
 3091 0010 FFF7FEFF 		bl	uxListRemove
 3092              	.LVL245:
1644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3093              		.loc 1 1644 29 is_stmt 1 discriminator 4 view .LVU835
1648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3094              		.loc 1 1648 4 discriminator 4 view .LVU836
1648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3095              		.loc 1 1648 6 is_stmt 0 discriminator 4 view .LVU837
 3096 0014 A36A     		ldr	r3, [r4, #40]
 3097 0016 002B     		cmp	r3, #0
 3098 0018 03D0     		beq	.L237
1650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3099              		.loc 1 1650 5 is_stmt 1 view .LVU838
1650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3100              		.loc 1 1650 14 is_stmt 0 view .LVU839
 3101 001a 2000     		movs	r0, r4
 3102 001c 1830     		adds	r0, r0, #24
 3103 001e FFF7FEFF 		bl	uxListRemove
 3104              	.LVL246:
 3105              	.L237:
1654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3106              		.loc 1 1654 29 is_stmt 1 view .LVU840
1657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3107              		.loc 1 1657 4 view .LVU841
 3108 0022 2900     		movs	r1, r5
 3109 0024 1C48     		ldr	r0, .L249
 3110 0026 FFF7FEFF 		bl	vListInsertEnd
 3111              	.LVL247:
1661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3112              		.loc 1 1661 5 view .LVU842
1661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3113              		.loc 1 1661 14 is_stmt 0 view .LVU843
 3114 002a 5023     		movs	r3, #80
 3115 002c E35C     		ldrb	r3, [r4, r3]
1661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3116              		.loc 1 1661 7 view .LVU844
 3117 002e 012B     		cmp	r3, #1
 3118 0030 0DD0     		beq	.L246
 3119              	.L238:
1670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3120              		.loc 1 1670 3 is_stmt 1 view .LVU845
 3121 0032 FFF7FEFF 		bl	vPortExitCritical
 3122              	.LVL248:
1672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3123              		.loc 1 1672 3 view .LVU846
1672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3124              		.loc 1 1672 25 is_stmt 0 view .LVU847
 3125 0036 194B     		ldr	r3, .L249+4
ARM GAS  /tmp/cc8PdMPr.s 			page 157


 3126 0038 1B68     		ldr	r3, [r3]
1672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3127              		.loc 1 1672 5 view .LVU848
 3128 003a 002B     		cmp	r3, #0
 3129 003c 0BD1     		bne	.L247
 3130              	.L239:
1684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3131              		.loc 1 1684 28 is_stmt 1 view .LVU849
1687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3132              		.loc 1 1687 3 view .LVU850
1687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3133              		.loc 1 1687 13 is_stmt 0 view .LVU851
 3134 003e 184B     		ldr	r3, .L249+8
 3135 0040 1B68     		ldr	r3, [r3]
1687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3136              		.loc 1 1687 5 view .LVU852
 3137 0042 A342     		cmp	r3, r4
 3138 0044 0ED0     		beq	.L248
 3139              	.L235:
1718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3140              		.loc 1 1718 2 view .LVU853
 3141              		@ sp needed
 3142              	.LVL249:
 3143              	.LVL250:
1718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3144              		.loc 1 1718 2 view .LVU854
 3145 0046 70BD     		pop	{r4, r5, r6, pc}
 3146              	.LVL251:
 3147              	.L245:
1632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3148              		.loc 1 1632 12 discriminator 1 view .LVU855
 3149 0048 154B     		ldr	r3, .L249+8
 3150 004a 1C68     		ldr	r4, [r3]
 3151              	.LVL252:
1632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3152              		.loc 1 1632 12 discriminator 1 view .LVU856
 3153 004c DEE7     		b	.L236
 3154              	.LVL253:
 3155              	.L246:
1665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3156              		.loc 1 1665 6 is_stmt 1 view .LVU857
1665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3157              		.loc 1 1665 27 is_stmt 0 view .LVU858
 3158 004e 4F33     		adds	r3, r3, #79
 3159 0050 0022     		movs	r2, #0
 3160 0052 E254     		strb	r2, [r4, r3]
 3161 0054 EDE7     		b	.L238
 3162              	.L247:
1676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3163              		.loc 1 1676 4 is_stmt 1 view .LVU859
 3164 0056 FFF7FEFF 		bl	vPortEnterCritical
 3165              	.LVL254:
1678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3166              		.loc 1 1678 5 view .LVU860
 3167 005a FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 3168              	.LVL255:
1680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/cc8PdMPr.s 			page 158


 3169              		.loc 1 1680 4 view .LVU861
 3170 005e FFF7FEFF 		bl	vPortExitCritical
 3171              	.LVL256:
 3172 0062 ECE7     		b	.L239
 3173              	.L248:
1689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3174              		.loc 1 1689 4 view .LVU862
1689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3175              		.loc 1 1689 26 is_stmt 0 view .LVU863
 3176 0064 0D4B     		ldr	r3, .L249+4
 3177 0066 1B68     		ldr	r3, [r3]
1689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3178              		.loc 1 1689 6 view .LVU864
 3179 0068 002B     		cmp	r3, #0
 3180 006a 08D0     		beq	.L241
1692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3181              		.loc 1 1692 5 is_stmt 1 view .LVU865
 3182 006c 0D4B     		ldr	r3, .L249+12
 3183 006e 1B68     		ldr	r3, [r3]
 3184 0070 002B     		cmp	r3, #0
 3185 0072 01D0     		beq	.L242
1692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3186              		.loc 1 1692 5 discriminator 1 view .LVU866
 3187              		.syntax divided
 3188              	@ 1692 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3189 0074 72B6     		 cpsid i 
 3190              	@ 0 "" 2
 3191              		.thumb
 3192              		.syntax unified
 3193              	.L243:
1692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3194              		.loc 1 1692 5 discriminator 1 view .LVU867
1692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3195              		.loc 1 1692 5 discriminator 1 view .LVU868
 3196 0076 FEE7     		b	.L243
 3197              	.L242:
1692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3198              		.loc 1 1692 46 discriminator 2 view .LVU869
1693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3199              		.loc 1 1693 5 discriminator 2 view .LVU870
 3200 0078 FFF7FEFF 		bl	vPortYield
 3201              	.LVL257:
 3202 007c E3E7     		b	.L235
 3203              	.L241:
1700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3204              		.loc 1 1700 5 view .LVU871
1700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3205              		.loc 1 1700 9 is_stmt 0 view .LVU872
 3206 007e 064B     		ldr	r3, .L249
 3207 0080 1A68     		ldr	r2, [r3]
1700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3208              		.loc 1 1700 56 view .LVU873
 3209 0082 094B     		ldr	r3, .L249+16
 3210 0084 1B68     		ldr	r3, [r3]
1700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3211              		.loc 1 1700 7 view .LVU874
 3212 0086 9A42     		cmp	r2, r3
ARM GAS  /tmp/cc8PdMPr.s 			page 159


 3213 0088 03D1     		bne	.L244
1706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3214              		.loc 1 1706 6 is_stmt 1 view .LVU875
1706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3215              		.loc 1 1706 19 is_stmt 0 view .LVU876
 3216 008a 054B     		ldr	r3, .L249+8
 3217 008c 0022     		movs	r2, #0
 3218 008e 1A60     		str	r2, [r3]
 3219 0090 D9E7     		b	.L235
 3220              	.L244:
1710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3221              		.loc 1 1710 6 is_stmt 1 view .LVU877
 3222 0092 FFF7FEFF 		bl	vTaskSwitchContext
 3223              	.LVL258:
1716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3224              		.loc 1 1716 28 view .LVU878
1718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3225              		.loc 1 1718 2 is_stmt 0 view .LVU879
 3226 0096 D6E7     		b	.L235
 3227              	.L250:
 3228              		.align	2
 3229              	.L249:
 3230 0098 00000000 		.word	.LANCHOR0
 3231 009c 00000000 		.word	.LANCHOR10
 3232 00a0 00000000 		.word	.LANCHOR9
 3233 00a4 00000000 		.word	.LANCHOR15
 3234 00a8 00000000 		.word	.LANCHOR8
 3235              		.cfi_endproc
 3236              	.LFE9:
 3238              		.section	.text.vTaskPlaceOnEventList,"ax",%progbits
 3239              		.align	1
 3240              		.global	vTaskPlaceOnEventList
 3241              		.syntax unified
 3242              		.code	16
 3243              		.thumb_func
 3244              		.fpu softvfp
 3246              	vTaskPlaceOnEventList:
 3247              	.LVL259:
 3248              	.LFB23:
2905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3249              		.loc 1 2905 1 is_stmt 1 view -0
 3250              		.cfi_startproc
 3251              		@ args = 0, pretend = 0, frame = 0
 3252              		@ frame_needed = 0, uses_anonymous_args = 0
2905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3253              		.loc 1 2905 1 is_stmt 0 view .LVU881
 3254 0000 10B5     		push	{r4, lr}
 3255              	.LCFI26:
 3256              		.cfi_def_cfa_offset 8
 3257              		.cfi_offset 4, -8
 3258              		.cfi_offset 14, -4
 3259 0002 0C00     		movs	r4, r1
2906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3260              		.loc 1 2906 2 is_stmt 1 view .LVU882
 3261 0004 0028     		cmp	r0, #0
 3262 0006 09D0     		beq	.L254
2906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc8PdMPr.s 			page 160


 3263              		.loc 1 2906 29 discriminator 2 view .LVU883
2915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3264              		.loc 1 2915 2 discriminator 2 view .LVU884
2915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3265              		.loc 1 2915 43 is_stmt 0 discriminator 2 view .LVU885
 3266 0008 054B     		ldr	r3, .L255
 3267 000a 1968     		ldr	r1, [r3]
 3268              	.LVL260:
2915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3269              		.loc 1 2915 2 discriminator 2 view .LVU886
 3270 000c 1831     		adds	r1, r1, #24
 3271 000e FFF7FEFF 		bl	vListInsert
 3272              	.LVL261:
2917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3273              		.loc 1 2917 2 is_stmt 1 discriminator 2 view .LVU887
 3274 0012 0121     		movs	r1, #1
 3275 0014 2000     		movs	r0, r4
 3276 0016 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3277              	.LVL262:
2918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3278              		.loc 1 2918 1 is_stmt 0 discriminator 2 view .LVU888
 3279              		@ sp needed
 3280              	.LVL263:
2918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3281              		.loc 1 2918 1 discriminator 2 view .LVU889
 3282 001a 10BD     		pop	{r4, pc}
 3283              	.LVL264:
 3284              	.L254:
2906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3285              		.loc 1 2906 2 is_stmt 1 discriminator 1 view .LVU890
 3286              		.syntax divided
 3287              	@ 2906 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3288 001c 72B6     		 cpsid i 
 3289              	@ 0 "" 2
 3290              		.thumb
 3291              		.syntax unified
 3292              	.L253:
2906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3293              		.loc 1 2906 2 discriminator 1 view .LVU891
2906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3294              		.loc 1 2906 2 discriminator 1 view .LVU892
 3295 001e FEE7     		b	.L253
 3296              	.L256:
 3297              		.align	2
 3298              	.L255:
 3299 0020 00000000 		.word	.LANCHOR9
 3300              		.cfi_endproc
 3301              	.LFE23:
 3303              		.section	.text.vTaskPlaceOnUnorderedEventList,"ax",%progbits
 3304              		.align	1
 3305              		.global	vTaskPlaceOnUnorderedEventList
 3306              		.syntax unified
 3307              		.code	16
 3308              		.thumb_func
 3309              		.fpu softvfp
 3311              	vTaskPlaceOnUnorderedEventList:
 3312              	.LVL265:
ARM GAS  /tmp/cc8PdMPr.s 			page 161


 3313              	.LFB24:
2922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3314              		.loc 1 2922 1 view -0
 3315              		.cfi_startproc
 3316              		@ args = 0, pretend = 0, frame = 0
 3317              		@ frame_needed = 0, uses_anonymous_args = 0
2922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3318              		.loc 1 2922 1 is_stmt 0 view .LVU894
 3319 0000 70B5     		push	{r4, r5, r6, lr}
 3320              	.LCFI27:
 3321              		.cfi_def_cfa_offset 16
 3322              		.cfi_offset 4, -16
 3323              		.cfi_offset 5, -12
 3324              		.cfi_offset 6, -8
 3325              		.cfi_offset 14, -4
 3326 0002 1400     		movs	r4, r2
2923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3327              		.loc 1 2923 2 is_stmt 1 view .LVU895
 3328 0004 0028     		cmp	r0, #0
 3329 0006 05D0     		beq	.L262
2923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3330              		.loc 1 2923 29 discriminator 2 view .LVU896
2927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3331              		.loc 1 2927 2 discriminator 2 view .LVU897
 3332 0008 0B4B     		ldr	r3, .L263
 3333 000a 1B68     		ldr	r3, [r3]
 3334 000c 002B     		cmp	r3, #0
 3335 000e 03D1     		bne	.L260
2927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3336              		.loc 1 2927 2 discriminator 1 view .LVU898
 3337              		.syntax divided
 3338              	@ 2927 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3339 0010 72B6     		 cpsid i 
 3340              	@ 0 "" 2
 3341              		.thumb
 3342              		.syntax unified
 3343              	.L261:
2927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3344              		.loc 1 2927 2 discriminator 2 view .LVU899
2927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3345              		.loc 1 2927 2 discriminator 2 view .LVU900
 3346 0012 FEE7     		b	.L261
 3347              	.L262:
2923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3348              		.loc 1 2923 2 discriminator 1 view .LVU901
 3349              		.syntax divided
 3350              	@ 2923 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3351 0014 72B6     		 cpsid i 
 3352              	@ 0 "" 2
 3353              		.thumb
 3354              		.syntax unified
 3355              	.L259:
2923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3356              		.loc 1 2923 2 discriminator 1 view .LVU902
2923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3357              		.loc 1 2923 2 discriminator 1 view .LVU903
 3358 0016 FEE7     		b	.L259
ARM GAS  /tmp/cc8PdMPr.s 			page 162


 3359              	.L260:
2927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3360              		.loc 1 2927 43 discriminator 2 view .LVU904
2932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3361              		.loc 1 2932 2 discriminator 2 view .LVU905
 3362 0018 084A     		ldr	r2, .L263+4
 3363              	.LVL266:
2932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3364              		.loc 1 2932 2 is_stmt 0 discriminator 2 view .LVU906
 3365 001a 1568     		ldr	r5, [r2]
 3366 001c 8023     		movs	r3, #128
 3367 001e 1B06     		lsls	r3, r3, #24
 3368 0020 0B43     		orrs	r3, r1
 3369 0022 AB61     		str	r3, [r5, #24]
2939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3370              		.loc 1 2939 2 is_stmt 1 discriminator 2 view .LVU907
2939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3371              		.loc 1 2939 46 is_stmt 0 discriminator 2 view .LVU908
 3372 0024 1168     		ldr	r1, [r2]
 3373              	.LVL267:
2939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3374              		.loc 1 2939 2 discriminator 2 view .LVU909
 3375 0026 1831     		adds	r1, r1, #24
 3376 0028 FFF7FEFF 		bl	vListInsertEnd
 3377              	.LVL268:
2941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3378              		.loc 1 2941 2 is_stmt 1 discriminator 2 view .LVU910
 3379 002c 0121     		movs	r1, #1
 3380 002e 2000     		movs	r0, r4
 3381 0030 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3382              	.LVL269:
2942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3383              		.loc 1 2942 1 is_stmt 0 discriminator 2 view .LVU911
 3384              		@ sp needed
 3385              	.LVL270:
2942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3386              		.loc 1 2942 1 discriminator 2 view .LVU912
 3387 0034 70BD     		pop	{r4, r5, r6, pc}
 3388              	.L264:
 3389 0036 C046     		.align	2
 3390              	.L263:
 3391 0038 00000000 		.word	.LANCHOR15
 3392 003c 00000000 		.word	.LANCHOR9
 3393              		.cfi_endproc
 3394              	.LFE24:
 3396              		.section	.text.xTaskRemoveFromEventList,"ax",%progbits
 3397              		.align	1
 3398              		.global	xTaskRemoveFromEventList
 3399              		.syntax unified
 3400              		.code	16
 3401              		.thumb_func
 3402              		.fpu softvfp
 3404              	xTaskRemoveFromEventList:
 3405              	.LVL271:
 3406              	.LFB25:
2979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3407              		.loc 1 2979 1 is_stmt 1 view -0
ARM GAS  /tmp/cc8PdMPr.s 			page 163


 3408              		.cfi_startproc
 3409              		@ args = 0, pretend = 0, frame = 0
 3410              		@ frame_needed = 0, uses_anonymous_args = 0
2979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3411              		.loc 1 2979 1 is_stmt 0 view .LVU914
 3412 0000 70B5     		push	{r4, r5, r6, lr}
 3413              	.LCFI28:
 3414              		.cfi_def_cfa_offset 16
 3415              		.cfi_offset 4, -16
 3416              		.cfi_offset 5, -12
 3417              		.cfi_offset 6, -8
 3418              		.cfi_offset 14, -4
2980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 3419              		.loc 1 2980 1 is_stmt 1 view .LVU915
2981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3420              		.loc 1 2981 1 view .LVU916
2996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3421              		.loc 1 2996 2 view .LVU917
2996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3422              		.loc 1 2996 31 is_stmt 0 view .LVU918
 3423 0002 C368     		ldr	r3, [r0, #12]
2996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3424              		.loc 1 2996 17 view .LVU919
 3425 0004 DC68     		ldr	r4, [r3, #12]
 3426              	.LVL272:
2997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3427              		.loc 1 2997 2 is_stmt 1 view .LVU920
 3428 0006 002C     		cmp	r4, #0
 3429 0008 26D0     		beq	.L273
2997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3430              		.loc 1 2997 32 discriminator 2 view .LVU921
2998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3431              		.loc 1 2998 2 discriminator 2 view .LVU922
2998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3432              		.loc 1 2998 11 is_stmt 0 discriminator 2 view .LVU923
 3433 000a 2500     		movs	r5, r4
 3434 000c 1835     		adds	r5, r5, #24
 3435 000e 2800     		movs	r0, r5
 3436              	.LVL273:
2998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3437              		.loc 1 2998 11 discriminator 2 view .LVU924
 3438 0010 FFF7FEFF 		bl	uxListRemove
 3439              	.LVL274:
3000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3440              		.loc 1 3000 2 is_stmt 1 discriminator 2 view .LVU925
3000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3441              		.loc 1 3000 27 is_stmt 0 discriminator 2 view .LVU926
 3442 0014 154B     		ldr	r3, .L274
 3443 0016 1B68     		ldr	r3, [r3]
3000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3444              		.loc 1 3000 4 discriminator 2 view .LVU927
 3445 0018 002B     		cmp	r3, #0
 3446 001a 1FD1     		bne	.L268
3002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
 3447              		.loc 1 3002 3 is_stmt 1 view .LVU928
3002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
 3448              		.loc 1 3002 12 is_stmt 0 view .LVU929
ARM GAS  /tmp/cc8PdMPr.s 			page 164


 3449 001c 251D     		adds	r5, r4, #4
 3450 001e 2800     		movs	r0, r5
 3451 0020 FFF7FEFF 		bl	uxListRemove
 3452              	.LVL275:
3003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3453              		.loc 1 3003 3 is_stmt 1 view .LVU930
3003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3454              		.loc 1 3003 3 view .LVU931
 3455 0024 E26A     		ldr	r2, [r4, #44]
 3456 0026 124B     		ldr	r3, .L274+4
 3457 0028 1B68     		ldr	r3, [r3]
 3458 002a 9A42     		cmp	r2, r3
 3459 002c 01D9     		bls	.L269
3003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3460              		.loc 1 3003 3 discriminator 1 view .LVU932
 3461 002e 104B     		ldr	r3, .L274+4
 3462 0030 1A60     		str	r2, [r3]
 3463              	.L269:
3003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3464              		.loc 1 3003 3 discriminator 3 view .LVU933
3003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3465              		.loc 1 3003 3 discriminator 3 view .LVU934
 3466 0032 9300     		lsls	r3, r2, #2
 3467 0034 9B18     		adds	r3, r3, r2
 3468 0036 9800     		lsls	r0, r3, #2
 3469 0038 0E4B     		ldr	r3, .L274+8
 3470 003a C018     		adds	r0, r0, r3
 3471 003c 2900     		movs	r1, r5
 3472 003e FFF7FEFF 		bl	vListInsertEnd
 3473              	.LVL276:
3003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3474              		.loc 1 3003 42 discriminator 3 view .LVU935
 3475              	.L270:
3012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3476              		.loc 1 3012 2 view .LVU936
3012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3477              		.loc 1 3012 20 is_stmt 0 view .LVU937
 3478 0042 E26A     		ldr	r2, [r4, #44]
3012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3479              		.loc 1 3012 47 view .LVU938
 3480 0044 0C4B     		ldr	r3, .L274+12
 3481 0046 1B68     		ldr	r3, [r3]
 3482 0048 DB6A     		ldr	r3, [r3, #44]
3012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3483              		.loc 1 3012 4 view .LVU939
 3484 004a 9A42     		cmp	r2, r3
 3485 004c 0BD9     		bls	.L272
3017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3486              		.loc 1 3017 3 is_stmt 1 view .LVU940
 3487              	.LVL277:
3021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3488              		.loc 1 3021 3 view .LVU941
3021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3489              		.loc 1 3021 17 is_stmt 0 view .LVU942
 3490 004e 0B4B     		ldr	r3, .L274+16
 3491 0050 0122     		movs	r2, #1
 3492 0052 1A60     		str	r2, [r3]
ARM GAS  /tmp/cc8PdMPr.s 			page 165


3017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3493              		.loc 1 3017 11 view .LVU943
 3494 0054 0120     		movs	r0, #1
 3495 0056 07E0     		b	.L265
 3496              	.LVL278:
 3497              	.L273:
2997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3498              		.loc 1 2997 2 is_stmt 1 discriminator 1 view .LVU944
 3499              		.syntax divided
 3500              	@ 2997 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3501 0058 72B6     		 cpsid i 
 3502              	@ 0 "" 2
 3503              		.thumb
 3504              		.syntax unified
 3505              	.L267:
2997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3506              		.loc 1 2997 2 discriminator 1 view .LVU945
2997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3507              		.loc 1 2997 2 discriminator 1 view .LVU946
 3508 005a FEE7     		b	.L267
 3509              	.LVL279:
 3510              	.L268:
3009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3511              		.loc 1 3009 3 view .LVU947
 3512 005c 2900     		movs	r1, r5
 3513 005e 0848     		ldr	r0, .L274+20
 3514 0060 FFF7FEFF 		bl	vListInsertEnd
 3515              	.LVL280:
 3516 0064 EDE7     		b	.L270
 3517              	.L272:
3025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3518              		.loc 1 3025 11 is_stmt 0 view .LVU948
 3519 0066 0020     		movs	r0, #0
 3520              	.LVL281:
3042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3521              		.loc 1 3042 2 is_stmt 1 view .LVU949
 3522              	.L265:
3043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3523              		.loc 1 3043 1 is_stmt 0 view .LVU950
 3524              		@ sp needed
 3525              	.LVL282:
3043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3526              		.loc 1 3043 1 view .LVU951
 3527 0068 70BD     		pop	{r4, r5, r6, pc}
 3528              	.L275:
 3529 006a C046     		.align	2
 3530              	.L274:
 3531 006c 00000000 		.word	.LANCHOR15
 3532 0070 00000000 		.word	.LANCHOR12
 3533 0074 00000000 		.word	pxReadyTasksLists
 3534 0078 00000000 		.word	.LANCHOR9
 3535 007c 00000000 		.word	.LANCHOR18
 3536 0080 00000000 		.word	.LANCHOR1
 3537              		.cfi_endproc
 3538              	.LFE25:
 3540              		.section	.text.vTaskRemoveFromUnorderedEventList,"ax",%progbits
 3541              		.align	1
ARM GAS  /tmp/cc8PdMPr.s 			page 166


 3542              		.global	vTaskRemoveFromUnorderedEventList
 3543              		.syntax unified
 3544              		.code	16
 3545              		.thumb_func
 3546              		.fpu softvfp
 3548              	vTaskRemoveFromUnorderedEventList:
 3549              	.LVL283:
 3550              	.LFB26:
3047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3551              		.loc 1 3047 1 is_stmt 1 view -0
 3552              		.cfi_startproc
 3553              		@ args = 0, pretend = 0, frame = 0
 3554              		@ frame_needed = 0, uses_anonymous_args = 0
3047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3555              		.loc 1 3047 1 is_stmt 0 view .LVU953
 3556 0000 70B5     		push	{r4, r5, r6, lr}
 3557              	.LCFI29:
 3558              		.cfi_def_cfa_offset 16
 3559              		.cfi_offset 4, -16
 3560              		.cfi_offset 5, -12
 3561              		.cfi_offset 6, -8
 3562              		.cfi_offset 14, -4
3048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3563              		.loc 1 3048 1 is_stmt 1 view .LVU954
3052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3564              		.loc 1 3052 2 view .LVU955
 3565 0002 174B     		ldr	r3, .L284
 3566 0004 1B68     		ldr	r3, [r3]
 3567 0006 002B     		cmp	r3, #0
 3568 0008 01D1     		bne	.L277
3052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3569              		.loc 1 3052 2 discriminator 1 view .LVU956
 3570              		.syntax divided
 3571              	@ 3052 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3572 000a 72B6     		 cpsid i 
 3573              	@ 0 "" 2
 3574              		.thumb
 3575              		.syntax unified
 3576              	.L278:
3052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3577              		.loc 1 3052 2 discriminator 1 view .LVU957
3052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3578              		.loc 1 3052 2 discriminator 1 view .LVU958
 3579 000c FEE7     		b	.L278
 3580              	.L277:
3052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3581              		.loc 1 3052 49 discriminator 2 view .LVU959
3055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3582              		.loc 1 3055 2 discriminator 2 view .LVU960
 3583 000e 8023     		movs	r3, #128
 3584 0010 1B06     		lsls	r3, r3, #24
 3585 0012 0B43     		orrs	r3, r1
 3586 0014 0360     		str	r3, [r0]
3059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3587              		.loc 1 3059 2 discriminator 2 view .LVU961
3059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3588              		.loc 1 3059 17 is_stmt 0 discriminator 2 view .LVU962
ARM GAS  /tmp/cc8PdMPr.s 			page 167


 3589 0016 C468     		ldr	r4, [r0, #12]
 3590              	.LVL284:
3060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 3591              		.loc 1 3060 2 is_stmt 1 discriminator 2 view .LVU963
 3592 0018 002C     		cmp	r4, #0
 3593 001a 1ED0     		beq	.L283
3060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 3594              		.loc 1 3060 32 discriminator 2 view .LVU964
3061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3595              		.loc 1 3061 2 discriminator 2 view .LVU965
3061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3596              		.loc 1 3061 11 is_stmt 0 discriminator 2 view .LVU966
 3597 001c FFF7FEFF 		bl	uxListRemove
 3598              	.LVL285:
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
 3599              		.loc 1 3066 2 is_stmt 1 discriminator 2 view .LVU967
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
 3600              		.loc 1 3066 11 is_stmt 0 discriminator 2 view .LVU968
 3601 0020 251D     		adds	r5, r4, #4
 3602 0022 2800     		movs	r0, r5
 3603 0024 FFF7FEFF 		bl	uxListRemove
 3604              	.LVL286:
3067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3605              		.loc 1 3067 2 is_stmt 1 discriminator 2 view .LVU969
3067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3606              		.loc 1 3067 2 discriminator 2 view .LVU970
 3607 0028 E26A     		ldr	r2, [r4, #44]
 3608 002a 0E4B     		ldr	r3, .L284+4
 3609 002c 1B68     		ldr	r3, [r3]
 3610 002e 9A42     		cmp	r2, r3
 3611 0030 01D9     		bls	.L281
3067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3612              		.loc 1 3067 2 discriminator 1 view .LVU971
 3613 0032 0C4B     		ldr	r3, .L284+4
 3614 0034 1A60     		str	r2, [r3]
 3615              	.L281:
3067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3616              		.loc 1 3067 2 discriminator 3 view .LVU972
3067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3617              		.loc 1 3067 2 discriminator 3 view .LVU973
 3618 0036 9300     		lsls	r3, r2, #2
 3619 0038 9B18     		adds	r3, r3, r2
 3620 003a 9800     		lsls	r0, r3, #2
 3621 003c 0A4B     		ldr	r3, .L284+8
 3622 003e C018     		adds	r0, r0, r3
 3623 0040 2900     		movs	r1, r5
 3624 0042 FFF7FEFF 		bl	vListInsertEnd
 3625              	.LVL287:
3067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3626              		.loc 1 3067 41 discriminator 3 view .LVU974
3069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3627              		.loc 1 3069 2 discriminator 3 view .LVU975
3069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3628              		.loc 1 3069 20 is_stmt 0 discriminator 3 view .LVU976
 3629 0046 E26A     		ldr	r2, [r4, #44]
3069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3630              		.loc 1 3069 47 discriminator 3 view .LVU977
ARM GAS  /tmp/cc8PdMPr.s 			page 168


 3631 0048 084B     		ldr	r3, .L284+12
 3632 004a 1B68     		ldr	r3, [r3]
 3633 004c DB6A     		ldr	r3, [r3, #44]
3069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3634              		.loc 1 3069 4 discriminator 3 view .LVU978
 3635 004e 9A42     		cmp	r2, r3
 3636 0050 02D9     		bls	.L276
3075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3637              		.loc 1 3075 3 is_stmt 1 view .LVU979
3075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3638              		.loc 1 3075 17 is_stmt 0 view .LVU980
 3639 0052 074B     		ldr	r3, .L284+16
 3640 0054 0122     		movs	r2, #1
 3641 0056 1A60     		str	r2, [r3]
 3642              	.L276:
3077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3643              		.loc 1 3077 1 view .LVU981
 3644              		@ sp needed
 3645              	.LVL288:
 3646              	.LVL289:
3077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3647              		.loc 1 3077 1 view .LVU982
 3648 0058 70BD     		pop	{r4, r5, r6, pc}
 3649              	.LVL290:
 3650              	.L283:
3060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 3651              		.loc 1 3060 2 is_stmt 1 discriminator 1 view .LVU983
 3652              		.syntax divided
 3653              	@ 3060 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3654 005a 72B6     		 cpsid i 
 3655              	@ 0 "" 2
 3656              		.thumb
 3657              		.syntax unified
 3658              	.L280:
3060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 3659              		.loc 1 3060 2 discriminator 2 view .LVU984
3060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 3660              		.loc 1 3060 2 discriminator 2 view .LVU985
 3661 005c FEE7     		b	.L280
 3662              	.L285:
 3663 005e C046     		.align	2
 3664              	.L284:
 3665 0060 00000000 		.word	.LANCHOR15
 3666 0064 00000000 		.word	.LANCHOR12
 3667 0068 00000000 		.word	pxReadyTasksLists
 3668 006c 00000000 		.word	.LANCHOR9
 3669 0070 00000000 		.word	.LANCHOR18
 3670              		.cfi_endproc
 3671              	.LFE26:
 3673              		.section	.text.vTaskSetTimeOutState,"ax",%progbits
 3674              		.align	1
 3675              		.global	vTaskSetTimeOutState
 3676              		.syntax unified
 3677              		.code	16
 3678              		.thumb_func
 3679              		.fpu softvfp
 3681              	vTaskSetTimeOutState:
ARM GAS  /tmp/cc8PdMPr.s 			page 169


 3682              	.LVL291:
 3683              	.LFB27:
3081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
 3684              		.loc 1 3081 1 view -0
 3685              		.cfi_startproc
 3686              		@ args = 0, pretend = 0, frame = 0
 3687              		@ frame_needed = 0, uses_anonymous_args = 0
3081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
 3688              		.loc 1 3081 1 is_stmt 0 view .LVU987
 3689 0000 10B5     		push	{r4, lr}
 3690              	.LCFI30:
 3691              		.cfi_def_cfa_offset 8
 3692              		.cfi_offset 4, -8
 3693              		.cfi_offset 14, -4
 3694 0002 041E     		subs	r4, r0, #0
3082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 3695              		.loc 1 3082 2 is_stmt 1 view .LVU988
 3696 0004 0AD0     		beq	.L289
3082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 3697              		.loc 1 3082 27 discriminator 2 view .LVU989
3083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3698              		.loc 1 3083 2 discriminator 2 view .LVU990
 3699 0006 FFF7FEFF 		bl	vPortEnterCritical
 3700              	.LVL292:
3085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
 3701              		.loc 1 3085 3 discriminator 2 view .LVU991
3085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
 3702              		.loc 1 3085 29 is_stmt 0 discriminator 2 view .LVU992
 3703 000a 054B     		ldr	r3, .L290
 3704 000c 1B68     		ldr	r3, [r3]
 3705 000e 2360     		str	r3, [r4]
3086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3706              		.loc 1 3086 3 is_stmt 1 discriminator 2 view .LVU993
3086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3707              		.loc 1 3086 30 is_stmt 0 discriminator 2 view .LVU994
 3708 0010 044B     		ldr	r3, .L290+4
 3709 0012 1B68     		ldr	r3, [r3]
 3710 0014 6360     		str	r3, [r4, #4]
3088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3711              		.loc 1 3088 2 is_stmt 1 discriminator 2 view .LVU995
 3712 0016 FFF7FEFF 		bl	vPortExitCritical
 3713              	.LVL293:
3089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3714              		.loc 1 3089 1 is_stmt 0 discriminator 2 view .LVU996
 3715              		@ sp needed
 3716              	.LVL294:
3089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3717              		.loc 1 3089 1 discriminator 2 view .LVU997
 3718 001a 10BD     		pop	{r4, pc}
 3719              	.LVL295:
 3720              	.L289:
3082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 3721              		.loc 1 3082 2 is_stmt 1 discriminator 1 view .LVU998
 3722              		.syntax divided
 3723              	@ 3082 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3724 001c 72B6     		 cpsid i 
 3725              	@ 0 "" 2
ARM GAS  /tmp/cc8PdMPr.s 			page 170


 3726              		.thumb
 3727              		.syntax unified
 3728              	.L288:
3082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 3729              		.loc 1 3082 2 discriminator 1 view .LVU999
3082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 3730              		.loc 1 3082 2 discriminator 1 view .LVU1000
 3731 001e FEE7     		b	.L288
 3732              	.L291:
 3733              		.align	2
 3734              	.L290:
 3735 0020 00000000 		.word	.LANCHOR16
 3736 0024 00000000 		.word	.LANCHOR14
 3737              		.cfi_endproc
 3738              	.LFE27:
 3740              		.section	.text.vTaskInternalSetTimeOutState,"ax",%progbits
 3741              		.align	1
 3742              		.global	vTaskInternalSetTimeOutState
 3743              		.syntax unified
 3744              		.code	16
 3745              		.thumb_func
 3746              		.fpu softvfp
 3748              	vTaskInternalSetTimeOutState:
 3749              	.LVL296:
 3750              	.LFB28:
3093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* For internal use only as it does not use a critical section. */
 3751              		.loc 1 3093 1 view -0
 3752              		.cfi_startproc
 3753              		@ args = 0, pretend = 0, frame = 0
 3754              		@ frame_needed = 0, uses_anonymous_args = 0
 3755              		@ link register save eliminated.
3095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 3756              		.loc 1 3095 2 view .LVU1002
3095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 3757              		.loc 1 3095 28 is_stmt 0 view .LVU1003
 3758 0000 034B     		ldr	r3, .L293
 3759 0002 1B68     		ldr	r3, [r3]
 3760 0004 0360     		str	r3, [r0]
3096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3761              		.loc 1 3096 2 is_stmt 1 view .LVU1004
3096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3762              		.loc 1 3096 29 is_stmt 0 view .LVU1005
 3763 0006 034B     		ldr	r3, .L293+4
 3764 0008 1B68     		ldr	r3, [r3]
 3765 000a 4360     		str	r3, [r0, #4]
3097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3766              		.loc 1 3097 1 view .LVU1006
 3767              		@ sp needed
 3768 000c 7047     		bx	lr
 3769              	.L294:
 3770 000e C046     		.align	2
 3771              	.L293:
 3772 0010 00000000 		.word	.LANCHOR16
 3773 0014 00000000 		.word	.LANCHOR14
 3774              		.cfi_endproc
 3775              	.LFE28:
 3777              		.section	.text.xTaskCheckForTimeOut,"ax",%progbits
ARM GAS  /tmp/cc8PdMPr.s 			page 171


 3778              		.align	1
 3779              		.global	xTaskCheckForTimeOut
 3780              		.syntax unified
 3781              		.code	16
 3782              		.thumb_func
 3783              		.fpu softvfp
 3785              	xTaskCheckForTimeOut:
 3786              	.LVL297:
 3787              	.LFB29:
3101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 3788              		.loc 1 3101 1 is_stmt 1 view -0
 3789              		.cfi_startproc
 3790              		@ args = 0, pretend = 0, frame = 0
 3791              		@ frame_needed = 0, uses_anonymous_args = 0
3101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 3792              		.loc 1 3101 1 is_stmt 0 view .LVU1008
 3793 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3794              	.LCFI31:
 3795              		.cfi_def_cfa_offset 24
 3796              		.cfi_offset 3, -24
 3797              		.cfi_offset 4, -20
 3798              		.cfi_offset 5, -16
 3799              		.cfi_offset 6, -12
 3800              		.cfi_offset 7, -8
 3801              		.cfi_offset 14, -4
 3802 0002 0500     		movs	r5, r0
 3803 0004 0C00     		movs	r4, r1
3102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3804              		.loc 1 3102 1 is_stmt 1 view .LVU1009
3104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 3805              		.loc 1 3104 2 view .LVU1010
 3806 0006 0028     		cmp	r0, #0
 3807 0008 17D0     		beq	.L305
3104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 3808              		.loc 1 3104 27 discriminator 2 view .LVU1011
3105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3809              		.loc 1 3105 2 discriminator 2 view .LVU1012
 3810 000a 0029     		cmp	r1, #0
 3811 000c 17D0     		beq	.L306
3105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3812              		.loc 1 3105 31 discriminator 2 view .LVU1013
3107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3813              		.loc 1 3107 2 discriminator 2 view .LVU1014
 3814 000e FFF7FEFF 		bl	vPortEnterCritical
 3815              	.LVL298:
 3816              	.LBB18:
3110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 3817              		.loc 1 3110 3 discriminator 2 view .LVU1015
3110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 3818              		.loc 1 3110 20 is_stmt 0 discriminator 2 view .LVU1016
 3819 0012 134B     		ldr	r3, .L308
 3820 0014 1968     		ldr	r1, [r3]
 3821              	.LVL299:
3111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3822              		.loc 1 3111 3 is_stmt 1 discriminator 2 view .LVU1017
3111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3823              		.loc 1 3111 62 is_stmt 0 discriminator 2 view .LVU1018
ARM GAS  /tmp/cc8PdMPr.s 			page 172


 3824 0016 6B68     		ldr	r3, [r5, #4]
3111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3825              		.loc 1 3111 20 discriminator 2 view .LVU1019
 3826 0018 C81A     		subs	r0, r1, r3
 3827              	.LVL300:
3125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3828              		.loc 1 3125 4 is_stmt 1 discriminator 2 view .LVU1020
3125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3829              		.loc 1 3125 8 is_stmt 0 discriminator 2 view .LVU1021
 3830 001a 2268     		ldr	r2, [r4]
3125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3831              		.loc 1 3125 6 discriminator 2 view .LVU1022
 3832 001c 561C     		adds	r6, r2, #1
 3833 001e 18D0     		beq	.L303
3135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3834              		.loc 1 3135 3 is_stmt 1 view .LVU1023
3135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3835              		.loc 1 3135 25 is_stmt 0 view .LVU1024
 3836 0020 104E     		ldr	r6, .L308+4
 3837 0022 3668     		ldr	r6, [r6]
3135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3838              		.loc 1 3135 5 view .LVU1025
 3839 0024 2F68     		ldr	r7, [r5]
 3840 0026 B742     		cmp	r7, r6
 3841 0028 01D0     		beq	.L301
3135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3842              		.loc 1 3135 56 discriminator 1 view .LVU1026
 3843 002a 8B42     		cmp	r3, r1
 3844 002c 16D9     		bls	.L304
 3845              	.L301:
3144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3846              		.loc 1 3144 8 is_stmt 1 view .LVU1027
3144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3847              		.loc 1 3144 10 is_stmt 0 view .LVU1028
 3848 002e 8242     		cmp	r2, r0
 3849 0030 07D8     		bhi	.L307
3153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
 3850              		.loc 1 3153 4 is_stmt 1 view .LVU1029
3153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
 3851              		.loc 1 3153 19 is_stmt 0 view .LVU1030
 3852 0032 0023     		movs	r3, #0
 3853 0034 2360     		str	r3, [r4]
3154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3854              		.loc 1 3154 4 is_stmt 1 view .LVU1031
 3855              	.LVL301:
3154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3856              		.loc 1 3154 12 is_stmt 0 view .LVU1032
 3857 0036 0124     		movs	r4, #1
 3858              	.LVL302:
3154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3859              		.loc 1 3154 12 view .LVU1033
 3860 0038 0CE0     		b	.L300
 3861              	.LVL303:
 3862              	.L305:
3154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3863              		.loc 1 3154 12 view .LVU1034
 3864              	.LBE18:
ARM GAS  /tmp/cc8PdMPr.s 			page 173


3104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 3865              		.loc 1 3104 2 is_stmt 1 discriminator 1 view .LVU1035
 3866              		.syntax divided
 3867              	@ 3104 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3868 003a 72B6     		 cpsid i 
 3869              	@ 0 "" 2
 3870              		.thumb
 3871              		.syntax unified
 3872              	.L297:
3104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 3873              		.loc 1 3104 2 discriminator 1 view .LVU1036
3104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 3874              		.loc 1 3104 2 discriminator 1 view .LVU1037
 3875 003c FEE7     		b	.L297
 3876              	.L306:
3105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3877              		.loc 1 3105 2 discriminator 1 view .LVU1038
 3878              		.syntax divided
 3879              	@ 3105 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3880 003e 72B6     		 cpsid i 
 3881              	@ 0 "" 2
 3882              		.thumb
 3883              		.syntax unified
 3884              	.L299:
3105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3885              		.loc 1 3105 2 discriminator 2 view .LVU1039
3105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3886              		.loc 1 3105 2 discriminator 2 view .LVU1040
 3887 0040 FEE7     		b	.L299
 3888              	.LVL304:
 3889              	.L307:
 3890              	.LBB19:
3147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
 3891              		.loc 1 3147 4 view .LVU1041
3147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
 3892              		.loc 1 3147 19 is_stmt 0 view .LVU1042
 3893 0042 5B1A     		subs	r3, r3, r1
 3894 0044 9B18     		adds	r3, r3, r2
 3895 0046 2360     		str	r3, [r4]
3148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFALSE;
 3896              		.loc 1 3148 4 is_stmt 1 view .LVU1043
 3897 0048 2800     		movs	r0, r5
 3898              	.LVL305:
3148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFALSE;
 3899              		.loc 1 3148 4 is_stmt 0 view .LVU1044
 3900 004a FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 3901              	.LVL306:
3149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3902              		.loc 1 3149 4 is_stmt 1 view .LVU1045
3149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3903              		.loc 1 3149 12 is_stmt 0 view .LVU1046
 3904 004e 0024     		movs	r4, #0
 3905              	.LVL307:
3149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3906              		.loc 1 3149 12 view .LVU1047
 3907 0050 00E0     		b	.L300
 3908              	.LVL308:
ARM GAS  /tmp/cc8PdMPr.s 			page 174


 3909              	.L303:
3130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3910              		.loc 1 3130 13 view .LVU1048
 3911 0052 0024     		movs	r4, #0
 3912              	.LVL309:
 3913              	.L300:
3130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3914              		.loc 1 3130 13 view .LVU1049
 3915              	.LBE19:
3157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3916              		.loc 1 3157 2 is_stmt 1 view .LVU1050
 3917 0054 FFF7FEFF 		bl	vPortExitCritical
 3918              	.LVL310:
3159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3919              		.loc 1 3159 2 view .LVU1051
3160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3920              		.loc 1 3160 1 is_stmt 0 view .LVU1052
 3921 0058 2000     		movs	r0, r4
 3922              		@ sp needed
 3923              	.LVL311:
 3924              	.LVL312:
3160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3925              		.loc 1 3160 1 view .LVU1053
 3926 005a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3927              	.LVL313:
 3928              	.L304:
 3929              	.LBB20:
3142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3930              		.loc 1 3142 12 view .LVU1054
 3931 005c 0124     		movs	r4, #1
 3932              	.LVL314:
3142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3933              		.loc 1 3142 12 view .LVU1055
 3934 005e F9E7     		b	.L300
 3935              	.L309:
 3936              		.align	2
 3937              	.L308:
 3938 0060 00000000 		.word	.LANCHOR14
 3939 0064 00000000 		.word	.LANCHOR16
 3940              	.LBE20:
 3941              		.cfi_endproc
 3942              	.LFE29:
 3944              		.section	.text.vTaskMissedYield,"ax",%progbits
 3945              		.align	1
 3946              		.global	vTaskMissedYield
 3947              		.syntax unified
 3948              		.code	16
 3949              		.thumb_func
 3950              		.fpu softvfp
 3952              	vTaskMissedYield:
 3953              	.LFB30:
3164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldPending = pdTRUE;
 3954              		.loc 1 3164 1 is_stmt 1 view -0
 3955              		.cfi_startproc
 3956              		@ args = 0, pretend = 0, frame = 0
 3957              		@ frame_needed = 0, uses_anonymous_args = 0
 3958              		@ link register save eliminated.
ARM GAS  /tmp/cc8PdMPr.s 			page 175


3165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3959              		.loc 1 3165 2 view .LVU1057
3165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3960              		.loc 1 3165 16 is_stmt 0 view .LVU1058
 3961 0000 014B     		ldr	r3, .L311
 3962 0002 0122     		movs	r2, #1
 3963 0004 1A60     		str	r2, [r3]
3166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3964              		.loc 1 3166 1 view .LVU1059
 3965              		@ sp needed
 3966 0006 7047     		bx	lr
 3967              	.L312:
 3968              		.align	2
 3969              	.L311:
 3970 0008 00000000 		.word	.LANCHOR18
 3971              		.cfi_endproc
 3972              	.LFE30:
 3974              		.section	.text.xTaskGetCurrentTaskHandle,"ax",%progbits
 3975              		.align	1
 3976              		.global	xTaskGetCurrentTaskHandle
 3977              		.syntax unified
 3978              		.code	16
 3979              		.thumb_func
 3980              		.fpu softvfp
 3982              	xTaskGetCurrentTaskHandle:
 3983              	.LFB36:
3751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
 3984              		.loc 1 3751 2 is_stmt 1 view -0
 3985              		.cfi_startproc
 3986              		@ args = 0, pretend = 0, frame = 0
 3987              		@ frame_needed = 0, uses_anonymous_args = 0
 3988              		@ link register save eliminated.
3752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3989              		.loc 1 3752 2 view .LVU1061
3757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3990              		.loc 1 3757 3 view .LVU1062
3757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3991              		.loc 1 3757 11 is_stmt 0 view .LVU1063
 3992 0000 014B     		ldr	r3, .L314
 3993 0002 1868     		ldr	r0, [r3]
 3994              	.LVL315:
3759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3995              		.loc 1 3759 3 is_stmt 1 view .LVU1064
3760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3996              		.loc 1 3760 2 is_stmt 0 view .LVU1065
 3997              		@ sp needed
 3998 0004 7047     		bx	lr
 3999              	.L315:
 4000 0006 C046     		.align	2
 4001              	.L314:
 4002 0008 00000000 		.word	.LANCHOR9
 4003              		.cfi_endproc
 4004              	.LFE36:
 4006              		.section	.text.xTaskGetSchedulerState,"ax",%progbits
 4007              		.align	1
 4008              		.global	xTaskGetSchedulerState
 4009              		.syntax unified
ARM GAS  /tmp/cc8PdMPr.s 			page 176


 4010              		.code	16
 4011              		.thumb_func
 4012              		.fpu softvfp
 4014              	xTaskGetSchedulerState:
 4015              	.LFB37:
3768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 4016              		.loc 1 3768 2 is_stmt 1 view -0
 4017              		.cfi_startproc
 4018              		@ args = 0, pretend = 0, frame = 0
 4019              		@ frame_needed = 0, uses_anonymous_args = 0
 4020              		@ link register save eliminated.
3769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4021              		.loc 1 3769 2 view .LVU1067
3771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4022              		.loc 1 3771 3 view .LVU1068
3771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4023              		.loc 1 3771 25 is_stmt 0 view .LVU1069
 4024 0000 064B     		ldr	r3, .L321
 4025 0002 1B68     		ldr	r3, [r3]
3771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4026              		.loc 1 3771 5 view .LVU1070
 4027 0004 002B     		cmp	r3, #0
 4028 0006 07D0     		beq	.L318
3777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4029              		.loc 1 3777 4 is_stmt 1 view .LVU1071
3777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4030              		.loc 1 3777 29 is_stmt 0 view .LVU1072
 4031 0008 054B     		ldr	r3, .L321+4
 4032 000a 1B68     		ldr	r3, [r3]
3777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4033              		.loc 1 3777 6 view .LVU1073
 4034 000c 002B     		cmp	r3, #0
 4035 000e 01D0     		beq	.L320
3783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4036              		.loc 1 3783 13 view .LVU1074
 4037 0010 0020     		movs	r0, #0
 4038              	.LVL316:
3787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4039              		.loc 1 3787 3 is_stmt 1 view .LVU1075
3787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4040              		.loc 1 3787 10 is_stmt 0 view .LVU1076
 4041 0012 02E0     		b	.L316
 4042              	.LVL317:
 4043              	.L320:
3779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4044              		.loc 1 3779 13 view .LVU1077
 4045 0014 0220     		movs	r0, #2
 4046 0016 00E0     		b	.L316
 4047              	.L318:
3773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4048              		.loc 1 3773 12 view .LVU1078
 4049 0018 0120     		movs	r0, #1
 4050              	.L316:
3788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4051              		.loc 1 3788 2 view .LVU1079
 4052              		@ sp needed
 4053 001a 7047     		bx	lr
ARM GAS  /tmp/cc8PdMPr.s 			page 177


 4054              	.L322:
 4055              		.align	2
 4056              	.L321:
 4057 001c 00000000 		.word	.LANCHOR10
 4058 0020 00000000 		.word	.LANCHOR15
 4059              		.cfi_endproc
 4060              	.LFE37:
 4062              		.section	.text.xTaskPriorityInherit,"ax",%progbits
 4063              		.align	1
 4064              		.global	xTaskPriorityInherit
 4065              		.syntax unified
 4066              		.code	16
 4067              		.thumb_func
 4068              		.fpu softvfp
 4070              	xTaskPriorityInherit:
 4071              	.LVL318:
 4072              	.LFB38:
3796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = ( TCB_t * ) pxMutexHolder;
 4073              		.loc 1 3796 2 is_stmt 1 view -0
 4074              		.cfi_startproc
 4075              		@ args = 0, pretend = 0, frame = 0
 4076              		@ frame_needed = 0, uses_anonymous_args = 0
3796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = ( TCB_t * ) pxMutexHolder;
 4077              		.loc 1 3796 2 is_stmt 0 view .LVU1081
 4078 0000 70B5     		push	{r4, r5, r6, lr}
 4079              	.LCFI32:
 4080              		.cfi_def_cfa_offset 16
 4081              		.cfi_offset 4, -16
 4082              		.cfi_offset 5, -12
 4083              		.cfi_offset 6, -8
 4084              		.cfi_offset 14, -4
 4085 0002 041E     		subs	r4, r0, #0
3797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
 4086              		.loc 1 3797 2 is_stmt 1 view .LVU1082
 4087              	.LVL319:
3798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4088              		.loc 1 3798 2 view .LVU1083
3803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4089              		.loc 1 3803 3 view .LVU1084
3803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4090              		.loc 1 3803 5 is_stmt 0 view .LVU1085
 4091 0004 3DD0     		beq	.L330
3808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4092              		.loc 1 3808 4 is_stmt 1 view .LVU1086
3808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4093              		.loc 1 3808 24 is_stmt 0 view .LVU1087
 4094 0006 C36A     		ldr	r3, [r0, #44]
3808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4095              		.loc 1 3808 51 view .LVU1088
 4096 0008 204A     		ldr	r2, .L333
 4097 000a 1268     		ldr	r2, [r2]
 4098 000c D26A     		ldr	r2, [r2, #44]
3808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4099              		.loc 1 3808 6 view .LVU1089
 4100 000e 9342     		cmp	r3, r2
 4101 0010 2FD2     		bcs	.L325
3813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/cc8PdMPr.s 			page 178


 4102              		.loc 1 3813 5 is_stmt 1 view .LVU1090
3813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4103              		.loc 1 3813 7 is_stmt 0 view .LVU1091
 4104 0012 8269     		ldr	r2, [r0, #24]
 4105 0014 002A     		cmp	r2, #0
 4106 0016 05DB     		blt	.L326
3815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4107              		.loc 1 3815 6 is_stmt 1 view .LVU1092
 4108 0018 1C4A     		ldr	r2, .L333
 4109 001a 1268     		ldr	r2, [r2]
 4110 001c D16A     		ldr	r1, [r2, #44]
 4111 001e 0722     		movs	r2, #7
 4112 0020 521A     		subs	r2, r2, r1
 4113 0022 8261     		str	r2, [r0, #24]
 4114              	.L326:
3819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4115              		.loc 1 3819 30 view .LVU1093
3824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4116              		.loc 1 3824 5 view .LVU1094
3824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4117              		.loc 1 3824 9 is_stmt 0 view .LVU1095
 4118 0024 9A00     		lsls	r2, r3, #2
 4119 0026 D318     		adds	r3, r2, r3
 4120 0028 9A00     		lsls	r2, r3, #2
 4121 002a 194B     		ldr	r3, .L333+4
 4122 002c D218     		adds	r2, r2, r3
3824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4123              		.loc 1 3824 130 view .LVU1096
 4124 002e 6369     		ldr	r3, [r4, #20]
 4125 0030 9342     		cmp	r3, r2
 4126 0032 05D0     		beq	.L332
3842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4127              		.loc 1 3842 6 is_stmt 1 view .LVU1097
3842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4128              		.loc 1 3842 49 is_stmt 0 view .LVU1098
 4129 0034 154B     		ldr	r3, .L333
 4130 0036 1B68     		ldr	r3, [r3]
 4131 0038 DB6A     		ldr	r3, [r3, #44]
 4132 003a E362     		str	r3, [r4, #44]
3848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4133              		.loc 1 3848 13 view .LVU1099
 4134 003c 0120     		movs	r0, #1
 4135              	.LVL320:
3848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4136              		.loc 1 3848 13 view .LVU1100
 4137 003e 21E0     		b	.L323
 4138              	.LVL321:
 4139              	.L332:
3826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4140              		.loc 1 3826 6 is_stmt 1 view .LVU1101
3826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4141              		.loc 1 3826 10 is_stmt 0 view .LVU1102
 4142 0040 251D     		adds	r5, r4, #4
 4143 0042 2800     		movs	r0, r5
 4144              	.LVL322:
3826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4145              		.loc 1 3826 10 view .LVU1103
ARM GAS  /tmp/cc8PdMPr.s 			page 179


 4146 0044 FFF7FEFF 		bl	uxListRemove
 4147              	.LVL323:
3832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4148              		.loc 1 3832 31 is_stmt 1 view .LVU1104
3836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
 4149              		.loc 1 3836 6 view .LVU1105
3836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
 4150              		.loc 1 3836 49 is_stmt 0 view .LVU1106
 4151 0048 104B     		ldr	r3, .L333
 4152 004a 1B68     		ldr	r3, [r3]
 4153 004c DB6A     		ldr	r3, [r3, #44]
3836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
 4154              		.loc 1 3836 35 view .LVU1107
 4155 004e E362     		str	r3, [r4, #44]
3837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4156              		.loc 1 3837 6 is_stmt 1 view .LVU1108
3837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4157              		.loc 1 3837 6 view .LVU1109
 4158 0050 104A     		ldr	r2, .L333+8
 4159 0052 1268     		ldr	r2, [r2]
 4160 0054 9342     		cmp	r3, r2
 4161 0056 09D8     		bhi	.L328
 4162              	.L329:
3837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4163              		.loc 1 3837 6 discriminator 3 view .LVU1110
3837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4164              		.loc 1 3837 6 discriminator 3 view .LVU1111
 4165 0058 9A00     		lsls	r2, r3, #2
 4166 005a D318     		adds	r3, r2, r3
 4167 005c 9800     		lsls	r0, r3, #2
 4168 005e 0C4B     		ldr	r3, .L333+4
 4169 0060 C018     		adds	r0, r0, r3
 4170 0062 2900     		movs	r1, r5
 4171 0064 FFF7FEFF 		bl	vListInsertEnd
 4172              	.LVL324:
3837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4173              		.loc 1 3837 47 discriminator 3 view .LVU1112
3848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4174              		.loc 1 3848 13 is_stmt 0 discriminator 3 view .LVU1113
 4175 0068 0120     		movs	r0, #1
 4176 006a 0BE0     		b	.L323
 4177              	.L328:
3837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4178              		.loc 1 3837 6 is_stmt 1 discriminator 1 view .LVU1114
 4179 006c 094A     		ldr	r2, .L333+8
 4180 006e 1360     		str	r3, [r2]
 4181 0070 F2E7     		b	.L329
 4182              	.LVL325:
 4183              	.L325:
3852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4184              		.loc 1 3852 5 view .LVU1115
3852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4185              		.loc 1 3852 25 is_stmt 0 view .LVU1116
 4186 0072 426C     		ldr	r2, [r0, #68]
3852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4187              		.loc 1 3852 56 view .LVU1117
 4188 0074 054B     		ldr	r3, .L333
ARM GAS  /tmp/cc8PdMPr.s 			page 180


 4189 0076 1B68     		ldr	r3, [r3]
 4190 0078 DB6A     		ldr	r3, [r3, #44]
3852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4191              		.loc 1 3852 7 view .LVU1118
 4192 007a 9A42     		cmp	r2, r3
 4193 007c 03D3     		bcc	.L331
3798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4194              		.loc 1 3798 13 view .LVU1119
 4195 007e 0020     		movs	r0, #0
 4196              	.LVL326:
3798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4197              		.loc 1 3798 13 view .LVU1120
 4198 0080 00E0     		b	.L323
 4199              	.LVL327:
 4200              	.L330:
3798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4201              		.loc 1 3798 13 view .LVU1121
 4202 0082 0020     		movs	r0, #0
 4203              	.LVL328:
 4204              	.L323:
3875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4205              		.loc 1 3875 2 view .LVU1122
 4206              		@ sp needed
 4207              	.LVL329:
3875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4208              		.loc 1 3875 2 view .LVU1123
 4209 0084 70BD     		pop	{r4, r5, r6, pc}
 4210              	.LVL330:
 4211              	.L331:
3861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4212              		.loc 1 3861 14 view .LVU1124
 4213 0086 0120     		movs	r0, #1
 4214              	.LVL331:
3871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4215              		.loc 1 3871 28 is_stmt 1 view .LVU1125
3874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4216              		.loc 1 3874 3 view .LVU1126
3874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4217              		.loc 1 3874 10 is_stmt 0 view .LVU1127
 4218 0088 FCE7     		b	.L323
 4219              	.L334:
 4220 008a C046     		.align	2
 4221              	.L333:
 4222 008c 00000000 		.word	.LANCHOR9
 4223 0090 00000000 		.word	pxReadyTasksLists
 4224 0094 00000000 		.word	.LANCHOR12
 4225              		.cfi_endproc
 4226              	.LFE38:
 4228              		.section	.text.xTaskPriorityDisinherit,"ax",%progbits
 4229              		.align	1
 4230              		.global	xTaskPriorityDisinherit
 4231              		.syntax unified
 4232              		.code	16
 4233              		.thumb_func
 4234              		.fpu softvfp
 4236              	xTaskPriorityDisinherit:
 4237              	.LVL332:
ARM GAS  /tmp/cc8PdMPr.s 			page 181


 4238              	.LFB39:
3883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
 4239              		.loc 1 3883 2 is_stmt 1 view -0
 4240              		.cfi_startproc
 4241              		@ args = 0, pretend = 0, frame = 0
 4242              		@ frame_needed = 0, uses_anonymous_args = 0
3883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
 4243              		.loc 1 3883 2 is_stmt 0 view .LVU1129
 4244 0000 70B5     		push	{r4, r5, r6, lr}
 4245              	.LCFI33:
 4246              		.cfi_def_cfa_offset 16
 4247              		.cfi_offset 4, -16
 4248              		.cfi_offset 5, -12
 4249              		.cfi_offset 6, -8
 4250              		.cfi_offset 14, -4
 4251 0002 041E     		subs	r4, r0, #0
3884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
 4252              		.loc 1 3884 2 is_stmt 1 view .LVU1130
 4253              	.LVL333:
3885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4254              		.loc 1 3885 2 view .LVU1131
3887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4255              		.loc 1 3887 3 view .LVU1132
3887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4256              		.loc 1 3887 5 is_stmt 0 view .LVU1133
 4257 0004 2DD0     		beq	.L342
3893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4258              		.loc 1 3893 4 is_stmt 1 view .LVU1134
 4259 0006 194B     		ldr	r3, .L346
 4260 0008 1B68     		ldr	r3, [r3]
 4261 000a 8342     		cmp	r3, r0
 4262 000c 01D0     		beq	.L337
3893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4263              		.loc 1 3893 4 discriminator 1 view .LVU1135
 4264              		.syntax divided
 4265              	@ 3893 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 4266 000e 72B6     		 cpsid i 
 4267              	@ 0 "" 2
 4268              		.thumb
 4269              		.syntax unified
 4270              	.L338:
3893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4271              		.loc 1 3893 4 discriminator 1 view .LVU1136
3893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4272              		.loc 1 3893 4 discriminator 1 view .LVU1137
 4273 0010 FEE7     		b	.L338
 4274              	.L337:
3893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4275              		.loc 1 3893 41 discriminator 2 view .LVU1138
3894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4276              		.loc 1 3894 4 discriminator 2 view .LVU1139
 4277 0012 836C     		ldr	r3, [r0, #72]
 4278 0014 002B     		cmp	r3, #0
 4279 0016 01D1     		bne	.L339
3894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4280              		.loc 1 3894 4 discriminator 1 view .LVU1140
 4281              		.syntax divided
ARM GAS  /tmp/cc8PdMPr.s 			page 182


 4282              	@ 3894 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 4283 0018 72B6     		 cpsid i 
 4284              	@ 0 "" 2
 4285              		.thumb
 4286              		.syntax unified
 4287              	.L340:
3894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4288              		.loc 1 3894 4 discriminator 2 view .LVU1141
3894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4289              		.loc 1 3894 4 discriminator 2 view .LVU1142
 4290 001a FEE7     		b	.L340
 4291              	.L339:
3894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4292              		.loc 1 3894 40 discriminator 2 view .LVU1143
3895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4293              		.loc 1 3895 4 discriminator 2 view .LVU1144
3895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4294              		.loc 1 3895 28 is_stmt 0 discriminator 2 view .LVU1145
 4295 001c 013B     		subs	r3, r3, #1
 4296 001e 8364     		str	r3, [r0, #72]
3899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4297              		.loc 1 3899 4 is_stmt 1 discriminator 2 view .LVU1146
3899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4298              		.loc 1 3899 6 is_stmt 0 discriminator 2 view .LVU1147
 4299 0020 C26A     		ldr	r2, [r0, #44]
 4300 0022 416C     		ldr	r1, [r0, #68]
 4301 0024 8A42     		cmp	r2, r1
 4302 0026 1ED0     		beq	.L343
3902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4303              		.loc 1 3902 5 is_stmt 1 view .LVU1148
3902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4304              		.loc 1 3902 7 is_stmt 0 view .LVU1149
 4305 0028 002B     		cmp	r3, #0
 4306 002a 01D0     		beq	.L345
3885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4307              		.loc 1 3885 13 view .LVU1150
 4308 002c 0020     		movs	r0, #0
 4309              	.LVL334:
3951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4310              		.loc 1 3951 28 is_stmt 1 view .LVU1151
3954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4311              		.loc 1 3954 3 view .LVU1152
3954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4312              		.loc 1 3954 10 is_stmt 0 view .LVU1153
 4313 002e 19E0     		b	.L335
 4314              	.LVL335:
 4315              	.L345:
3909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4316              		.loc 1 3909 6 is_stmt 1 view .LVU1154
3909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4317              		.loc 1 3909 10 is_stmt 0 view .LVU1155
 4318 0030 051D     		adds	r5, r0, #4
 4319 0032 2800     		movs	r0, r5
 4320              	.LVL336:
3909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4321              		.loc 1 3909 10 view .LVU1156
 4322 0034 FFF7FEFF 		bl	uxListRemove
ARM GAS  /tmp/cc8PdMPr.s 			page 183


 4323              	.LVL337:
3915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4324              		.loc 1 3915 31 is_stmt 1 view .LVU1157
3920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = pxTCB->uxBasePriority;
 4325              		.loc 1 3920 67 view .LVU1158
3921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4326              		.loc 1 3921 6 view .LVU1159
3921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4327              		.loc 1 3921 31 is_stmt 0 view .LVU1160
 4328 0038 636C     		ldr	r3, [r4, #68]
3921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4329              		.loc 1 3921 24 view .LVU1161
 4330 003a E362     		str	r3, [r4, #44]
3926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 4331              		.loc 1 3926 6 is_stmt 1 view .LVU1162
 4332 003c 0722     		movs	r2, #7
 4333 003e D21A     		subs	r2, r2, r3
 4334 0040 A261     		str	r2, [r4, #24]
3927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4335              		.loc 1 3927 6 view .LVU1163
3927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4336              		.loc 1 3927 6 view .LVU1164
 4337 0042 0B4A     		ldr	r2, .L346+4
 4338 0044 1268     		ldr	r2, [r2]
 4339 0046 9342     		cmp	r3, r2
 4340 0048 01D9     		bls	.L341
3927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4341              		.loc 1 3927 6 discriminator 1 view .LVU1165
 4342 004a 094A     		ldr	r2, .L346+4
 4343 004c 1360     		str	r3, [r2]
 4344              	.L341:
3927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4345              		.loc 1 3927 6 discriminator 3 view .LVU1166
3927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4346              		.loc 1 3927 6 discriminator 3 view .LVU1167
 4347 004e 9A00     		lsls	r2, r3, #2
 4348 0050 D318     		adds	r3, r2, r3
 4349 0052 9800     		lsls	r0, r3, #2
 4350 0054 074B     		ldr	r3, .L346+8
 4351 0056 C018     		adds	r0, r0, r3
 4352 0058 2900     		movs	r1, r5
 4353 005a FFF7FEFF 		bl	vListInsertEnd
 4354              	.LVL338:
3927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4355              		.loc 1 3927 36 discriminator 3 view .LVU1168
3937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4356              		.loc 1 3937 6 discriminator 3 view .LVU1169
3937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4357              		.loc 1 3937 14 is_stmt 0 discriminator 3 view .LVU1170
 4358 005e 0120     		movs	r0, #1
 4359 0060 00E0     		b	.L335
 4360              	.LVL339:
 4361              	.L342:
3885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4362              		.loc 1 3885 13 view .LVU1171
 4363 0062 0020     		movs	r0, #0
 4364              	.LVL340:
ARM GAS  /tmp/cc8PdMPr.s 			page 184


 4365              	.L335:
3955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4366              		.loc 1 3955 2 view .LVU1172
 4367              		@ sp needed
 4368              	.LVL341:
3955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4369              		.loc 1 3955 2 view .LVU1173
 4370 0064 70BD     		pop	{r4, r5, r6, pc}
 4371              	.LVL342:
 4372              	.L343:
3885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4373              		.loc 1 3885 13 view .LVU1174
 4374 0066 0020     		movs	r0, #0
 4375              	.LVL343:
3885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4376              		.loc 1 3885 13 view .LVU1175
 4377 0068 FCE7     		b	.L335
 4378              	.L347:
 4379 006a C046     		.align	2
 4380              	.L346:
 4381 006c 00000000 		.word	.LANCHOR9
 4382 0070 00000000 		.word	.LANCHOR12
 4383 0074 00000000 		.word	pxReadyTasksLists
 4384              		.cfi_endproc
 4385              	.LFE39:
 4387              		.section	.text.vTaskPriorityDisinheritAfterTimeout,"ax",%progbits
 4388              		.align	1
 4389              		.global	vTaskPriorityDisinheritAfterTimeout
 4390              		.syntax unified
 4391              		.code	16
 4392              		.thumb_func
 4393              		.fpu softvfp
 4395              	vTaskPriorityDisinheritAfterTimeout:
 4396              	.LVL344:
 4397              	.LFB40:
3963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
 4398              		.loc 1 3963 2 is_stmt 1 view -0
 4399              		.cfi_startproc
 4400              		@ args = 0, pretend = 0, frame = 0
 4401              		@ frame_needed = 0, uses_anonymous_args = 0
3963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
 4402              		.loc 1 3963 2 is_stmt 0 view .LVU1177
 4403 0000 70B5     		push	{r4, r5, r6, lr}
 4404              	.LCFI34:
 4405              		.cfi_def_cfa_offset 16
 4406              		.cfi_offset 4, -16
 4407              		.cfi_offset 5, -12
 4408              		.cfi_offset 6, -8
 4409              		.cfi_offset 14, -4
 4410 0002 041E     		subs	r4, r0, #0
3964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxPriorityUsedOnEntry, uxPriorityToUse;
 4411              		.loc 1 3964 2 is_stmt 1 view .LVU1178
 4412              	.LVL345:
3965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const UBaseType_t uxOnlyOneMutexHeld = ( UBaseType_t ) 1;
 4413              		.loc 1 3965 2 view .LVU1179
3966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4414              		.loc 1 3966 2 view .LVU1180
ARM GAS  /tmp/cc8PdMPr.s 			page 185


3968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4415              		.loc 1 3968 3 view .LVU1181
3968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4416              		.loc 1 3968 5 is_stmt 0 view .LVU1182
 4417 0004 0DD0     		beq	.L348
3972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4418              		.loc 1 3972 4 is_stmt 1 view .LVU1183
 4419 0006 826C     		ldr	r2, [r0, #72]
 4420 0008 002A     		cmp	r2, #0
 4421 000a 01D1     		bne	.L350
3972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4422              		.loc 1 3972 4 discriminator 1 view .LVU1184
 4423              		.syntax divided
 4424              	@ 3972 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 4425 000c 72B6     		 cpsid i 
 4426              	@ 0 "" 2
 4427              		.thumb
 4428              		.syntax unified
 4429              	.L351:
3972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4430              		.loc 1 3972 4 discriminator 1 view .LVU1185
3972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4431              		.loc 1 3972 4 discriminator 1 view .LVU1186
 4432 000e FEE7     		b	.L351
 4433              	.L350:
3972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4434              		.loc 1 3972 40 discriminator 2 view .LVU1187
3978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4435              		.loc 1 3978 4 discriminator 2 view .LVU1188
3978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4436              		.loc 1 3978 13 is_stmt 0 discriminator 2 view .LVU1189
 4437 0010 436C     		ldr	r3, [r0, #68]
3978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4438              		.loc 1 3978 6 discriminator 2 view .LVU1190
 4439 0012 8B42     		cmp	r3, r1
 4440 0014 00D2     		bcs	.L352
3980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4441              		.loc 1 3980 21 view .LVU1191
 4442 0016 0B00     		movs	r3, r1
 4443              	.L352:
 4444              	.LVL346:
3988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4445              		.loc 1 3988 4 is_stmt 1 view .LVU1192
3988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4446              		.loc 1 3988 13 is_stmt 0 view .LVU1193
 4447 0018 E16A     		ldr	r1, [r4, #44]
 4448              	.LVL347:
3988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4449              		.loc 1 3988 6 view .LVU1194
 4450 001a 9942     		cmp	r1, r3
 4451 001c 01D0     		beq	.L348
3994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4452              		.loc 1 3994 5 is_stmt 1 view .LVU1195
3994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4453              		.loc 1 3994 7 is_stmt 0 view .LVU1196
 4454 001e 012A     		cmp	r2, #1
 4455 0020 00D0     		beq	.L357
ARM GAS  /tmp/cc8PdMPr.s 			page 186


 4456              	.LVL348:
 4457              	.L348:
4057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4458              		.loc 1 4057 2 view .LVU1197
 4459              		@ sp needed
 4460              	.LVL349:
4057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4461              		.loc 1 4057 2 view .LVU1198
 4462 0022 70BD     		pop	{r4, r5, r6, pc}
 4463              	.LVL350:
 4464              	.L357:
3999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4465              		.loc 1 3999 6 is_stmt 1 view .LVU1199
 4466 0024 144A     		ldr	r2, .L359
 4467 0026 1268     		ldr	r2, [r2]
 4468 0028 A242     		cmp	r2, r4
 4469 002a 22D0     		beq	.L358
3999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4470              		.loc 1 3999 43 discriminator 2 view .LVU1200
4004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxPriorityUsedOnEntry = pxTCB->uxPriority;
 4471              		.loc 1 4004 67 discriminator 2 view .LVU1201
4005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = uxPriorityToUse;
 4472              		.loc 1 4005 6 discriminator 2 view .LVU1202
 4473              	.LVL351:
4006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4474              		.loc 1 4006 6 discriminator 2 view .LVU1203
4006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4475              		.loc 1 4006 24 is_stmt 0 discriminator 2 view .LVU1204
 4476 002c E362     		str	r3, [r4, #44]
4010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4477              		.loc 1 4010 6 is_stmt 1 discriminator 2 view .LVU1205
4010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4478              		.loc 1 4010 8 is_stmt 0 discriminator 2 view .LVU1206
 4479 002e A269     		ldr	r2, [r4, #24]
 4480 0030 002A     		cmp	r2, #0
 4481 0032 02DB     		blt	.L355
4012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4482              		.loc 1 4012 7 is_stmt 1 view .LVU1207
 4483 0034 0722     		movs	r2, #7
 4484 0036 D31A     		subs	r3, r2, r3
 4485              	.LVL352:
4012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4486              		.loc 1 4012 7 is_stmt 0 view .LVU1208
 4487 0038 A361     		str	r3, [r4, #24]
 4488              	.L355:
4016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4489              		.loc 1 4016 31 is_stmt 1 view .LVU1209
4025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4490              		.loc 1 4025 6 view .LVU1210
4025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4491              		.loc 1 4025 10 is_stmt 0 view .LVU1211
 4492 003a 8A00     		lsls	r2, r1, #2
 4493 003c 5218     		adds	r2, r2, r1
 4494 003e 9300     		lsls	r3, r2, #2
 4495 0040 0E4A     		ldr	r2, .L359+4
 4496 0042 9B18     		adds	r3, r3, r2
4025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
ARM GAS  /tmp/cc8PdMPr.s 			page 187


 4497              		.loc 1 4025 113 view .LVU1212
 4498 0044 6269     		ldr	r2, [r4, #20]
 4499 0046 9A42     		cmp	r2, r3
 4500 0048 EBD1     		bne	.L348
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 4501              		.loc 1 4027 7 is_stmt 1 view .LVU1213
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 4502              		.loc 1 4027 11 is_stmt 0 view .LVU1214
 4503 004a 251D     		adds	r5, r4, #4
 4504 004c 2800     		movs	r0, r5
 4505              	.LVL353:
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 4506              		.loc 1 4027 11 view .LVU1215
 4507 004e FFF7FEFF 		bl	uxListRemove
 4508              	.LVL354:
4033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
 4509              		.loc 1 4033 32 is_stmt 1 view .LVU1216
4036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4510              		.loc 1 4036 7 view .LVU1217
4036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4511              		.loc 1 4036 7 view .LVU1218
 4512 0052 E26A     		ldr	r2, [r4, #44]
 4513 0054 0A4B     		ldr	r3, .L359+8
 4514 0056 1B68     		ldr	r3, [r3]
 4515 0058 9A42     		cmp	r2, r3
 4516 005a 01D9     		bls	.L356
4036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4517              		.loc 1 4036 7 discriminator 1 view .LVU1219
 4518 005c 084B     		ldr	r3, .L359+8
 4519 005e 1A60     		str	r2, [r3]
 4520              	.L356:
4036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4521              		.loc 1 4036 7 discriminator 3 view .LVU1220
4036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4522              		.loc 1 4036 7 discriminator 3 view .LVU1221
 4523 0060 9300     		lsls	r3, r2, #2
 4524 0062 9B18     		adds	r3, r3, r2
 4525 0064 9800     		lsls	r0, r3, #2
 4526 0066 054B     		ldr	r3, .L359+4
 4527 0068 C018     		adds	r0, r0, r3
 4528 006a 2900     		movs	r1, r5
 4529 006c FFF7FEFF 		bl	vListInsertEnd
 4530              	.LVL355:
4036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4531              		.loc 1 4036 37 discriminator 3 view .LVU1222
4055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4532              		.loc 1 4055 28 discriminator 3 view .LVU1223
4057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4533              		.loc 1 4057 2 is_stmt 0 discriminator 3 view .LVU1224
 4534 0070 D7E7     		b	.L348
 4535              	.LVL356:
 4536              	.L358:
3999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4537              		.loc 1 3999 6 is_stmt 1 discriminator 1 view .LVU1225
 4538              		.syntax divided
 4539              	@ 3999 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 4540 0072 72B6     		 cpsid i 
ARM GAS  /tmp/cc8PdMPr.s 			page 188


 4541              	@ 0 "" 2
 4542              		.thumb
 4543              		.syntax unified
 4544              	.L354:
3999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4545              		.loc 1 3999 6 discriminator 2 view .LVU1226
3999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4546              		.loc 1 3999 6 discriminator 2 view .LVU1227
 4547 0074 FEE7     		b	.L354
 4548              	.L360:
 4549 0076 C046     		.align	2
 4550              	.L359:
 4551 0078 00000000 		.word	.LANCHOR9
 4552 007c 00000000 		.word	pxReadyTasksLists
 4553 0080 00000000 		.word	.LANCHOR12
 4554              		.cfi_endproc
 4555              	.LFE40:
 4557              		.section	.text.uxTaskResetEventItemValue,"ax",%progbits
 4558              		.align	1
 4559              		.global	uxTaskResetEventItemValue
 4560              		.syntax unified
 4561              		.code	16
 4562              		.thumb_func
 4563              		.fpu softvfp
 4565              	uxTaskResetEventItemValue:
 4566              	.LFB41:
4377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t uxReturn;
 4567              		.loc 1 4377 1 view -0
 4568              		.cfi_startproc
 4569              		@ args = 0, pretend = 0, frame = 0
 4570              		@ frame_needed = 0, uses_anonymous_args = 0
 4571              		@ link register save eliminated.
4378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4572              		.loc 1 4378 1 view .LVU1229
4380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4573              		.loc 1 4380 2 view .LVU1230
4380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4574              		.loc 1 4380 13 is_stmt 0 view .LVU1231
 4575 0000 044A     		ldr	r2, .L362
 4576 0002 1368     		ldr	r3, [r2]
4380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4577              		.loc 1 4380 11 view .LVU1232
 4578 0004 9869     		ldr	r0, [r3, #24]
 4579              	.LVL357:
4384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4580              		.loc 1 4384 2 is_stmt 1 view .LVU1233
 4581 0006 1368     		ldr	r3, [r2]
 4582 0008 D96A     		ldr	r1, [r3, #44]
 4583 000a 1268     		ldr	r2, [r2]
 4584 000c 0723     		movs	r3, #7
 4585 000e 5B1A     		subs	r3, r3, r1
 4586 0010 9361     		str	r3, [r2, #24]
4386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4587              		.loc 1 4386 2 view .LVU1234
4387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4588              		.loc 1 4387 1 is_stmt 0 view .LVU1235
 4589              		@ sp needed
ARM GAS  /tmp/cc8PdMPr.s 			page 189


 4590 0012 7047     		bx	lr
 4591              	.L363:
 4592              		.align	2
 4593              	.L362:
 4594 0014 00000000 		.word	.LANCHOR9
 4595              		.cfi_endproc
 4596              	.LFE41:
 4598              		.section	.text.pvTaskIncrementMutexHeldCount,"ax",%progbits
 4599              		.align	1
 4600              		.global	pvTaskIncrementMutexHeldCount
 4601              		.syntax unified
 4602              		.code	16
 4603              		.thumb_func
 4604              		.fpu softvfp
 4606              	pvTaskIncrementMutexHeldCount:
 4607              	.LFB42:
4393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xSemaphoreCreateMutex() is called before any tasks have been created
 4608              		.loc 1 4393 2 is_stmt 1 view -0
 4609              		.cfi_startproc
 4610              		@ args = 0, pretend = 0, frame = 0
 4611              		@ frame_needed = 0, uses_anonymous_args = 0
 4612              		@ link register save eliminated.
4396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4613              		.loc 1 4396 3 view .LVU1237
4396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4614              		.loc 1 4396 20 is_stmt 0 view .LVU1238
 4615 0000 054B     		ldr	r3, .L366
 4616 0002 1B68     		ldr	r3, [r3]
4396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4617              		.loc 1 4396 5 view .LVU1239
 4618 0004 002B     		cmp	r3, #0
 4619 0006 04D0     		beq	.L365
4398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4620              		.loc 1 4398 4 is_stmt 1 view .LVU1240
4398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4621              		.loc 1 4398 18 is_stmt 0 view .LVU1241
 4622 0008 034B     		ldr	r3, .L366
 4623 000a 1A68     		ldr	r2, [r3]
4398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4624              		.loc 1 4398 35 view .LVU1242
 4625 000c 936C     		ldr	r3, [r2, #72]
 4626 000e 0133     		adds	r3, r3, #1
 4627 0010 9364     		str	r3, [r2, #72]
 4628              	.L365:
4401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4629              		.loc 1 4401 3 is_stmt 1 view .LVU1243
4401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4630              		.loc 1 4401 10 is_stmt 0 view .LVU1244
 4631 0012 014B     		ldr	r3, .L366
 4632 0014 1868     		ldr	r0, [r3]
4402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4633              		.loc 1 4402 2 view .LVU1245
 4634              		@ sp needed
 4635 0016 7047     		bx	lr
 4636              	.L367:
 4637              		.align	2
 4638              	.L366:
ARM GAS  /tmp/cc8PdMPr.s 			page 190


 4639 0018 00000000 		.word	.LANCHOR9
 4640              		.cfi_endproc
 4641              	.LFE42:
 4643              		.section	.text.ulTaskNotifyTake,"ax",%progbits
 4644              		.align	1
 4645              		.global	ulTaskNotifyTake
 4646              		.syntax unified
 4647              		.code	16
 4648              		.thumb_func
 4649              		.fpu softvfp
 4651              	ulTaskNotifyTake:
 4652              	.LVL358:
 4653              	.LFB43:
4410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
 4654              		.loc 1 4410 2 is_stmt 1 view -0
 4655              		.cfi_startproc
 4656              		@ args = 0, pretend = 0, frame = 0
 4657              		@ frame_needed = 0, uses_anonymous_args = 0
4410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
 4658              		.loc 1 4410 2 is_stmt 0 view .LVU1247
 4659 0000 70B5     		push	{r4, r5, r6, lr}
 4660              	.LCFI35:
 4661              		.cfi_def_cfa_offset 16
 4662              		.cfi_offset 4, -16
 4663              		.cfi_offset 5, -12
 4664              		.cfi_offset 6, -8
 4665              		.cfi_offset 14, -4
 4666 0002 0500     		movs	r5, r0
 4667 0004 0C00     		movs	r4, r1
4411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4668              		.loc 1 4411 2 is_stmt 1 view .LVU1248
4413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4669              		.loc 1 4413 3 view .LVU1249
 4670 0006 FFF7FEFF 		bl	vPortEnterCritical
 4671              	.LVL359:
4416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4672              		.loc 1 4416 4 view .LVU1250
4416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4673              		.loc 1 4416 20 is_stmt 0 view .LVU1251
 4674 000a 174B     		ldr	r3, .L373
 4675 000c 1B68     		ldr	r3, [r3]
 4676 000e DB6C     		ldr	r3, [r3, #76]
4416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4677              		.loc 1 4416 6 view .LVU1252
 4678 0010 002B     		cmp	r3, #0
 4679 0012 06D1     		bne	.L369
4419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4680              		.loc 1 4419 5 is_stmt 1 view .LVU1253
4419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4681              		.loc 1 4419 17 is_stmt 0 view .LVU1254
 4682 0014 144B     		ldr	r3, .L373
 4683 0016 1A68     		ldr	r2, [r3]
4419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4684              		.loc 1 4419 33 view .LVU1255
 4685 0018 5023     		movs	r3, #80
 4686 001a 0121     		movs	r1, #1
 4687 001c D154     		strb	r1, [r2, r3]
ARM GAS  /tmp/cc8PdMPr.s 			page 191


4421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4688              		.loc 1 4421 5 is_stmt 1 view .LVU1256
4421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4689              		.loc 1 4421 7 is_stmt 0 view .LVU1257
 4690 001e 002C     		cmp	r4, #0
 4691 0020 17D1     		bne	.L372
 4692              	.L369:
4439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4693              		.loc 1 4439 29 is_stmt 1 view .LVU1258
4442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4694              		.loc 1 4442 3 view .LVU1259
 4695 0022 FFF7FEFF 		bl	vPortExitCritical
 4696              	.LVL360:
4444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4697              		.loc 1 4444 3 view .LVU1260
 4698 0026 FFF7FEFF 		bl	vPortEnterCritical
 4699              	.LVL361:
4446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
 4700              		.loc 1 4446 27 view .LVU1261
4447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4701              		.loc 1 4447 4 view .LVU1262
4447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4702              		.loc 1 4447 27 is_stmt 0 view .LVU1263
 4703 002a 0F4B     		ldr	r3, .L373
 4704 002c 1B68     		ldr	r3, [r3]
4447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4705              		.loc 1 4447 13 view .LVU1264
 4706 002e DC6C     		ldr	r4, [r3, #76]
 4707              	.LVL362:
4449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4708              		.loc 1 4449 4 is_stmt 1 view .LVU1265
4449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4709              		.loc 1 4449 6 is_stmt 0 view .LVU1266
 4710 0030 002C     		cmp	r4, #0
 4711 0032 05D0     		beq	.L370
4451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4712              		.loc 1 4451 5 is_stmt 1 view .LVU1267
4451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4713              		.loc 1 4451 7 is_stmt 0 view .LVU1268
 4714 0034 002D     		cmp	r5, #0
 4715 0036 12D0     		beq	.L371
4453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4716              		.loc 1 4453 6 is_stmt 1 view .LVU1269
4453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4717              		.loc 1 4453 18 is_stmt 0 view .LVU1270
 4718 0038 0B4B     		ldr	r3, .L373
 4719 003a 1B68     		ldr	r3, [r3]
4453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4720              		.loc 1 4453 36 view .LVU1271
 4721 003c 0022     		movs	r2, #0
 4722 003e DA64     		str	r2, [r3, #76]
 4723              	.L370:
4462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4724              		.loc 1 4462 29 is_stmt 1 view .LVU1272
4465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4725              		.loc 1 4465 4 view .LVU1273
4465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/cc8PdMPr.s 			page 192


 4726              		.loc 1 4465 16 is_stmt 0 view .LVU1274
 4727 0040 094B     		ldr	r3, .L373
 4728 0042 1A68     		ldr	r2, [r3]
4465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4729              		.loc 1 4465 32 view .LVU1275
 4730 0044 5023     		movs	r3, #80
 4731 0046 0021     		movs	r1, #0
 4732 0048 D154     		strb	r1, [r2, r3]
4467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4733              		.loc 1 4467 3 is_stmt 1 view .LVU1276
 4734 004a FFF7FEFF 		bl	vPortExitCritical
 4735              	.LVL363:
4469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4736              		.loc 1 4469 3 view .LVU1277
4470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4737              		.loc 1 4470 2 is_stmt 0 view .LVU1278
 4738 004e 2000     		movs	r0, r4
 4739              		@ sp needed
 4740              	.LVL364:
 4741              	.LVL365:
4470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4742              		.loc 1 4470 2 view .LVU1279
 4743 0050 70BD     		pop	{r4, r5, r6, pc}
 4744              	.LVL366:
 4745              	.L372:
4423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
 4746              		.loc 1 4423 6 is_stmt 1 view .LVU1280
 4747 0052 2000     		movs	r0, r4
 4748 0054 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 4749              	.LVL367:
4424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4750              		.loc 1 4424 35 view .LVU1281
4430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4751              		.loc 1 4430 6 view .LVU1282
 4752 0058 FFF7FEFF 		bl	vPortYield
 4753              	.LVL368:
 4754 005c E1E7     		b	.L369
 4755              	.LVL369:
 4756              	.L371:
4457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4757              		.loc 1 4457 6 view .LVU1283
4457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4758              		.loc 1 4457 18 is_stmt 0 view .LVU1284
 4759 005e 024B     		ldr	r3, .L373
 4760 0060 1B68     		ldr	r3, [r3]
4457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4761              		.loc 1 4457 47 view .LVU1285
 4762 0062 621E     		subs	r2, r4, #1
4457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4763              		.loc 1 4457 36 view .LVU1286
 4764 0064 DA64     		str	r2, [r3, #76]
 4765 0066 EBE7     		b	.L370
 4766              	.L374:
 4767              		.align	2
 4768              	.L373:
 4769 0068 00000000 		.word	.LANCHOR9
 4770              		.cfi_endproc
ARM GAS  /tmp/cc8PdMPr.s 			page 193


 4771              	.LFE43:
 4773              		.section	.text.xTaskNotifyWait,"ax",%progbits
 4774              		.align	1
 4775              		.global	xTaskNotifyWait
 4776              		.syntax unified
 4777              		.code	16
 4778              		.thumb_func
 4779              		.fpu softvfp
 4781              	xTaskNotifyWait:
 4782              	.LVL370:
 4783              	.LFB44:
4478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 4784              		.loc 1 4478 2 is_stmt 1 view -0
 4785              		.cfi_startproc
 4786              		@ args = 0, pretend = 0, frame = 0
 4787              		@ frame_needed = 0, uses_anonymous_args = 0
4478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 4788              		.loc 1 4478 2 is_stmt 0 view .LVU1288
 4789 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4790              	.LCFI36:
 4791              		.cfi_def_cfa_offset 24
 4792              		.cfi_offset 3, -24
 4793              		.cfi_offset 4, -20
 4794              		.cfi_offset 5, -16
 4795              		.cfi_offset 6, -12
 4796              		.cfi_offset 7, -8
 4797              		.cfi_offset 14, -4
 4798 0002 0700     		movs	r7, r0
 4799 0004 0E00     		movs	r6, r1
 4800 0006 1400     		movs	r4, r2
 4801 0008 1D00     		movs	r5, r3
4479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4802              		.loc 1 4479 2 is_stmt 1 view .LVU1289
4481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4803              		.loc 1 4481 3 view .LVU1290
 4804 000a FFF7FEFF 		bl	vPortEnterCritical
 4805              	.LVL371:
4484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4806              		.loc 1 4484 4 view .LVU1291
4484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4807              		.loc 1 4484 20 is_stmt 0 view .LVU1292
 4808 000e 1C4B     		ldr	r3, .L382
 4809 0010 1A68     		ldr	r2, [r3]
 4810 0012 5023     		movs	r3, #80
 4811 0014 D35C     		ldrb	r3, [r2, r3]
4484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4812              		.loc 1 4484 6 view .LVU1293
 4813 0016 022B     		cmp	r3, #2
 4814 0018 0AD0     		beq	.L376
4489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4815              		.loc 1 4489 5 is_stmt 1 view .LVU1294
4489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4816              		.loc 1 4489 35 is_stmt 0 view .LVU1295
 4817 001a 194A     		ldr	r2, .L382
 4818 001c 1168     		ldr	r1, [r2]
 4819 001e CB6C     		ldr	r3, [r1, #76]
 4820 0020 BB43     		bics	r3, r7
ARM GAS  /tmp/cc8PdMPr.s 			page 194


 4821 0022 CB64     		str	r3, [r1, #76]
4492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4822              		.loc 1 4492 5 is_stmt 1 view .LVU1296
4492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4823              		.loc 1 4492 17 is_stmt 0 view .LVU1297
 4824 0024 1268     		ldr	r2, [r2]
4492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4825              		.loc 1 4492 33 view .LVU1298
 4826 0026 5023     		movs	r3, #80
 4827 0028 0121     		movs	r1, #1
 4828 002a D154     		strb	r1, [r2, r3]
4494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4829              		.loc 1 4494 5 is_stmt 1 view .LVU1299
4494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4830              		.loc 1 4494 7 is_stmt 0 view .LVU1300
 4831 002c 002D     		cmp	r5, #0
 4832 002e 19D1     		bne	.L380
 4833              	.L376:
4512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4834              		.loc 1 4512 29 is_stmt 1 view .LVU1301
4515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4835              		.loc 1 4515 3 view .LVU1302
 4836 0030 FFF7FEFF 		bl	vPortExitCritical
 4837              	.LVL372:
4517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4838              		.loc 1 4517 3 view .LVU1303
 4839 0034 FFF7FEFF 		bl	vPortEnterCritical
 4840              	.LVL373:
4519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4841              		.loc 1 4519 27 view .LVU1304
4521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4842              		.loc 1 4521 4 view .LVU1305
4521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4843              		.loc 1 4521 6 is_stmt 0 view .LVU1306
 4844 0038 002C     		cmp	r4, #0
 4845 003a 03D0     		beq	.L377
4525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4846              		.loc 1 4525 5 is_stmt 1 view .LVU1307
4525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4847              		.loc 1 4525 41 is_stmt 0 view .LVU1308
 4848 003c 104B     		ldr	r3, .L382
 4849 003e 1B68     		ldr	r3, [r3]
 4850 0040 DB6C     		ldr	r3, [r3, #76]
4525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4851              		.loc 1 4525 27 view .LVU1309
 4852 0042 2360     		str	r3, [r4]
 4853              	.L377:
4532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4854              		.loc 1 4532 4 is_stmt 1 view .LVU1310
4532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4855              		.loc 1 4532 20 is_stmt 0 view .LVU1311
 4856 0044 0E4B     		ldr	r3, .L382
 4857 0046 1A68     		ldr	r2, [r3]
 4858 0048 5023     		movs	r3, #80
 4859 004a D35C     		ldrb	r3, [r2, r3]
4532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4860              		.loc 1 4532 6 view .LVU1312
ARM GAS  /tmp/cc8PdMPr.s 			page 195


 4861 004c 022B     		cmp	r3, #2
 4862 004e 0FD0     		beq	.L381
4535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4863              		.loc 1 4535 13 view .LVU1313
 4864 0050 0024     		movs	r4, #0
 4865              	.LVL374:
 4866              	.L378:
4545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4867              		.loc 1 4545 4 is_stmt 1 view .LVU1314
4545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4868              		.loc 1 4545 16 is_stmt 0 view .LVU1315
 4869 0052 0B4B     		ldr	r3, .L382
 4870 0054 1A68     		ldr	r2, [r3]
4545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4871              		.loc 1 4545 32 view .LVU1316
 4872 0056 5023     		movs	r3, #80
 4873 0058 0021     		movs	r1, #0
 4874 005a D154     		strb	r1, [r2, r3]
4547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4875              		.loc 1 4547 3 is_stmt 1 view .LVU1317
 4876 005c FFF7FEFF 		bl	vPortExitCritical
 4877              	.LVL375:
4549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4878              		.loc 1 4549 3 view .LVU1318
4550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4879              		.loc 1 4550 2 is_stmt 0 view .LVU1319
 4880 0060 2000     		movs	r0, r4
 4881              		@ sp needed
 4882              	.LVL376:
 4883              	.LVL377:
 4884              	.LVL378:
 4885              	.LVL379:
4550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4886              		.loc 1 4550 2 view .LVU1320
 4887 0062 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4888              	.LVL380:
 4889              	.L380:
4496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
 4890              		.loc 1 4496 6 is_stmt 1 view .LVU1321
 4891 0064 2800     		movs	r0, r5
 4892 0066 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 4893              	.LVL381:
4497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4894              		.loc 1 4497 35 view .LVU1322
4503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4895              		.loc 1 4503 6 view .LVU1323
 4896 006a FFF7FEFF 		bl	vPortYield
 4897              	.LVL382:
 4898 006e DFE7     		b	.L376
 4899              	.L381:
4541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
 4900              		.loc 1 4541 5 view .LVU1324
4541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
 4901              		.loc 1 4541 35 is_stmt 0 view .LVU1325
 4902 0070 034B     		ldr	r3, .L382
 4903 0072 1A68     		ldr	r2, [r3]
 4904 0074 D36C     		ldr	r3, [r2, #76]
ARM GAS  /tmp/cc8PdMPr.s 			page 196


 4905 0076 B343     		bics	r3, r6
 4906 0078 D364     		str	r3, [r2, #76]
4542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4907              		.loc 1 4542 5 is_stmt 1 view .LVU1326
 4908              	.LVL383:
4542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4909              		.loc 1 4542 13 is_stmt 0 view .LVU1327
 4910 007a 0124     		movs	r4, #1
 4911              	.LVL384:
4542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4912              		.loc 1 4542 13 view .LVU1328
 4913 007c E9E7     		b	.L378
 4914              	.L383:
 4915 007e C046     		.align	2
 4916              	.L382:
 4917 0080 00000000 		.word	.LANCHOR9
 4918              		.cfi_endproc
 4919              	.LFE44:
 4921              		.section	.text.xTaskGenericNotify,"ax",%progbits
 4922              		.align	1
 4923              		.global	xTaskGenericNotify
 4924              		.syntax unified
 4925              		.code	16
 4926              		.thumb_func
 4927              		.fpu softvfp
 4929              	xTaskGenericNotify:
 4930              	.LVL385:
 4931              	.LFB45:
4558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 4932              		.loc 1 4558 2 is_stmt 1 view -0
 4933              		.cfi_startproc
 4934              		@ args = 0, pretend = 0, frame = 0
 4935              		@ frame_needed = 0, uses_anonymous_args = 0
4558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 4936              		.loc 1 4558 2 is_stmt 0 view .LVU1330
 4937 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4938              	.LCFI37:
 4939              		.cfi_def_cfa_offset 24
 4940              		.cfi_offset 3, -24
 4941              		.cfi_offset 4, -20
 4942              		.cfi_offset 5, -16
 4943              		.cfi_offset 6, -12
 4944              		.cfi_offset 7, -8
 4945              		.cfi_offset 14, -4
 4946 0002 0400     		movs	r4, r0
 4947 0004 0E00     		movs	r6, r1
 4948 0006 1500     		movs	r5, r2
 4949 0008 1F00     		movs	r7, r3
4559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
 4950              		.loc 1 4559 2 is_stmt 1 view .LVU1331
4560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 4951              		.loc 1 4560 2 view .LVU1332
 4952              	.LVL386:
4561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4953              		.loc 1 4561 2 view .LVU1333
4563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 4954              		.loc 1 4563 3 view .LVU1334
ARM GAS  /tmp/cc8PdMPr.s 			page 197


 4955 000a 0028     		cmp	r0, #0
 4956 000c 16D0     		beq	.L399
4563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 4957              		.loc 1 4563 32 discriminator 2 view .LVU1335
4564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4958              		.loc 1 4564 3 discriminator 2 view .LVU1336
 4959              	.LVL387:
4566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4960              		.loc 1 4566 3 discriminator 2 view .LVU1337
 4961 000e FFF7FEFF 		bl	vPortEnterCritical
 4962              	.LVL388:
4568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4963              		.loc 1 4568 4 discriminator 2 view .LVU1338
4568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4964              		.loc 1 4568 6 is_stmt 0 discriminator 2 view .LVU1339
 4965 0012 002F     		cmp	r7, #0
 4966 0014 01D0     		beq	.L387
4570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4967              		.loc 1 4570 5 is_stmt 1 view .LVU1340
4570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4968              		.loc 1 4570 42 is_stmt 0 view .LVU1341
 4969 0016 E36C     		ldr	r3, [r4, #76]
4570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4970              		.loc 1 4570 35 view .LVU1342
 4971 0018 3B60     		str	r3, [r7]
 4972              	.L387:
4573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4973              		.loc 1 4573 4 is_stmt 1 view .LVU1343
4573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4974              		.loc 1 4573 26 is_stmt 0 view .LVU1344
 4975 001a 5022     		movs	r2, #80
 4976 001c A35C     		ldrb	r3, [r4, r2]
 4977 001e DBB2     		uxtb	r3, r3
 4978              	.LVL389:
4575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4979              		.loc 1 4575 4 is_stmt 1 view .LVU1345
4575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4980              		.loc 1 4575 25 is_stmt 0 view .LVU1346
 4981 0020 0221     		movs	r1, #2
 4982 0022 A154     		strb	r1, [r4, r2]
4577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4983              		.loc 1 4577 4 is_stmt 1 view .LVU1347
 4984 0024 022D     		cmp	r5, #2
 4985 0026 1BD0     		beq	.L388
 4986 0028 0AD9     		bls	.L400
 4987 002a 032D     		cmp	r5, #3
 4988 002c 1DD0     		beq	.L392
 4989 002e 042D     		cmp	r5, #4
 4990 0030 14D1     		bne	.L401
4592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4991              		.loc 1 4592 6 view .LVU1348
4592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4992              		.loc 1 4592 8 is_stmt 0 view .LVU1349
 4993 0032 022B     		cmp	r3, #2
 4994 0034 1CD0     		beq	.L398
4594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4995              		.loc 1 4594 7 is_stmt 1 view .LVU1350
ARM GAS  /tmp/cc8PdMPr.s 			page 198


4594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4996              		.loc 1 4594 30 is_stmt 0 view .LVU1351
 4997 0036 E664     		str	r6, [r4, #76]
4560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 4998              		.loc 1 4560 13 view .LVU1352
 4999 0038 0125     		movs	r5, #1
 5000 003a 09E0     		b	.L391
 5001              	.LVL390:
 5002              	.L399:
4563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 5003              		.loc 1 4563 3 is_stmt 1 discriminator 1 view .LVU1353
 5004              		.syntax divided
 5005              	@ 4563 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5006 003c 72B6     		 cpsid i 
 5007              	@ 0 "" 2
 5008              		.thumb
 5009              		.syntax unified
 5010              	.L386:
4563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 5011              		.loc 1 4563 3 discriminator 1 view .LVU1354
4563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 5012              		.loc 1 4563 3 discriminator 1 view .LVU1355
 5013 003e FEE7     		b	.L386
 5014              	.LVL391:
 5015              	.L400:
4577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5016              		.loc 1 4577 4 is_stmt 0 view .LVU1356
 5017 0040 012D     		cmp	r5, #1
 5018 0042 04D1     		bne	.L402
4580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5019              		.loc 1 4580 6 is_stmt 1 view .LVU1357
4580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5020              		.loc 1 4580 29 is_stmt 0 view .LVU1358
 5021 0044 E26C     		ldr	r2, [r4, #76]
 5022 0046 1643     		orrs	r6, r2
 5023              	.LVL392:
4580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5024              		.loc 1 4580 29 view .LVU1359
 5025 0048 E664     		str	r6, [r4, #76]
4581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5026              		.loc 1 4581 6 is_stmt 1 view .LVU1360
4560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5027              		.loc 1 4560 13 is_stmt 0 view .LVU1361
 5028 004a 0125     		movs	r5, #1
4581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5029              		.loc 1 4581 6 view .LVU1362
 5030 004c 00E0     		b	.L391
 5031              	.LVL393:
 5032              	.L402:
4560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5033              		.loc 1 4560 13 view .LVU1363
 5034 004e 0125     		movs	r5, #1
 5035              	.LVL394:
 5036              	.L391:
4609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5037              		.loc 1 4609 22 is_stmt 1 view .LVU1364
4613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/cc8PdMPr.s 			page 199


 5038              		.loc 1 4613 4 view .LVU1365
4613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5039              		.loc 1 4613 6 is_stmt 0 view .LVU1366
 5040 0050 012B     		cmp	r3, #1
 5041 0052 0FD0     		beq	.L403
 5042              	.LVL395:
 5043              	.L394:
4650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5044              		.loc 1 4650 29 is_stmt 1 view .LVU1367
4653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5045              		.loc 1 4653 3 view .LVU1368
 5046 0054 FFF7FEFF 		bl	vPortExitCritical
 5047              	.LVL396:
4655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5048              		.loc 1 4655 3 view .LVU1369
4656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5049              		.loc 1 4656 2 is_stmt 0 view .LVU1370
 5050 0058 2800     		movs	r0, r5
 5051              		@ sp needed
 5052              	.LVL397:
 5053              	.LVL398:
 5054              	.LVL399:
4656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5055              		.loc 1 4656 2 view .LVU1371
 5056 005a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5057              	.LVL400:
 5058              	.L401:
4560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5059              		.loc 1 4560 13 view .LVU1372
 5060 005c 0125     		movs	r5, #1
 5061 005e F7E7     		b	.L391
 5062              	.L388:
4584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5063              		.loc 1 4584 6 is_stmt 1 view .LVU1373
4584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5064              		.loc 1 4584 13 is_stmt 0 view .LVU1374
 5065 0060 E26C     		ldr	r2, [r4, #76]
4584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5066              		.loc 1 4584 32 view .LVU1375
 5067 0062 0132     		adds	r2, r2, #1
 5068 0064 E264     		str	r2, [r4, #76]
4585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5069              		.loc 1 4585 6 is_stmt 1 view .LVU1376
4560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5070              		.loc 1 4560 13 is_stmt 0 view .LVU1377
 5071 0066 0125     		movs	r5, #1
4585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5072              		.loc 1 4585 6 view .LVU1378
 5073 0068 F2E7     		b	.L391
 5074              	.L392:
4588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5075              		.loc 1 4588 6 is_stmt 1 view .LVU1379
4588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5076              		.loc 1 4588 29 is_stmt 0 view .LVU1380
 5077 006a E664     		str	r6, [r4, #76]
4589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5078              		.loc 1 4589 6 is_stmt 1 view .LVU1381
ARM GAS  /tmp/cc8PdMPr.s 			page 200


4560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5079              		.loc 1 4560 13 is_stmt 0 view .LVU1382
 5080 006c 0125     		movs	r5, #1
4589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5081              		.loc 1 4589 6 view .LVU1383
 5082 006e EFE7     		b	.L391
 5083              	.L398:
4599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5084              		.loc 1 4599 15 view .LVU1384
 5085 0070 0025     		movs	r5, #0
 5086 0072 EDE7     		b	.L391
 5087              	.LVL401:
 5088              	.L403:
4615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
 5089              		.loc 1 4615 5 is_stmt 1 view .LVU1385
4615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
 5090              		.loc 1 4615 14 is_stmt 0 view .LVU1386
 5091 0074 261D     		adds	r6, r4, #4
 5092 0076 3000     		movs	r0, r6
 5093 0078 FFF7FEFF 		bl	uxListRemove
 5094              	.LVL402:
4616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5095              		.loc 1 4616 5 is_stmt 1 view .LVU1387
4616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5096              		.loc 1 4616 5 view .LVU1388
 5097 007c E26A     		ldr	r2, [r4, #44]
 5098 007e 0E4B     		ldr	r3, .L404
 5099 0080 1B68     		ldr	r3, [r3]
 5100 0082 9A42     		cmp	r2, r3
 5101 0084 01D9     		bls	.L395
4616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5102              		.loc 1 4616 5 discriminator 1 view .LVU1389
 5103 0086 0C4B     		ldr	r3, .L404
 5104 0088 1A60     		str	r2, [r3]
 5105              	.L395:
4616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5106              		.loc 1 4616 5 discriminator 3 view .LVU1390
4616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5107              		.loc 1 4616 5 discriminator 3 view .LVU1391
 5108 008a 9300     		lsls	r3, r2, #2
 5109 008c 9B18     		adds	r3, r3, r2
 5110 008e 9800     		lsls	r0, r3, #2
 5111 0090 0A4B     		ldr	r3, .L404+4
 5112 0092 C018     		adds	r0, r0, r3
 5113 0094 3100     		movs	r1, r6
 5114 0096 FFF7FEFF 		bl	vListInsertEnd
 5115              	.LVL403:
4616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5116              		.loc 1 4616 35 discriminator 3 view .LVU1392
4619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5117              		.loc 1 4619 5 discriminator 3 view .LVU1393
 5118 009a A36A     		ldr	r3, [r4, #40]
 5119 009c 002B     		cmp	r3, #0
 5120 009e 01D0     		beq	.L396
4619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5121              		.loc 1 4619 5 discriminator 1 view .LVU1394
 5122              		.syntax divided
ARM GAS  /tmp/cc8PdMPr.s 			page 201


 5123              	@ 4619 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5124 00a0 72B6     		 cpsid i 
 5125              	@ 0 "" 2
 5126              		.thumb
 5127              		.syntax unified
 5128              	.L397:
4619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5129              		.loc 1 4619 5 discriminator 2 view .LVU1395
4619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5130              		.loc 1 4619 5 discriminator 2 view .LVU1396
 5131 00a2 FEE7     		b	.L397
 5132              	.L396:
4619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5133              		.loc 1 4619 82 discriminator 2 view .LVU1397
4637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5134              		.loc 1 4637 5 discriminator 2 view .LVU1398
4637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5135              		.loc 1 4637 14 is_stmt 0 discriminator 2 view .LVU1399
 5136 00a4 E26A     		ldr	r2, [r4, #44]
4637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5137              		.loc 1 4637 41 discriminator 2 view .LVU1400
 5138 00a6 064B     		ldr	r3, .L404+8
 5139 00a8 1B68     		ldr	r3, [r3]
 5140 00aa DB6A     		ldr	r3, [r3, #44]
4637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5141              		.loc 1 4637 7 discriminator 2 view .LVU1401
 5142 00ac 9A42     		cmp	r2, r3
 5143 00ae D1D9     		bls	.L394
4641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5144              		.loc 1 4641 6 is_stmt 1 view .LVU1402
 5145 00b0 FFF7FEFF 		bl	vPortYield
 5146              	.LVL404:
 5147 00b4 CEE7     		b	.L394
 5148              	.L405:
 5149 00b6 C046     		.align	2
 5150              	.L404:
 5151 00b8 00000000 		.word	.LANCHOR12
 5152 00bc 00000000 		.word	pxReadyTasksLists
 5153 00c0 00000000 		.word	.LANCHOR9
 5154              		.cfi_endproc
 5155              	.LFE45:
 5157              		.section	.text.xTaskGenericNotifyFromISR,"ax",%progbits
 5158              		.align	1
 5159              		.global	xTaskGenericNotifyFromISR
 5160              		.syntax unified
 5161              		.code	16
 5162              		.thumb_func
 5163              		.fpu softvfp
 5165              	xTaskGenericNotifyFromISR:
 5166              	.LVL405:
 5167              	.LFB46:
4664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5168              		.loc 1 4664 2 view -0
 5169              		.cfi_startproc
 5170              		@ args = 4, pretend = 0, frame = 8
 5171              		@ frame_needed = 0, uses_anonymous_args = 0
4664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
ARM GAS  /tmp/cc8PdMPr.s 			page 202


 5172              		.loc 1 4664 2 is_stmt 0 view .LVU1404
 5173 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 5174              	.LCFI38:
 5175              		.cfi_def_cfa_offset 20
 5176              		.cfi_offset 4, -20
 5177              		.cfi_offset 5, -16
 5178              		.cfi_offset 6, -12
 5179              		.cfi_offset 7, -8
 5180              		.cfi_offset 14, -4
 5181 0002 83B0     		sub	sp, sp, #12
 5182              	.LCFI39:
 5183              		.cfi_def_cfa_offset 32
 5184 0004 0400     		movs	r4, r0
 5185 0006 0F00     		movs	r7, r1
 5186 0008 1600     		movs	r6, r2
 5187 000a 1D00     		movs	r5, r3
4665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5188              		.loc 1 4665 2 is_stmt 1 view .LVU1405
4666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
 5189              		.loc 1 4666 2 view .LVU1406
4667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 5190              		.loc 1 4667 2 view .LVU1407
 5191              	.LVL406:
4668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5192              		.loc 1 4668 2 view .LVU1408
4670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5193              		.loc 1 4670 3 view .LVU1409
 5194 000c 0028     		cmp	r0, #0
 5195 000e 17D0     		beq	.L424
4670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5196              		.loc 1 4670 32 discriminator 2 view .LVU1410
4688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5197              		.loc 1 4688 45 discriminator 2 view .LVU1411
4690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5198              		.loc 1 4690 3 discriminator 2 view .LVU1412
 5199              	.LVL407:
4692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5200              		.loc 1 4692 3 discriminator 2 view .LVU1413
4692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5201              		.loc 1 4692 28 is_stmt 0 discriminator 2 view .LVU1414
 5202 0010 FFF7FEFF 		bl	ulSetInterruptMaskFromISR
 5203              	.LVL408:
4692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5204              		.loc 1 4692 28 discriminator 2 view .LVU1415
 5205 0014 0190     		str	r0, [sp, #4]
 5206              	.LVL409:
4694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5207              		.loc 1 4694 4 is_stmt 1 discriminator 2 view .LVU1416
4694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5208              		.loc 1 4694 6 is_stmt 0 discriminator 2 view .LVU1417
 5209 0016 002D     		cmp	r5, #0
 5210 0018 01D0     		beq	.L409
4696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5211              		.loc 1 4696 5 is_stmt 1 view .LVU1418
4696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5212              		.loc 1 4696 42 is_stmt 0 view .LVU1419
 5213 001a E36C     		ldr	r3, [r4, #76]
ARM GAS  /tmp/cc8PdMPr.s 			page 203


4696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5214              		.loc 1 4696 35 view .LVU1420
 5215 001c 2B60     		str	r3, [r5]
 5216              	.L409:
4699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 5217              		.loc 1 4699 4 is_stmt 1 view .LVU1421
4699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 5218              		.loc 1 4699 26 is_stmt 0 view .LVU1422
 5219 001e 5022     		movs	r2, #80
 5220 0020 A35C     		ldrb	r3, [r4, r2]
 5221 0022 DBB2     		uxtb	r3, r3
 5222              	.LVL410:
4700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5223              		.loc 1 4700 4 is_stmt 1 view .LVU1423
4700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5224              		.loc 1 4700 25 is_stmt 0 view .LVU1424
 5225 0024 0221     		movs	r1, #2
 5226 0026 A154     		strb	r1, [r4, r2]
4702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5227              		.loc 1 4702 4 is_stmt 1 view .LVU1425
 5228 0028 022E     		cmp	r6, #2
 5229 002a 1CD0     		beq	.L410
 5230 002c 0AD9     		bls	.L425
 5231 002e 032E     		cmp	r6, #3
 5232 0030 1ED0     		beq	.L414
 5233 0032 042E     		cmp	r6, #4
 5234 0034 15D1     		bne	.L426
4717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5235              		.loc 1 4717 6 view .LVU1426
4717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5236              		.loc 1 4717 8 is_stmt 0 view .LVU1427
 5237 0036 022B     		cmp	r3, #2
 5238 0038 1DD0     		beq	.L423
4719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5239              		.loc 1 4719 7 is_stmt 1 view .LVU1428
4719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5240              		.loc 1 4719 30 is_stmt 0 view .LVU1429
 5241 003a E764     		str	r7, [r4, #76]
4667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 5242              		.loc 1 4667 13 view .LVU1430
 5243 003c 0127     		movs	r7, #1
 5244              	.LVL411:
4667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 5245              		.loc 1 4667 13 view .LVU1431
 5246 003e 09E0     		b	.L413
 5247              	.LVL412:
 5248              	.L424:
4670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5249              		.loc 1 4670 3 is_stmt 1 discriminator 1 view .LVU1432
 5250              		.syntax divided
 5251              	@ 4670 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5252 0040 72B6     		 cpsid i 
 5253              	@ 0 "" 2
 5254              		.thumb
 5255              		.syntax unified
 5256              	.L408:
4670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc8PdMPr.s 			page 204


 5257              		.loc 1 4670 3 discriminator 1 view .LVU1433
4670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5258              		.loc 1 4670 3 discriminator 1 view .LVU1434
 5259 0042 FEE7     		b	.L408
 5260              	.LVL413:
 5261              	.L425:
4702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5262              		.loc 1 4702 4 is_stmt 0 view .LVU1435
 5263 0044 012E     		cmp	r6, #1
 5264 0046 04D1     		bne	.L427
4705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5265              		.loc 1 4705 6 is_stmt 1 view .LVU1436
4705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5266              		.loc 1 4705 29 is_stmt 0 view .LVU1437
 5267 0048 E26C     		ldr	r2, [r4, #76]
 5268 004a 3A43     		orrs	r2, r7
 5269 004c E264     		str	r2, [r4, #76]
4706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5270              		.loc 1 4706 6 is_stmt 1 view .LVU1438
4667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 5271              		.loc 1 4667 13 is_stmt 0 view .LVU1439
 5272 004e 0127     		movs	r7, #1
 5273              	.LVL414:
4706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5274              		.loc 1 4706 6 view .LVU1440
 5275 0050 00E0     		b	.L413
 5276              	.LVL415:
 5277              	.L427:
4667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 5278              		.loc 1 4667 13 view .LVU1441
 5279 0052 0127     		movs	r7, #1
 5280              	.LVL416:
 5281              	.L413:
4734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5282              		.loc 1 4734 31 is_stmt 1 view .LVU1442
4738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5283              		.loc 1 4738 4 view .LVU1443
4738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5284              		.loc 1 4738 6 is_stmt 0 view .LVU1444
 5285 0054 012B     		cmp	r3, #1
 5286 0056 33D1     		bne	.L416
4741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5287              		.loc 1 4741 5 is_stmt 1 view .LVU1445
 5288 0058 A36A     		ldr	r3, [r4, #40]
 5289              	.LVL417:
4741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5290              		.loc 1 4741 5 is_stmt 0 view .LVU1446
 5291 005a 002B     		cmp	r3, #0
 5292 005c 0DD0     		beq	.L417
4741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5293              		.loc 1 4741 5 is_stmt 1 discriminator 1 view .LVU1447
 5294              		.syntax divided
 5295              	@ 4741 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5296 005e 72B6     		 cpsid i 
 5297              	@ 0 "" 2
 5298              		.thumb
 5299              		.syntax unified
ARM GAS  /tmp/cc8PdMPr.s 			page 205


 5300              	.L418:
4741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5301              		.loc 1 4741 5 discriminator 2 view .LVU1448
4741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5302              		.loc 1 4741 5 discriminator 2 view .LVU1449
 5303 0060 FEE7     		b	.L418
 5304              	.LVL418:
 5305              	.L426:
4667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 5306              		.loc 1 4667 13 is_stmt 0 view .LVU1450
 5307 0062 0127     		movs	r7, #1
 5308              	.LVL419:
4667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 5309              		.loc 1 4667 13 view .LVU1451
 5310 0064 F6E7     		b	.L413
 5311              	.LVL420:
 5312              	.L410:
4709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5313              		.loc 1 4709 6 is_stmt 1 view .LVU1452
4709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5314              		.loc 1 4709 13 is_stmt 0 view .LVU1453
 5315 0066 E26C     		ldr	r2, [r4, #76]
4709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5316              		.loc 1 4709 32 view .LVU1454
 5317 0068 0132     		adds	r2, r2, #1
 5318 006a E264     		str	r2, [r4, #76]
4710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5319              		.loc 1 4710 6 is_stmt 1 view .LVU1455
4667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 5320              		.loc 1 4667 13 is_stmt 0 view .LVU1456
 5321 006c 0127     		movs	r7, #1
 5322              	.LVL421:
4710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5323              		.loc 1 4710 6 view .LVU1457
 5324 006e F1E7     		b	.L413
 5325              	.LVL422:
 5326              	.L414:
4713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5327              		.loc 1 4713 6 is_stmt 1 view .LVU1458
4713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5328              		.loc 1 4713 29 is_stmt 0 view .LVU1459
 5329 0070 E764     		str	r7, [r4, #76]
4714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5330              		.loc 1 4714 6 is_stmt 1 view .LVU1460
4667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 5331              		.loc 1 4667 13 is_stmt 0 view .LVU1461
 5332 0072 0127     		movs	r7, #1
 5333              	.LVL423:
4714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5334              		.loc 1 4714 6 view .LVU1462
 5335 0074 EEE7     		b	.L413
 5336              	.LVL424:
 5337              	.L423:
4724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5338              		.loc 1 4724 15 view .LVU1463
 5339 0076 0027     		movs	r7, #0
 5340              	.LVL425:
ARM GAS  /tmp/cc8PdMPr.s 			page 206


4724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5341              		.loc 1 4724 15 view .LVU1464
 5342 0078 ECE7     		b	.L413
 5343              	.LVL426:
 5344              	.L417:
4741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5345              		.loc 1 4741 82 is_stmt 1 discriminator 2 view .LVU1465
4743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5346              		.loc 1 4743 5 discriminator 2 view .LVU1466
4743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5347              		.loc 1 4743 30 is_stmt 0 discriminator 2 view .LVU1467
 5348 007a 194B     		ldr	r3, .L428
 5349 007c 1B68     		ldr	r3, [r3]
4743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5350              		.loc 1 4743 7 discriminator 2 view .LVU1468
 5351 007e 002B     		cmp	r3, #0
 5352 0080 24D1     		bne	.L419
4745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 5353              		.loc 1 4745 6 is_stmt 1 view .LVU1469
4745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 5354              		.loc 1 4745 15 is_stmt 0 view .LVU1470
 5355 0082 261D     		adds	r6, r4, #4
 5356 0084 3000     		movs	r0, r6
 5357              	.LVL427:
4745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 5358              		.loc 1 4745 15 view .LVU1471
 5359 0086 FFF7FEFF 		bl	uxListRemove
 5360              	.LVL428:
4746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5361              		.loc 1 4746 6 is_stmt 1 view .LVU1472
4746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5362              		.loc 1 4746 6 view .LVU1473
 5363 008a E26A     		ldr	r2, [r4, #44]
 5364 008c 154B     		ldr	r3, .L428+4
 5365 008e 1B68     		ldr	r3, [r3]
 5366 0090 9A42     		cmp	r2, r3
 5367 0092 01D9     		bls	.L420
4746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5368              		.loc 1 4746 6 discriminator 1 view .LVU1474
 5369 0094 134B     		ldr	r3, .L428+4
 5370 0096 1A60     		str	r2, [r3]
 5371              	.L420:
4746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5372              		.loc 1 4746 6 discriminator 3 view .LVU1475
4746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5373              		.loc 1 4746 6 discriminator 3 view .LVU1476
 5374 0098 9300     		lsls	r3, r2, #2
 5375 009a 9B18     		adds	r3, r3, r2
 5376 009c 9800     		lsls	r0, r3, #2
 5377 009e 124B     		ldr	r3, .L428+8
 5378 00a0 C018     		adds	r0, r0, r3
 5379 00a2 3100     		movs	r1, r6
 5380 00a4 FFF7FEFF 		bl	vListInsertEnd
 5381              	.LVL429:
4746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5382              		.loc 1 4746 36 discriminator 3 view .LVU1477
 5383              	.L421:
ARM GAS  /tmp/cc8PdMPr.s 			page 207


4755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5384              		.loc 1 4755 5 view .LVU1478
4755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5385              		.loc 1 4755 14 is_stmt 0 view .LVU1479
 5386 00a8 E26A     		ldr	r2, [r4, #44]
4755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5387              		.loc 1 4755 41 view .LVU1480
 5388 00aa 104B     		ldr	r3, .L428+12
 5389 00ac 1B68     		ldr	r3, [r3]
 5390 00ae DB6A     		ldr	r3, [r3, #44]
4755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5391              		.loc 1 4755 7 view .LVU1481
 5392 00b0 9A42     		cmp	r2, r3
 5393 00b2 05D9     		bls	.L416
4759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5394              		.loc 1 4759 6 is_stmt 1 view .LVU1482
4759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5395              		.loc 1 4759 8 is_stmt 0 view .LVU1483
 5396 00b4 089B     		ldr	r3, [sp, #32]
 5397 00b6 002B     		cmp	r3, #0
 5398 00b8 0ED0     		beq	.L422
4761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5399              		.loc 1 4761 7 is_stmt 1 view .LVU1484
4761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5400              		.loc 1 4761 34 is_stmt 0 view .LVU1485
 5401 00ba 0123     		movs	r3, #1
 5402 00bc 089A     		ldr	r2, [sp, #32]
 5403 00be 1360     		str	r3, [r2]
 5404              	.L416:
4773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5405              		.loc 1 4773 30 is_stmt 1 view .LVU1486
4777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5406              		.loc 1 4777 3 view .LVU1487
 5407 00c0 0198     		ldr	r0, [sp, #4]
 5408 00c2 FFF7FEFF 		bl	vClearInterruptMaskFromISR
 5409              	.LVL430:
4779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5410              		.loc 1 4779 3 view .LVU1488
4780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5411              		.loc 1 4780 2 is_stmt 0 view .LVU1489
 5412 00c6 3800     		movs	r0, r7
 5413 00c8 03B0     		add	sp, sp, #12
 5414              		@ sp needed
 5415              	.LVL431:
 5416              	.LVL432:
 5417              	.LVL433:
4780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5418              		.loc 1 4780 2 view .LVU1490
 5419 00ca F0BD     		pop	{r4, r5, r6, r7, pc}
 5420              	.LVL434:
 5421              	.L419:
4752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5422              		.loc 1 4752 6 is_stmt 1 view .LVU1491
 5423 00cc 2100     		movs	r1, r4
 5424 00ce 1831     		adds	r1, r1, #24
 5425 00d0 0748     		ldr	r0, .L428+16
 5426              	.LVL435:
ARM GAS  /tmp/cc8PdMPr.s 			page 208


4752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5427              		.loc 1 4752 6 is_stmt 0 view .LVU1492
 5428 00d2 FFF7FEFF 		bl	vListInsertEnd
 5429              	.LVL436:
 5430 00d6 E7E7     		b	.L421
 5431              	.L422:
4768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5432              		.loc 1 4768 7 is_stmt 1 view .LVU1493
4768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5433              		.loc 1 4768 21 is_stmt 0 view .LVU1494
 5434 00d8 064B     		ldr	r3, .L428+20
 5435 00da 0122     		movs	r2, #1
 5436 00dc 1A60     		str	r2, [r3]
 5437 00de EFE7     		b	.L416
 5438              	.L429:
 5439              		.align	2
 5440              	.L428:
 5441 00e0 00000000 		.word	.LANCHOR15
 5442 00e4 00000000 		.word	.LANCHOR12
 5443 00e8 00000000 		.word	pxReadyTasksLists
 5444 00ec 00000000 		.word	.LANCHOR9
 5445 00f0 00000000 		.word	.LANCHOR1
 5446 00f4 00000000 		.word	.LANCHOR18
 5447              		.cfi_endproc
 5448              	.LFE46:
 5450              		.section	.text.vTaskNotifyGiveFromISR,"ax",%progbits
 5451              		.align	1
 5452              		.global	vTaskNotifyGiveFromISR
 5453              		.syntax unified
 5454              		.code	16
 5455              		.thumb_func
 5456              		.fpu softvfp
 5458              	vTaskNotifyGiveFromISR:
 5459              	.LVL437:
 5460              	.LFB47:
4788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5461              		.loc 1 4788 2 is_stmt 1 view -0
 5462              		.cfi_startproc
 5463              		@ args = 0, pretend = 0, frame = 0
 5464              		@ frame_needed = 0, uses_anonymous_args = 0
4788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5465              		.loc 1 4788 2 is_stmt 0 view .LVU1496
 5466 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5467              	.LCFI40:
 5468              		.cfi_def_cfa_offset 24
 5469              		.cfi_offset 3, -24
 5470              		.cfi_offset 4, -20
 5471              		.cfi_offset 5, -16
 5472              		.cfi_offset 6, -12
 5473              		.cfi_offset 7, -8
 5474              		.cfi_offset 14, -4
 5475 0002 0400     		movs	r4, r0
 5476 0004 0F00     		movs	r7, r1
4789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5477              		.loc 1 4789 2 is_stmt 1 view .LVU1497
4790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 5478              		.loc 1 4790 2 view .LVU1498
ARM GAS  /tmp/cc8PdMPr.s 			page 209


4791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5479              		.loc 1 4791 2 view .LVU1499
4793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5480              		.loc 1 4793 3 view .LVU1500
 5481 0006 0028     		cmp	r0, #0
 5482 0008 10D0     		beq	.L440
4793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5483              		.loc 1 4793 32 discriminator 2 view .LVU1501
4811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5484              		.loc 1 4811 45 discriminator 2 view .LVU1502
4813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5485              		.loc 1 4813 3 discriminator 2 view .LVU1503
 5486              	.LVL438:
4815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5487              		.loc 1 4815 3 discriminator 2 view .LVU1504
4815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5488              		.loc 1 4815 28 is_stmt 0 discriminator 2 view .LVU1505
 5489 000a FFF7FEFF 		bl	ulSetInterruptMaskFromISR
 5490              	.LVL439:
4815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5491              		.loc 1 4815 28 discriminator 2 view .LVU1506
 5492 000e 0600     		movs	r6, r0
 5493              	.LVL440:
4817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 5494              		.loc 1 4817 4 is_stmt 1 discriminator 2 view .LVU1507
4817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 5495              		.loc 1 4817 26 is_stmt 0 discriminator 2 view .LVU1508
 5496 0010 5023     		movs	r3, #80
 5497 0012 E25C     		ldrb	r2, [r4, r3]
 5498              	.LVL441:
4818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5499              		.loc 1 4818 4 is_stmt 1 discriminator 2 view .LVU1509
4818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5500              		.loc 1 4818 25 is_stmt 0 discriminator 2 view .LVU1510
 5501 0014 0221     		movs	r1, #2
 5502 0016 E154     		strb	r1, [r4, r3]
4822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5503              		.loc 1 4822 4 is_stmt 1 discriminator 2 view .LVU1511
4822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5504              		.loc 1 4822 11 is_stmt 0 discriminator 2 view .LVU1512
 5505 0018 E36C     		ldr	r3, [r4, #76]
4822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5506              		.loc 1 4822 30 discriminator 2 view .LVU1513
 5507 001a 0133     		adds	r3, r3, #1
 5508 001c E364     		str	r3, [r4, #76]
4824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5509              		.loc 1 4824 36 is_stmt 1 discriminator 2 view .LVU1514
4828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5510              		.loc 1 4828 4 discriminator 2 view .LVU1515
4828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5511              		.loc 1 4828 6 is_stmt 0 discriminator 2 view .LVU1516
 5512 001e 012A     		cmp	r2, #1
 5513 0020 27D1     		bne	.L433
4831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5514              		.loc 1 4831 5 is_stmt 1 view .LVU1517
 5515 0022 A36A     		ldr	r3, [r4, #40]
 5516 0024 002B     		cmp	r3, #0
ARM GAS  /tmp/cc8PdMPr.s 			page 210


 5517 0026 03D0     		beq	.L434
4831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5518              		.loc 1 4831 5 discriminator 1 view .LVU1518
 5519              		.syntax divided
 5520              	@ 4831 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5521 0028 72B6     		 cpsid i 
 5522              	@ 0 "" 2
 5523              		.thumb
 5524              		.syntax unified
 5525              	.L435:
4831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5526              		.loc 1 4831 5 discriminator 2 view .LVU1519
4831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5527              		.loc 1 4831 5 discriminator 2 view .LVU1520
 5528 002a FEE7     		b	.L435
 5529              	.LVL442:
 5530              	.L440:
4793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5531              		.loc 1 4793 3 discriminator 1 view .LVU1521
 5532              		.syntax divided
 5533              	@ 4793 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5534 002c 72B6     		 cpsid i 
 5535              	@ 0 "" 2
 5536              		.thumb
 5537              		.syntax unified
 5538              	.L432:
4793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5539              		.loc 1 4793 3 discriminator 1 view .LVU1522
4793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5540              		.loc 1 4793 3 discriminator 1 view .LVU1523
 5541 002e FEE7     		b	.L432
 5542              	.LVL443:
 5543              	.L434:
4831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5544              		.loc 1 4831 82 discriminator 2 view .LVU1524
4833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5545              		.loc 1 4833 5 discriminator 2 view .LVU1525
4833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5546              		.loc 1 4833 30 is_stmt 0 discriminator 2 view .LVU1526
 5547 0030 174B     		ldr	r3, .L441
 5548 0032 1B68     		ldr	r3, [r3]
4833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5549              		.loc 1 4833 7 discriminator 2 view .LVU1527
 5550 0034 002B     		cmp	r3, #0
 5551 0036 20D1     		bne	.L436
4835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 5552              		.loc 1 4835 6 is_stmt 1 view .LVU1528
4835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 5553              		.loc 1 4835 15 is_stmt 0 view .LVU1529
 5554 0038 251D     		adds	r5, r4, #4
 5555 003a 2800     		movs	r0, r5
 5556              	.LVL444:
4835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 5557              		.loc 1 4835 15 view .LVU1530
 5558 003c FFF7FEFF 		bl	uxListRemove
 5559              	.LVL445:
4836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  /tmp/cc8PdMPr.s 			page 211


 5560              		.loc 1 4836 6 is_stmt 1 view .LVU1531
4836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5561              		.loc 1 4836 6 view .LVU1532
 5562 0040 E26A     		ldr	r2, [r4, #44]
 5563 0042 144B     		ldr	r3, .L441+4
 5564 0044 1B68     		ldr	r3, [r3]
 5565 0046 9A42     		cmp	r2, r3
 5566 0048 01D9     		bls	.L437
4836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5567              		.loc 1 4836 6 discriminator 1 view .LVU1533
 5568 004a 124B     		ldr	r3, .L441+4
 5569 004c 1A60     		str	r2, [r3]
 5570              	.L437:
4836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5571              		.loc 1 4836 6 discriminator 3 view .LVU1534
4836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5572              		.loc 1 4836 6 discriminator 3 view .LVU1535
 5573 004e 9300     		lsls	r3, r2, #2
 5574 0050 9B18     		adds	r3, r3, r2
 5575 0052 9800     		lsls	r0, r3, #2
 5576 0054 104B     		ldr	r3, .L441+8
 5577 0056 C018     		adds	r0, r0, r3
 5578 0058 2900     		movs	r1, r5
 5579 005a FFF7FEFF 		bl	vListInsertEnd
 5580              	.LVL446:
4836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5581              		.loc 1 4836 36 discriminator 3 view .LVU1536
 5582              	.L438:
4845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5583              		.loc 1 4845 5 view .LVU1537
4845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5584              		.loc 1 4845 14 is_stmt 0 view .LVU1538
 5585 005e E26A     		ldr	r2, [r4, #44]
4845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5586              		.loc 1 4845 41 view .LVU1539
 5587 0060 0E4B     		ldr	r3, .L441+12
 5588 0062 1B68     		ldr	r3, [r3]
 5589 0064 DB6A     		ldr	r3, [r3, #44]
4845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5590              		.loc 1 4845 7 view .LVU1540
 5591 0066 9A42     		cmp	r2, r3
 5592 0068 03D9     		bls	.L433
4849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5593              		.loc 1 4849 6 is_stmt 1 view .LVU1541
4849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5594              		.loc 1 4849 8 is_stmt 0 view .LVU1542
 5595 006a 002F     		cmp	r7, #0
 5596 006c 0BD0     		beq	.L439
4851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5597              		.loc 1 4851 7 is_stmt 1 view .LVU1543
4851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5598              		.loc 1 4851 34 is_stmt 0 view .LVU1544
 5599 006e 0123     		movs	r3, #1
 5600 0070 3B60     		str	r3, [r7]
 5601              	.L433:
4863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5602              		.loc 1 4863 30 is_stmt 1 view .LVU1545
ARM GAS  /tmp/cc8PdMPr.s 			page 212


4867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5603              		.loc 1 4867 3 view .LVU1546
 5604 0072 3000     		movs	r0, r6
 5605 0074 FFF7FEFF 		bl	vClearInterruptMaskFromISR
 5606              	.LVL447:
4868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5607              		.loc 1 4868 2 is_stmt 0 view .LVU1547
 5608              		@ sp needed
 5609              	.LVL448:
 5610              	.LVL449:
 5611              	.LVL450:
4868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5612              		.loc 1 4868 2 view .LVU1548
 5613 0078 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5614              	.LVL451:
 5615              	.L436:
4842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5616              		.loc 1 4842 6 is_stmt 1 view .LVU1549
 5617 007a 2100     		movs	r1, r4
 5618 007c 1831     		adds	r1, r1, #24
 5619 007e 0848     		ldr	r0, .L441+16
 5620              	.LVL452:
4842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5621              		.loc 1 4842 6 is_stmt 0 view .LVU1550
 5622 0080 FFF7FEFF 		bl	vListInsertEnd
 5623              	.LVL453:
4842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5624              		.loc 1 4842 6 view .LVU1551
 5625 0084 EBE7     		b	.L438
 5626              	.L439:
4858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5627              		.loc 1 4858 7 is_stmt 1 view .LVU1552
4858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5628              		.loc 1 4858 21 is_stmt 0 view .LVU1553
 5629 0086 074B     		ldr	r3, .L441+20
 5630 0088 0122     		movs	r2, #1
 5631 008a 1A60     		str	r2, [r3]
 5632 008c F1E7     		b	.L433
 5633              	.L442:
 5634 008e C046     		.align	2
 5635              	.L441:
 5636 0090 00000000 		.word	.LANCHOR15
 5637 0094 00000000 		.word	.LANCHOR12
 5638 0098 00000000 		.word	pxReadyTasksLists
 5639 009c 00000000 		.word	.LANCHOR9
 5640 00a0 00000000 		.word	.LANCHOR1
 5641 00a4 00000000 		.word	.LANCHOR18
 5642              		.cfi_endproc
 5643              	.LFE47:
 5645              		.section	.text.xTaskNotifyStateClear,"ax",%progbits
 5646              		.align	1
 5647              		.global	xTaskNotifyStateClear
 5648              		.syntax unified
 5649              		.code	16
 5650              		.thumb_func
 5651              		.fpu softvfp
 5653              	xTaskNotifyStateClear:
ARM GAS  /tmp/cc8PdMPr.s 			page 213


 5654              	.LVL454:
 5655              	.LFB48:
4877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 5656              		.loc 1 4877 2 is_stmt 1 view -0
 5657              		.cfi_startproc
 5658              		@ args = 0, pretend = 0, frame = 0
 5659              		@ frame_needed = 0, uses_anonymous_args = 0
4877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 5660              		.loc 1 4877 2 is_stmt 0 view .LVU1555
 5661 0000 10B5     		push	{r4, lr}
 5662              	.LCFI41:
 5663              		.cfi_def_cfa_offset 8
 5664              		.cfi_offset 4, -8
 5665              		.cfi_offset 14, -4
 5666 0002 041E     		subs	r4, r0, #0
4878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 5667              		.loc 1 4878 2 is_stmt 1 view .LVU1556
4879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5668              		.loc 1 4879 2 view .LVU1557
4883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5669              		.loc 1 4883 3 view .LVU1558
4883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5670              		.loc 1 4883 11 is_stmt 0 view .LVU1559
 5671 0004 0AD0     		beq	.L447
 5672              	.LVL455:
 5673              	.L444:
4885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5674              		.loc 1 4885 3 is_stmt 1 discriminator 4 view .LVU1560
 5675 0006 FFF7FEFF 		bl	vPortEnterCritical
 5676              	.LVL456:
4887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5677              		.loc 1 4887 4 discriminator 4 view .LVU1561
4887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5678              		.loc 1 4887 13 is_stmt 0 discriminator 4 view .LVU1562
 5679 000a 5023     		movs	r3, #80
 5680 000c E35C     		ldrb	r3, [r4, r3]
4887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5681              		.loc 1 4887 6 discriminator 4 view .LVU1563
 5682 000e 022B     		cmp	r3, #2
 5683 0010 07D0     		beq	.L448
4894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5684              		.loc 1 4894 13 view .LVU1564
 5685 0012 0024     		movs	r4, #0
 5686              	.LVL457:
 5687              	.L445:
4897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5688              		.loc 1 4897 3 is_stmt 1 view .LVU1565
 5689 0014 FFF7FEFF 		bl	vPortExitCritical
 5690              	.LVL458:
4899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5691              		.loc 1 4899 3 view .LVU1566
4900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5692              		.loc 1 4900 2 is_stmt 0 view .LVU1567
 5693 0018 2000     		movs	r0, r4
 5694              		@ sp needed
 5695              	.LVL459:
4900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc8PdMPr.s 			page 214


 5696              		.loc 1 4900 2 view .LVU1568
 5697 001a 10BD     		pop	{r4, pc}
 5698              	.LVL460:
 5699              	.L447:
4883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5700              		.loc 1 4883 11 discriminator 1 view .LVU1569
 5701 001c 034B     		ldr	r3, .L449
 5702 001e 1C68     		ldr	r4, [r3]
 5703              	.LVL461:
4883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5704              		.loc 1 4883 11 discriminator 1 view .LVU1570
 5705 0020 F1E7     		b	.L444
 5706              	.LVL462:
 5707              	.L448:
4889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
 5708              		.loc 1 4889 5 is_stmt 1 view .LVU1571
4889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
 5709              		.loc 1 4889 26 is_stmt 0 view .LVU1572
 5710 0022 4E33     		adds	r3, r3, #78
 5711 0024 0022     		movs	r2, #0
 5712 0026 E254     		strb	r2, [r4, r3]
4890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5713              		.loc 1 4890 5 is_stmt 1 view .LVU1573
 5714              	.LVL463:
4890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5715              		.loc 1 4890 13 is_stmt 0 view .LVU1574
 5716 0028 0124     		movs	r4, #1
 5717              	.LVL464:
4890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5718              		.loc 1 4890 13 view .LVU1575
 5719 002a F3E7     		b	.L445
 5720              	.L450:
 5721              		.align	2
 5722              	.L449:
 5723 002c 00000000 		.word	.LANCHOR9
 5724              		.cfi_endproc
 5725              	.LFE48:
 5727              		.global	pxCurrentTCB
 5728              		.section	.bss.pxCurrentTCB,"aw",%nobits
 5729              		.align	2
 5730              		.set	.LANCHOR9,. + 0
 5733              	pxCurrentTCB:
 5734 0000 00000000 		.space	4
 5735              		.section	.bss.pxDelayedTaskList,"aw",%nobits
 5736              		.align	2
 5737              		.set	.LANCHOR2,. + 0
 5740              	pxDelayedTaskList:
 5741 0000 00000000 		.space	4
 5742              		.section	.bss.pxOverflowDelayedTaskList,"aw",%nobits
 5743              		.align	2
 5744              		.set	.LANCHOR7,. + 0
 5747              	pxOverflowDelayedTaskList:
 5748 0000 00000000 		.space	4
 5749              		.section	.bss.pxReadyTasksLists,"aw",%nobits
 5750              		.align	2
 5753              	pxReadyTasksLists:
 5754 0000 00000000 		.space	140
ARM GAS  /tmp/cc8PdMPr.s 			page 215


 5754      00000000 
 5754      00000000 
 5754      00000000 
 5754      00000000 
 5755              		.section	.bss.uxCurrentNumberOfTasks,"aw",%nobits
 5756              		.align	2
 5757              		.set	.LANCHOR8,. + 0
 5760              	uxCurrentNumberOfTasks:
 5761 0000 00000000 		.space	4
 5762              		.section	.bss.uxDeletedTasksWaitingCleanUp,"aw",%nobits
 5763              		.align	2
 5764              		.set	.LANCHOR13,. + 0
 5767              	uxDeletedTasksWaitingCleanUp:
 5768 0000 00000000 		.space	4
 5769              		.section	.bss.uxPendedTicks,"aw",%nobits
 5770              		.align	2
 5771              		.set	.LANCHOR17,. + 0
 5774              	uxPendedTicks:
 5775 0000 00000000 		.space	4
 5776              		.section	.bss.uxSchedulerSuspended,"aw",%nobits
 5777              		.align	2
 5778              		.set	.LANCHOR15,. + 0
 5781              	uxSchedulerSuspended:
 5782 0000 00000000 		.space	4
 5783              		.section	.bss.uxTaskNumber,"aw",%nobits
 5784              		.align	2
 5785              		.set	.LANCHOR11,. + 0
 5788              	uxTaskNumber:
 5789 0000 00000000 		.space	4
 5790              		.section	.bss.uxTopReadyPriority,"aw",%nobits
 5791              		.align	2
 5792              		.set	.LANCHOR12,. + 0
 5795              	uxTopReadyPriority:
 5796 0000 00000000 		.space	4
 5797              		.section	.bss.xDelayedTaskList1,"aw",%nobits
 5798              		.align	2
 5799              		.set	.LANCHOR4,. + 0
 5802              	xDelayedTaskList1:
 5803 0000 00000000 		.space	20
 5803      00000000 
 5803      00000000 
 5803      00000000 
 5803      00000000 
 5804              		.section	.bss.xDelayedTaskList2,"aw",%nobits
 5805              		.align	2
 5806              		.set	.LANCHOR5,. + 0
 5809              	xDelayedTaskList2:
 5810 0000 00000000 		.space	20
 5810      00000000 
 5810      00000000 
 5810      00000000 
 5810      00000000 
 5811              		.section	.bss.xNextTaskUnblockTime,"aw",%nobits
 5812              		.align	2
 5813              		.set	.LANCHOR3,. + 0
 5816              	xNextTaskUnblockTime:
 5817 0000 00000000 		.space	4
ARM GAS  /tmp/cc8PdMPr.s 			page 216


 5818              		.section	.bss.xNumOfOverflows,"aw",%nobits
 5819              		.align	2
 5820              		.set	.LANCHOR16,. + 0
 5823              	xNumOfOverflows:
 5824 0000 00000000 		.space	4
 5825              		.section	.bss.xPendingReadyList,"aw",%nobits
 5826              		.align	2
 5827              		.set	.LANCHOR1,. + 0
 5830              	xPendingReadyList:
 5831 0000 00000000 		.space	20
 5831      00000000 
 5831      00000000 
 5831      00000000 
 5831      00000000 
 5832              		.section	.bss.xSchedulerRunning,"aw",%nobits
 5833              		.align	2
 5834              		.set	.LANCHOR10,. + 0
 5837              	xSchedulerRunning:
 5838 0000 00000000 		.space	4
 5839              		.section	.bss.xSuspendedTaskList,"aw",%nobits
 5840              		.align	2
 5841              		.set	.LANCHOR0,. + 0
 5844              	xSuspendedTaskList:
 5845 0000 00000000 		.space	20
 5845      00000000 
 5845      00000000 
 5845      00000000 
 5845      00000000 
 5846              		.section	.bss.xTasksWaitingTermination,"aw",%nobits
 5847              		.align	2
 5848              		.set	.LANCHOR6,. + 0
 5851              	xTasksWaitingTermination:
 5852 0000 00000000 		.space	20
 5852      00000000 
 5852      00000000 
 5852      00000000 
 5852      00000000 
 5853              		.section	.bss.xTickCount,"aw",%nobits
 5854              		.align	2
 5855              		.set	.LANCHOR14,. + 0
 5858              	xTickCount:
 5859 0000 00000000 		.space	4
 5860              		.section	.bss.xYieldPending,"aw",%nobits
 5861              		.align	2
 5862              		.set	.LANCHOR18,. + 0
 5865              	xYieldPending:
 5866 0000 00000000 		.space	4
 5867              		.section	.rodata.vTaskStartScheduler.str1.4,"aMS",%progbits,1
 5868              		.align	2
 5869              	.LC48:
 5870 0000 49444C45 		.ascii	"IDLE\000"
 5870      00
 5871              		.text
 5872              	.Letext0:
 5873              		.file 2 "/usr/local/gcc-arm-none-eabi-8-2019-q3-update/lib/gcc/arm-none-eabi/8.3.1/include/stddef.
 5874              		.file 3 "/usr/local/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/machine/_default_type
 5875              		.file 4 "/usr/local/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/sys/_types.h"
ARM GAS  /tmp/cc8PdMPr.s 			page 217


 5876              		.file 5 "/usr/local/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/sys/reent.h"
 5877              		.file 6 "/usr/local/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/sys/lock.h"
 5878              		.file 7 "/usr/local/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/stdlib.h"
 5879              		.file 8 "/usr/local/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/sys/_stdint.h"
 5880              		.file 9 "Core/Inc/FreeRTOSConfig.h"
 5881              		.file 10 "Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h"
 5882              		.file 11 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/portmacro.h"
 5883              		.file 12 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 5884              		.file 13 "Middlewares/Third_Party/FreeRTOS/Source/include/list.h"
 5885              		.file 14 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 5886              		.file 15 "Middlewares/Third_Party/FreeRTOS/Source/include/portable.h"
ARM GAS  /tmp/cc8PdMPr.s 			page 218


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tasks.c
     /tmp/cc8PdMPr.s:16     .text.prvTaskIsTaskSuspended:0000000000000000 $t
     /tmp/cc8PdMPr.s:23     .text.prvTaskIsTaskSuspended:0000000000000000 prvTaskIsTaskSuspended
     /tmp/cc8PdMPr.s:100    .text.prvTaskIsTaskSuspended:000000000000002c $d
     /tmp/cc8PdMPr.s:106    .text.prvResetNextTaskUnblockTime:0000000000000000 $t
     /tmp/cc8PdMPr.s:112    .text.prvResetNextTaskUnblockTime:0000000000000000 prvResetNextTaskUnblockTime
     /tmp/cc8PdMPr.s:160    .text.prvResetNextTaskUnblockTime:0000000000000024 $d
     /tmp/cc8PdMPr.s:166    .text.prvInitialiseNewTask:0000000000000000 $t
     /tmp/cc8PdMPr.s:172    .text.prvInitialiseNewTask:0000000000000000 prvInitialiseNewTask
     /tmp/cc8PdMPr.s:332    .text.prvInitialiseNewTask:0000000000000080 $d
     /tmp/cc8PdMPr.s:337    .text.prvInitialiseTaskLists:0000000000000000 $t
     /tmp/cc8PdMPr.s:343    .text.prvInitialiseTaskLists:0000000000000000 prvInitialiseTaskLists
     /tmp/cc8PdMPr.s:418    .text.prvInitialiseTaskLists:0000000000000048 $d
     /tmp/cc8PdMPr.s:5753   .bss.pxReadyTasksLists:0000000000000000 pxReadyTasksLists
     /tmp/cc8PdMPr.s:430    .text.prvAddNewTaskToReadyList:0000000000000000 $t
     /tmp/cc8PdMPr.s:436    .text.prvAddNewTaskToReadyList:0000000000000000 prvAddNewTaskToReadyList
     /tmp/cc8PdMPr.s:572    .text.prvAddNewTaskToReadyList:0000000000000088 $d
     /tmp/cc8PdMPr.s:582    .text.prvDeleteTCB:0000000000000000 $t
     /tmp/cc8PdMPr.s:588    .text.prvDeleteTCB:0000000000000000 prvDeleteTCB
     /tmp/cc8PdMPr.s:656    .text.prvCheckTasksWaitingTermination:0000000000000000 $t
     /tmp/cc8PdMPr.s:662    .text.prvCheckTasksWaitingTermination:0000000000000000 prvCheckTasksWaitingTermination
     /tmp/cc8PdMPr.s:726    .text.prvCheckTasksWaitingTermination:0000000000000038 $d
     /tmp/cc8PdMPr.s:733    .text.prvIdleTask:0000000000000000 $t
     /tmp/cc8PdMPr.s:739    .text.prvIdleTask:0000000000000000 prvIdleTask
     /tmp/cc8PdMPr.s:775    .text.prvIdleTask:0000000000000014 $d
     /tmp/cc8PdMPr.s:780    .text.prvAddCurrentTaskToDelayedList:0000000000000000 $t
     /tmp/cc8PdMPr.s:786    .text.prvAddCurrentTaskToDelayedList:0000000000000000 prvAddCurrentTaskToDelayedList
     /tmp/cc8PdMPr.s:897    .text.prvAddCurrentTaskToDelayedList:0000000000000064 $d
     /tmp/cc8PdMPr.s:907    .text.xTaskCreateStatic:0000000000000000 $t
     /tmp/cc8PdMPr.s:914    .text.xTaskCreateStatic:0000000000000000 xTaskCreateStatic
     /tmp/cc8PdMPr.s:1030   .text.xTaskCreate:0000000000000000 $t
     /tmp/cc8PdMPr.s:1037   .text.xTaskCreate:0000000000000000 xTaskCreate
     /tmp/cc8PdMPr.s:1166   .text.vTaskDelete:0000000000000000 $t
     /tmp/cc8PdMPr.s:1173   .text.vTaskDelete:0000000000000000 vTaskDelete
     /tmp/cc8PdMPr.s:1320   .text.vTaskDelete:0000000000000084 $d
     /tmp/cc8PdMPr.s:1331   .text.uxTaskPriorityGet:0000000000000000 $t
     /tmp/cc8PdMPr.s:1338   .text.uxTaskPriorityGet:0000000000000000 uxTaskPriorityGet
     /tmp/cc8PdMPr.s:1388   .text.uxTaskPriorityGet:000000000000001c $d
     /tmp/cc8PdMPr.s:1393   .text.uxTaskPriorityGetFromISR:0000000000000000 $t
     /tmp/cc8PdMPr.s:1400   .text.uxTaskPriorityGetFromISR:0000000000000000 uxTaskPriorityGetFromISR
     /tmp/cc8PdMPr.s:1452   .text.uxTaskPriorityGetFromISR:000000000000001c $d
     /tmp/cc8PdMPr.s:1457   .text.vTaskPrioritySet:0000000000000000 $t
     /tmp/cc8PdMPr.s:1464   .text.vTaskPrioritySet:0000000000000000 vTaskPrioritySet
     /tmp/cc8PdMPr.s:1683   .text.vTaskPrioritySet:00000000000000b0 $d
     /tmp/cc8PdMPr.s:1690   .text.vTaskResume:0000000000000000 $t
     /tmp/cc8PdMPr.s:1697   .text.vTaskResume:0000000000000000 vTaskResume
     /tmp/cc8PdMPr.s:1809   .text.vTaskResume:0000000000000060 $d
     /tmp/cc8PdMPr.s:1816   .text.xTaskResumeFromISR:0000000000000000 $t
     /tmp/cc8PdMPr.s:1823   .text.xTaskResumeFromISR:0000000000000000 xTaskResumeFromISR
     /tmp/cc8PdMPr.s:1962   .text.xTaskResumeFromISR:0000000000000074 $d
     /tmp/cc8PdMPr.s:1971   .text.vTaskStartScheduler:0000000000000000 $t
     /tmp/cc8PdMPr.s:1978   .text.vTaskStartScheduler:0000000000000000 vTaskStartScheduler
     /tmp/cc8PdMPr.s:2065   .text.vTaskStartScheduler:000000000000004c $d
     /tmp/cc8PdMPr.s:2074   .text.vTaskEndScheduler:0000000000000000 $t
     /tmp/cc8PdMPr.s:2081   .text.vTaskEndScheduler:0000000000000000 vTaskEndScheduler
     /tmp/cc8PdMPr.s:2113   .text.vTaskEndScheduler:0000000000000010 $d
ARM GAS  /tmp/cc8PdMPr.s 			page 219


     /tmp/cc8PdMPr.s:2118   .text.vTaskSuspendAll:0000000000000000 $t
     /tmp/cc8PdMPr.s:2125   .text.vTaskSuspendAll:0000000000000000 vTaskSuspendAll
     /tmp/cc8PdMPr.s:2143   .text.vTaskSuspendAll:000000000000000c $d
     /tmp/cc8PdMPr.s:2148   .text.xTaskGetTickCount:0000000000000000 $t
     /tmp/cc8PdMPr.s:2155   .text.xTaskGetTickCount:0000000000000000 xTaskGetTickCount
     /tmp/cc8PdMPr.s:2177   .text.xTaskGetTickCount:0000000000000008 $d
     /tmp/cc8PdMPr.s:2182   .text.xTaskGetTickCountFromISR:0000000000000000 $t
     /tmp/cc8PdMPr.s:2189   .text.xTaskGetTickCountFromISR:0000000000000000 xTaskGetTickCountFromISR
     /tmp/cc8PdMPr.s:2214   .text.xTaskGetTickCountFromISR:0000000000000008 $d
     /tmp/cc8PdMPr.s:2219   .text.uxTaskGetNumberOfTasks:0000000000000000 $t
     /tmp/cc8PdMPr.s:2226   .text.uxTaskGetNumberOfTasks:0000000000000000 uxTaskGetNumberOfTasks
     /tmp/cc8PdMPr.s:2243   .text.uxTaskGetNumberOfTasks:0000000000000008 $d
     /tmp/cc8PdMPr.s:2248   .text.pcTaskGetName:0000000000000000 $t
     /tmp/cc8PdMPr.s:2255   .text.pcTaskGetName:0000000000000000 pcTaskGetName
     /tmp/cc8PdMPr.s:2305   .text.pcTaskGetName:0000000000000018 $d
     /tmp/cc8PdMPr.s:2310   .text.xTaskIncrementTick:0000000000000000 $t
     /tmp/cc8PdMPr.s:2317   .text.xTaskIncrementTick:0000000000000000 xTaskIncrementTick
     /tmp/cc8PdMPr.s:2576   .text.xTaskIncrementTick:00000000000000e8 $d
     /tmp/cc8PdMPr.s:2591   .text.xTaskResumeAll:0000000000000000 $t
     /tmp/cc8PdMPr.s:2598   .text.xTaskResumeAll:0000000000000000 xTaskResumeAll
     /tmp/cc8PdMPr.s:2816   .text.xTaskResumeAll:00000000000000c8 $d
     /tmp/cc8PdMPr.s:2828   .text.vTaskDelay:0000000000000000 $t
     /tmp/cc8PdMPr.s:2835   .text.vTaskDelay:0000000000000000 vTaskDelay
     /tmp/cc8PdMPr.s:2905   .text.vTaskDelay:000000000000002c $d
     /tmp/cc8PdMPr.s:2910   .text.vTaskSwitchContext:0000000000000000 $t
     /tmp/cc8PdMPr.s:2917   .text.vTaskSwitchContext:0000000000000000 vTaskSwitchContext
     /tmp/cc8PdMPr.s:3042   .text.vTaskSwitchContext:0000000000000074 $d
     /tmp/cc8PdMPr.s:3053   .text.vTaskSuspend:0000000000000000 $t
     /tmp/cc8PdMPr.s:3060   .text.vTaskSuspend:0000000000000000 vTaskSuspend
     /tmp/cc8PdMPr.s:3230   .text.vTaskSuspend:0000000000000098 $d
     /tmp/cc8PdMPr.s:3239   .text.vTaskPlaceOnEventList:0000000000000000 $t
     /tmp/cc8PdMPr.s:3246   .text.vTaskPlaceOnEventList:0000000000000000 vTaskPlaceOnEventList
     /tmp/cc8PdMPr.s:3299   .text.vTaskPlaceOnEventList:0000000000000020 $d
     /tmp/cc8PdMPr.s:3304   .text.vTaskPlaceOnUnorderedEventList:0000000000000000 $t
     /tmp/cc8PdMPr.s:3311   .text.vTaskPlaceOnUnorderedEventList:0000000000000000 vTaskPlaceOnUnorderedEventList
     /tmp/cc8PdMPr.s:3391   .text.vTaskPlaceOnUnorderedEventList:0000000000000038 $d
     /tmp/cc8PdMPr.s:3397   .text.xTaskRemoveFromEventList:0000000000000000 $t
     /tmp/cc8PdMPr.s:3404   .text.xTaskRemoveFromEventList:0000000000000000 xTaskRemoveFromEventList
     /tmp/cc8PdMPr.s:3531   .text.xTaskRemoveFromEventList:000000000000006c $d
     /tmp/cc8PdMPr.s:3541   .text.vTaskRemoveFromUnorderedEventList:0000000000000000 $t
     /tmp/cc8PdMPr.s:3548   .text.vTaskRemoveFromUnorderedEventList:0000000000000000 vTaskRemoveFromUnorderedEventList
     /tmp/cc8PdMPr.s:3665   .text.vTaskRemoveFromUnorderedEventList:0000000000000060 $d
     /tmp/cc8PdMPr.s:3674   .text.vTaskSetTimeOutState:0000000000000000 $t
     /tmp/cc8PdMPr.s:3681   .text.vTaskSetTimeOutState:0000000000000000 vTaskSetTimeOutState
     /tmp/cc8PdMPr.s:3735   .text.vTaskSetTimeOutState:0000000000000020 $d
     /tmp/cc8PdMPr.s:3741   .text.vTaskInternalSetTimeOutState:0000000000000000 $t
     /tmp/cc8PdMPr.s:3748   .text.vTaskInternalSetTimeOutState:0000000000000000 vTaskInternalSetTimeOutState
     /tmp/cc8PdMPr.s:3772   .text.vTaskInternalSetTimeOutState:0000000000000010 $d
     /tmp/cc8PdMPr.s:3778   .text.xTaskCheckForTimeOut:0000000000000000 $t
     /tmp/cc8PdMPr.s:3785   .text.xTaskCheckForTimeOut:0000000000000000 xTaskCheckForTimeOut
     /tmp/cc8PdMPr.s:3938   .text.xTaskCheckForTimeOut:0000000000000060 $d
     /tmp/cc8PdMPr.s:3945   .text.vTaskMissedYield:0000000000000000 $t
     /tmp/cc8PdMPr.s:3952   .text.vTaskMissedYield:0000000000000000 vTaskMissedYield
     /tmp/cc8PdMPr.s:3970   .text.vTaskMissedYield:0000000000000008 $d
     /tmp/cc8PdMPr.s:3975   .text.xTaskGetCurrentTaskHandle:0000000000000000 $t
     /tmp/cc8PdMPr.s:3982   .text.xTaskGetCurrentTaskHandle:0000000000000000 xTaskGetCurrentTaskHandle
     /tmp/cc8PdMPr.s:4002   .text.xTaskGetCurrentTaskHandle:0000000000000008 $d
ARM GAS  /tmp/cc8PdMPr.s 			page 220


     /tmp/cc8PdMPr.s:4007   .text.xTaskGetSchedulerState:0000000000000000 $t
     /tmp/cc8PdMPr.s:4014   .text.xTaskGetSchedulerState:0000000000000000 xTaskGetSchedulerState
     /tmp/cc8PdMPr.s:4057   .text.xTaskGetSchedulerState:000000000000001c $d
     /tmp/cc8PdMPr.s:4063   .text.xTaskPriorityInherit:0000000000000000 $t
     /tmp/cc8PdMPr.s:4070   .text.xTaskPriorityInherit:0000000000000000 xTaskPriorityInherit
     /tmp/cc8PdMPr.s:4222   .text.xTaskPriorityInherit:000000000000008c $d
     /tmp/cc8PdMPr.s:4229   .text.xTaskPriorityDisinherit:0000000000000000 $t
     /tmp/cc8PdMPr.s:4236   .text.xTaskPriorityDisinherit:0000000000000000 xTaskPriorityDisinherit
     /tmp/cc8PdMPr.s:4381   .text.xTaskPriorityDisinherit:000000000000006c $d
     /tmp/cc8PdMPr.s:4388   .text.vTaskPriorityDisinheritAfterTimeout:0000000000000000 $t
     /tmp/cc8PdMPr.s:4395   .text.vTaskPriorityDisinheritAfterTimeout:0000000000000000 vTaskPriorityDisinheritAfterTimeout
     /tmp/cc8PdMPr.s:4551   .text.vTaskPriorityDisinheritAfterTimeout:0000000000000078 $d
     /tmp/cc8PdMPr.s:4558   .text.uxTaskResetEventItemValue:0000000000000000 $t
     /tmp/cc8PdMPr.s:4565   .text.uxTaskResetEventItemValue:0000000000000000 uxTaskResetEventItemValue
     /tmp/cc8PdMPr.s:4594   .text.uxTaskResetEventItemValue:0000000000000014 $d
     /tmp/cc8PdMPr.s:4599   .text.pvTaskIncrementMutexHeldCount:0000000000000000 $t
     /tmp/cc8PdMPr.s:4606   .text.pvTaskIncrementMutexHeldCount:0000000000000000 pvTaskIncrementMutexHeldCount
     /tmp/cc8PdMPr.s:4639   .text.pvTaskIncrementMutexHeldCount:0000000000000018 $d
     /tmp/cc8PdMPr.s:4644   .text.ulTaskNotifyTake:0000000000000000 $t
     /tmp/cc8PdMPr.s:4651   .text.ulTaskNotifyTake:0000000000000000 ulTaskNotifyTake
     /tmp/cc8PdMPr.s:4769   .text.ulTaskNotifyTake:0000000000000068 $d
     /tmp/cc8PdMPr.s:4774   .text.xTaskNotifyWait:0000000000000000 $t
     /tmp/cc8PdMPr.s:4781   .text.xTaskNotifyWait:0000000000000000 xTaskNotifyWait
     /tmp/cc8PdMPr.s:4917   .text.xTaskNotifyWait:0000000000000080 $d
     /tmp/cc8PdMPr.s:4922   .text.xTaskGenericNotify:0000000000000000 $t
     /tmp/cc8PdMPr.s:4929   .text.xTaskGenericNotify:0000000000000000 xTaskGenericNotify
     /tmp/cc8PdMPr.s:5151   .text.xTaskGenericNotify:00000000000000b8 $d
     /tmp/cc8PdMPr.s:5158   .text.xTaskGenericNotifyFromISR:0000000000000000 $t
     /tmp/cc8PdMPr.s:5165   .text.xTaskGenericNotifyFromISR:0000000000000000 xTaskGenericNotifyFromISR
     /tmp/cc8PdMPr.s:5441   .text.xTaskGenericNotifyFromISR:00000000000000e0 $d
     /tmp/cc8PdMPr.s:5451   .text.vTaskNotifyGiveFromISR:0000000000000000 $t
     /tmp/cc8PdMPr.s:5458   .text.vTaskNotifyGiveFromISR:0000000000000000 vTaskNotifyGiveFromISR
     /tmp/cc8PdMPr.s:5636   .text.vTaskNotifyGiveFromISR:0000000000000090 $d
     /tmp/cc8PdMPr.s:5646   .text.xTaskNotifyStateClear:0000000000000000 $t
     /tmp/cc8PdMPr.s:5653   .text.xTaskNotifyStateClear:0000000000000000 xTaskNotifyStateClear
     /tmp/cc8PdMPr.s:5723   .text.xTaskNotifyStateClear:000000000000002c $d
     /tmp/cc8PdMPr.s:5733   .bss.pxCurrentTCB:0000000000000000 pxCurrentTCB
     /tmp/cc8PdMPr.s:5729   .bss.pxCurrentTCB:0000000000000000 $d
     /tmp/cc8PdMPr.s:5736   .bss.pxDelayedTaskList:0000000000000000 $d
     /tmp/cc8PdMPr.s:5740   .bss.pxDelayedTaskList:0000000000000000 pxDelayedTaskList
     /tmp/cc8PdMPr.s:5743   .bss.pxOverflowDelayedTaskList:0000000000000000 $d
     /tmp/cc8PdMPr.s:5747   .bss.pxOverflowDelayedTaskList:0000000000000000 pxOverflowDelayedTaskList
     /tmp/cc8PdMPr.s:5750   .bss.pxReadyTasksLists:0000000000000000 $d
     /tmp/cc8PdMPr.s:5756   .bss.uxCurrentNumberOfTasks:0000000000000000 $d
     /tmp/cc8PdMPr.s:5760   .bss.uxCurrentNumberOfTasks:0000000000000000 uxCurrentNumberOfTasks
     /tmp/cc8PdMPr.s:5763   .bss.uxDeletedTasksWaitingCleanUp:0000000000000000 $d
     /tmp/cc8PdMPr.s:5767   .bss.uxDeletedTasksWaitingCleanUp:0000000000000000 uxDeletedTasksWaitingCleanUp
     /tmp/cc8PdMPr.s:5770   .bss.uxPendedTicks:0000000000000000 $d
     /tmp/cc8PdMPr.s:5774   .bss.uxPendedTicks:0000000000000000 uxPendedTicks
     /tmp/cc8PdMPr.s:5777   .bss.uxSchedulerSuspended:0000000000000000 $d
     /tmp/cc8PdMPr.s:5781   .bss.uxSchedulerSuspended:0000000000000000 uxSchedulerSuspended
     /tmp/cc8PdMPr.s:5784   .bss.uxTaskNumber:0000000000000000 $d
     /tmp/cc8PdMPr.s:5788   .bss.uxTaskNumber:0000000000000000 uxTaskNumber
     /tmp/cc8PdMPr.s:5791   .bss.uxTopReadyPriority:0000000000000000 $d
     /tmp/cc8PdMPr.s:5795   .bss.uxTopReadyPriority:0000000000000000 uxTopReadyPriority
     /tmp/cc8PdMPr.s:5798   .bss.xDelayedTaskList1:0000000000000000 $d
     /tmp/cc8PdMPr.s:5802   .bss.xDelayedTaskList1:0000000000000000 xDelayedTaskList1
ARM GAS  /tmp/cc8PdMPr.s 			page 221


     /tmp/cc8PdMPr.s:5805   .bss.xDelayedTaskList2:0000000000000000 $d
     /tmp/cc8PdMPr.s:5809   .bss.xDelayedTaskList2:0000000000000000 xDelayedTaskList2
     /tmp/cc8PdMPr.s:5812   .bss.xNextTaskUnblockTime:0000000000000000 $d
     /tmp/cc8PdMPr.s:5816   .bss.xNextTaskUnblockTime:0000000000000000 xNextTaskUnblockTime
     /tmp/cc8PdMPr.s:5819   .bss.xNumOfOverflows:0000000000000000 $d
     /tmp/cc8PdMPr.s:5823   .bss.xNumOfOverflows:0000000000000000 xNumOfOverflows
     /tmp/cc8PdMPr.s:5826   .bss.xPendingReadyList:0000000000000000 $d
     /tmp/cc8PdMPr.s:5830   .bss.xPendingReadyList:0000000000000000 xPendingReadyList
     /tmp/cc8PdMPr.s:5833   .bss.xSchedulerRunning:0000000000000000 $d
     /tmp/cc8PdMPr.s:5837   .bss.xSchedulerRunning:0000000000000000 xSchedulerRunning
     /tmp/cc8PdMPr.s:5840   .bss.xSuspendedTaskList:0000000000000000 $d
     /tmp/cc8PdMPr.s:5844   .bss.xSuspendedTaskList:0000000000000000 xSuspendedTaskList
     /tmp/cc8PdMPr.s:5847   .bss.xTasksWaitingTermination:0000000000000000 $d
     /tmp/cc8PdMPr.s:5851   .bss.xTasksWaitingTermination:0000000000000000 xTasksWaitingTermination
     /tmp/cc8PdMPr.s:5854   .bss.xTickCount:0000000000000000 $d
     /tmp/cc8PdMPr.s:5858   .bss.xTickCount:0000000000000000 xTickCount
     /tmp/cc8PdMPr.s:5861   .bss.xYieldPending:0000000000000000 $d
     /tmp/cc8PdMPr.s:5865   .bss.xYieldPending:0000000000000000 xYieldPending
     /tmp/cc8PdMPr.s:5868   .rodata.vTaskStartScheduler.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
vListInitialiseItem
pxPortInitialiseStack
vListInitialise
vPortEnterCritical
vListInsertEnd
vPortExitCritical
vPortYield
vPortFree
uxListRemove
vListInsert
pvPortMalloc
ulSetInterruptMaskFromISR
vClearInterruptMaskFromISR
vApplicationGetIdleTaskMemory
xPortStartScheduler
vPortEndScheduler
