ARM GAS  /tmp/ccrPmI4Q.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"freertos.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.Blink,"ax",%progbits
  16              		.align	1
  17              		.global	Blink
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	Blink:
  25              	.LVL0:
  26              	.LFB36:
  27              		.file 1 "Core/Src/freertos.c"
   1:Core/Src/freertos.c **** /* USER CODE BEGIN Header */
   2:Core/Src/freertos.c **** /**
   3:Core/Src/freertos.c ****   ******************************************************************************
   4:Core/Src/freertos.c ****   * File Name          : freertos.c
   5:Core/Src/freertos.c ****   * Description        : Code for freertos applications
   6:Core/Src/freertos.c ****   ******************************************************************************
   7:Core/Src/freertos.c ****   * @attention
   8:Core/Src/freertos.c ****   *
   9:Core/Src/freertos.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/freertos.c ****   * All rights reserved.</center></h2>
  11:Core/Src/freertos.c ****   *
  12:Core/Src/freertos.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Core/Src/freertos.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Core/Src/freertos.c ****   * the License. You may obtain a copy of the License at:
  15:Core/Src/freertos.c ****   *                             www.st.com/SLA0044
  16:Core/Src/freertos.c ****   *
  17:Core/Src/freertos.c ****   ******************************************************************************
  18:Core/Src/freertos.c ****   */
  19:Core/Src/freertos.c **** /* USER CODE END Header */
  20:Core/Src/freertos.c **** 
  21:Core/Src/freertos.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/freertos.c **** #include "FreeRTOS.h"
  23:Core/Src/freertos.c **** #include "task.h"
  24:Core/Src/freertos.c **** #include "main.h"
  25:Core/Src/freertos.c **** #include "cmsis_os.h"
  26:Core/Src/freertos.c **** 
  27:Core/Src/freertos.c **** /* Private includes ----------------------------------------------------------*/
  28:Core/Src/freertos.c **** /* USER CODE BEGIN Includes */
  29:Core/Src/freertos.c **** 
  30:Core/Src/freertos.c **** /* USER CODE END Includes */
  31:Core/Src/freertos.c **** 
ARM GAS  /tmp/ccrPmI4Q.s 			page 2


  32:Core/Src/freertos.c **** /* Private typedef -----------------------------------------------------------*/
  33:Core/Src/freertos.c **** /* USER CODE BEGIN PTD */
  34:Core/Src/freertos.c **** 
  35:Core/Src/freertos.c **** /* USER CODE END PTD */
  36:Core/Src/freertos.c **** 
  37:Core/Src/freertos.c **** /* Private define ------------------------------------------------------------*/
  38:Core/Src/freertos.c **** /* USER CODE BEGIN PD */
  39:Core/Src/freertos.c **** 
  40:Core/Src/freertos.c **** /* USER CODE END PD */
  41:Core/Src/freertos.c **** 
  42:Core/Src/freertos.c **** /* Private macro -------------------------------------------------------------*/
  43:Core/Src/freertos.c **** /* USER CODE BEGIN PM */
  44:Core/Src/freertos.c **** 
  45:Core/Src/freertos.c **** /* USER CODE END PM */
  46:Core/Src/freertos.c **** 
  47:Core/Src/freertos.c **** /* Private variables ---------------------------------------------------------*/
  48:Core/Src/freertos.c **** /* USER CODE BEGIN Variables */
  49:Core/Src/freertos.c **** 
  50:Core/Src/freertos.c **** /* USER CODE END Variables */
  51:Core/Src/freertos.c **** osThreadId blinkHandle;
  52:Core/Src/freertos.c **** 
  53:Core/Src/freertos.c **** /* Private function prototypes -----------------------------------------------*/
  54:Core/Src/freertos.c **** /* USER CODE BEGIN FunctionPrototypes */
  55:Core/Src/freertos.c **** 
  56:Core/Src/freertos.c **** /* USER CODE END FunctionPrototypes */
  57:Core/Src/freertos.c **** 
  58:Core/Src/freertos.c **** void Blink(void const * argument);
  59:Core/Src/freertos.c **** 
  60:Core/Src/freertos.c **** void MX_FREERTOS_Init(void); /* (MISRA C 2004 rule 8.1) */
  61:Core/Src/freertos.c **** 
  62:Core/Src/freertos.c **** /* GetIdleTaskMemory prototype (linked to static allocation support) */
  63:Core/Src/freertos.c **** void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskS
  64:Core/Src/freertos.c **** 
  65:Core/Src/freertos.c **** /* USER CODE BEGIN GET_IDLE_TASK_MEMORY */
  66:Core/Src/freertos.c **** static StaticTask_t xIdleTaskTCBBuffer;
  67:Core/Src/freertos.c **** static StackType_t xIdleStack[configMINIMAL_STACK_SIZE];
  68:Core/Src/freertos.c **** 
  69:Core/Src/freertos.c **** void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskS
  70:Core/Src/freertos.c **** {
  71:Core/Src/freertos.c ****   *ppxIdleTaskTCBBuffer = &xIdleTaskTCBBuffer;
  72:Core/Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
  73:Core/Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
  74:Core/Src/freertos.c ****   /* place for user code */
  75:Core/Src/freertos.c **** }
  76:Core/Src/freertos.c **** /* USER CODE END GET_IDLE_TASK_MEMORY */
  77:Core/Src/freertos.c **** 
  78:Core/Src/freertos.c **** /**
  79:Core/Src/freertos.c ****   * @brief  FreeRTOS initialization
  80:Core/Src/freertos.c ****   * @param  None
  81:Core/Src/freertos.c ****   * @retval None
  82:Core/Src/freertos.c ****   */
  83:Core/Src/freertos.c **** void MX_FREERTOS_Init(void) {
  84:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
  85:Core/Src/freertos.c **** 
  86:Core/Src/freertos.c ****   /* USER CODE END Init */
  87:Core/Src/freertos.c **** 
  88:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_MUTEX */
ARM GAS  /tmp/ccrPmI4Q.s 			page 3


  89:Core/Src/freertos.c ****   /* add mutexes, ... */
  90:Core/Src/freertos.c ****   /* USER CODE END RTOS_MUTEX */
  91:Core/Src/freertos.c **** 
  92:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
  93:Core/Src/freertos.c ****   /* add semaphores, ... */
  94:Core/Src/freertos.c ****   /* USER CODE END RTOS_SEMAPHORES */
  95:Core/Src/freertos.c **** 
  96:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_TIMERS */
  97:Core/Src/freertos.c ****   /* start timers, add new ones, ... */
  98:Core/Src/freertos.c ****   /* USER CODE END RTOS_TIMERS */
  99:Core/Src/freertos.c **** 
 100:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 101:Core/Src/freertos.c ****   /* add queues, ... */
 102:Core/Src/freertos.c ****   /* USER CODE END RTOS_QUEUES */
 103:Core/Src/freertos.c **** 
 104:Core/Src/freertos.c ****   /* Create the thread(s) */
 105:Core/Src/freertos.c ****   /* definition and creation of blink */
 106:Core/Src/freertos.c ****   osThreadDef(blink, Blink, osPriorityLow, 0, 128);
 107:Core/Src/freertos.c ****   blinkHandle = osThreadCreate(osThread(blink), NULL);
 108:Core/Src/freertos.c **** 
 109:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_THREADS */
 110:Core/Src/freertos.c ****   /* add threads, ... */
 111:Core/Src/freertos.c ****   /* USER CODE END RTOS_THREADS */
 112:Core/Src/freertos.c **** 
 113:Core/Src/freertos.c **** }
 114:Core/Src/freertos.c **** 
 115:Core/Src/freertos.c **** /* USER CODE BEGIN Header_Blink */
 116:Core/Src/freertos.c **** /**
 117:Core/Src/freertos.c ****   * @brief  Function implementing the blink thread.
 118:Core/Src/freertos.c ****   * @param  argument: Not used
 119:Core/Src/freertos.c ****   * @retval None
 120:Core/Src/freertos.c ****   */
 121:Core/Src/freertos.c **** /* USER CODE END Header_Blink */
 122:Core/Src/freertos.c **** void Blink(void const * argument)
 123:Core/Src/freertos.c **** {
  28              		.loc 1 123 1 view -0
  29              		.cfi_startproc
  30              		@ Volatile: function does not return.
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 123 1 is_stmt 0 view .LVU1
  34 0000 10B5     		push	{r4, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 4, -8
  38              		.cfi_offset 14, -4
 124:Core/Src/freertos.c ****   /* USER CODE BEGIN Blink */
 125:Core/Src/freertos.c ****   HAL_GPIO_TogglePin(LED0_GPIO_Port, LED0_Pin);
  39              		.loc 1 125 3 is_stmt 1 view .LVU2
  40 0002 0121     		movs	r1, #1
  41 0004 0748     		ldr	r0, .L3
  42              	.LVL1:
  43              		.loc 1 125 3 is_stmt 0 view .LVU3
  44 0006 FFF7FEFF 		bl	HAL_GPIO_TogglePin
  45              	.LVL2:
  46              	.L2:
 126:Core/Src/freertos.c ****   /* Infinite loop */
ARM GAS  /tmp/ccrPmI4Q.s 			page 4


 127:Core/Src/freertos.c ****   for(;;)
  47              		.loc 1 127 3 is_stmt 1 discriminator 1 view .LVU4
 128:Core/Src/freertos.c ****   {
 129:Core/Src/freertos.c ****     HAL_GPIO_TogglePin(LED0_GPIO_Port, LED0_Pin);
  48              		.loc 1 129 5 discriminator 1 view .LVU5
  49 000a 0121     		movs	r1, #1
  50 000c 0548     		ldr	r0, .L3
  51 000e FFF7FEFF 		bl	HAL_GPIO_TogglePin
  52              	.LVL3:
 130:Core/Src/freertos.c ****     HAL_GPIO_TogglePin(LED1_GPIO_Port, LED1_Pin);
  53              		.loc 1 130 5 discriminator 1 view .LVU6
  54 0012 0421     		movs	r1, #4
  55 0014 0448     		ldr	r0, .L3+4
  56 0016 FFF7FEFF 		bl	HAL_GPIO_TogglePin
  57              	.LVL4:
 131:Core/Src/freertos.c ****     osDelay(300);
  58              		.loc 1 131 5 discriminator 1 view .LVU7
  59 001a 9620     		movs	r0, #150
  60 001c 4000     		lsls	r0, r0, #1
  61 001e FFF7FEFF 		bl	osDelay
  62              	.LVL5:
  63 0022 F2E7     		b	.L2
  64              	.L4:
  65              		.align	2
  66              	.L3:
  67 0024 00040050 		.word	1342178304
  68 0028 000C0050 		.word	1342180352
  69              		.cfi_endproc
  70              	.LFE36:
  72              		.section	.text.vApplicationGetIdleTaskMemory,"ax",%progbits
  73              		.align	1
  74              		.global	vApplicationGetIdleTaskMemory
  75              		.syntax unified
  76              		.code	16
  77              		.thumb_func
  78              		.fpu softvfp
  80              	vApplicationGetIdleTaskMemory:
  81              	.LVL6:
  82              	.LFB34:
  70:Core/Src/freertos.c ****   *ppxIdleTaskTCBBuffer = &xIdleTaskTCBBuffer;
  83              		.loc 1 70 1 view -0
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 0
  86              		@ frame_needed = 0, uses_anonymous_args = 0
  87              		@ link register save eliminated.
  71:Core/Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
  88              		.loc 1 71 3 view .LVU9
  71:Core/Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
  89              		.loc 1 71 25 is_stmt 0 view .LVU10
  90 0000 034B     		ldr	r3, .L6
  91 0002 0360     		str	r3, [r0]
  72:Core/Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
  92              		.loc 1 72 3 is_stmt 1 view .LVU11
  72:Core/Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
  93              		.loc 1 72 27 is_stmt 0 view .LVU12
  94 0004 034B     		ldr	r3, .L6+4
  95 0006 0B60     		str	r3, [r1]
ARM GAS  /tmp/ccrPmI4Q.s 			page 5


  73:Core/Src/freertos.c ****   /* place for user code */
  96              		.loc 1 73 3 is_stmt 1 view .LVU13
  73:Core/Src/freertos.c ****   /* place for user code */
  97              		.loc 1 73 25 is_stmt 0 view .LVU14
  98 0008 8023     		movs	r3, #128
  99 000a 1360     		str	r3, [r2]
  75:Core/Src/freertos.c **** /* USER CODE END GET_IDLE_TASK_MEMORY */
 100              		.loc 1 75 1 view .LVU15
 101              		@ sp needed
 102 000c 7047     		bx	lr
 103              	.L7:
 104 000e C046     		.align	2
 105              	.L6:
 106 0010 00000000 		.word	.LANCHOR0
 107 0014 00000000 		.word	xIdleStack
 108              		.cfi_endproc
 109              	.LFE34:
 111              		.section	.text.MX_FREERTOS_Init,"ax",%progbits
 112              		.align	1
 113              		.global	MX_FREERTOS_Init
 114              		.syntax unified
 115              		.code	16
 116              		.thumb_func
 117              		.fpu softvfp
 119              	MX_FREERTOS_Init:
 120              	.LFB35:
  83:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
 121              		.loc 1 83 29 is_stmt 1 view -0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 32
 124              		@ frame_needed = 0, uses_anonymous_args = 0
 125 0000 30B5     		push	{r4, r5, lr}
 126              	.LCFI1:
 127              		.cfi_def_cfa_offset 12
 128              		.cfi_offset 4, -12
 129              		.cfi_offset 5, -8
 130              		.cfi_offset 14, -4
 131 0002 89B0     		sub	sp, sp, #36
 132              	.LCFI2:
 133              		.cfi_def_cfa_offset 48
 106:Core/Src/freertos.c ****   blinkHandle = osThreadCreate(osThread(blink), NULL);
 134              		.loc 1 106 3 view .LVU17
 135 0004 01A8     		add	r0, sp, #4
 136 0006 0849     		ldr	r1, .L9
 137 0008 0300     		movs	r3, r0
 138 000a 0A00     		movs	r2, r1
 139 000c 32CA     		ldmia	r2!, {r1, r4, r5}
 140 000e 32C3     		stmia	r3!, {r1, r4, r5}
 141 0010 32CA     		ldmia	r2!, {r1, r4, r5}
 142 0012 32C3     		stmia	r3!, {r1, r4, r5}
 143 0014 1268     		ldr	r2, [r2]
 144 0016 1A60     		str	r2, [r3]
 107:Core/Src/freertos.c **** 
 145              		.loc 1 107 3 view .LVU18
 107:Core/Src/freertos.c **** 
 146              		.loc 1 107 17 is_stmt 0 view .LVU19
 147 0018 0021     		movs	r1, #0
ARM GAS  /tmp/ccrPmI4Q.s 			page 6


 148 001a FFF7FEFF 		bl	osThreadCreate
 149              	.LVL7:
 107:Core/Src/freertos.c **** 
 150              		.loc 1 107 15 view .LVU20
 151 001e 034B     		ldr	r3, .L9+4
 152 0020 1860     		str	r0, [r3]
 113:Core/Src/freertos.c **** 
 153              		.loc 1 113 1 view .LVU21
 154 0022 09B0     		add	sp, sp, #36
 155              		@ sp needed
 156 0024 30BD     		pop	{r4, r5, pc}
 157              	.L10:
 158 0026 C046     		.align	2
 159              	.L9:
 160 0028 00000000 		.word	.LANCHOR1
 161 002c 00000000 		.word	blinkHandle
 162              		.cfi_endproc
 163              	.LFE35:
 165              		.comm	blinkHandle,4,4
 166              		.section	.rodata
 167              		.align	2
 168              		.set	.LANCHOR1,. + 0
 169              	.LC4:
 170 0000 00000000 		.word	.LC0
 171 0004 00000000 		.word	Blink
 172 0008 FEFF     		.short	-2
 173 000a 0000     		.space	2
 174 000c 00000000 		.word	0
 175 0010 80000000 		.word	128
 176 0014 00000000 		.word	0
 177 0018 00000000 		.word	0
 178              		.section	.bss.xIdleStack,"aw",%nobits
 179              		.align	2
 182              	xIdleStack:
 183 0000 00000000 		.space	512
 183      00000000 
 183      00000000 
 183      00000000 
 183      00000000 
 184              		.section	.bss.xIdleTaskTCBBuffer,"aw",%nobits
 185              		.align	2
 186              		.set	.LANCHOR0,. + 0
 189              	xIdleTaskTCBBuffer:
 190 0000 00000000 		.space	84
 190      00000000 
 190      00000000 
 190      00000000 
 190      00000000 
 191              		.section	.rodata.str1.4,"aMS",%progbits,1
 192              		.align	2
 193              	.LC0:
 194 0000 626C696E 		.ascii	"blink\000"
 194      6B00
 195              		.text
 196              	.Letext0:
 197              		.file 2 "/usr/local/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/machine/_default_type
 198              		.file 3 "/usr/local/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/sys/_stdint.h"
ARM GAS  /tmp/ccrPmI4Q.s 			page 7


 199              		.file 4 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/portmacro.h"
 200              		.file 5 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 201              		.file 6 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 202              		.file 7 "Core/Inc/FreeRTOSConfig.h"
 203              		.file 8 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/system_stm32l0xx.h"
 204              		.file 9 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l071xx.h"
 205              		.file 10 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal.h"
 206              		.file 11 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 207              		.file 12 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_gpio.h"
ARM GAS  /tmp/ccrPmI4Q.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 freertos.c
     /tmp/ccrPmI4Q.s:16     .text.Blink:0000000000000000 $t
     /tmp/ccrPmI4Q.s:24     .text.Blink:0000000000000000 Blink
     /tmp/ccrPmI4Q.s:67     .text.Blink:0000000000000024 $d
     /tmp/ccrPmI4Q.s:73     .text.vApplicationGetIdleTaskMemory:0000000000000000 $t
     /tmp/ccrPmI4Q.s:80     .text.vApplicationGetIdleTaskMemory:0000000000000000 vApplicationGetIdleTaskMemory
     /tmp/ccrPmI4Q.s:106    .text.vApplicationGetIdleTaskMemory:0000000000000010 $d
     /tmp/ccrPmI4Q.s:182    .bss.xIdleStack:0000000000000000 xIdleStack
     /tmp/ccrPmI4Q.s:112    .text.MX_FREERTOS_Init:0000000000000000 $t
     /tmp/ccrPmI4Q.s:119    .text.MX_FREERTOS_Init:0000000000000000 MX_FREERTOS_Init
     /tmp/ccrPmI4Q.s:160    .text.MX_FREERTOS_Init:0000000000000028 $d
                            *COM*:0000000000000004 blinkHandle
     /tmp/ccrPmI4Q.s:167    .rodata:0000000000000000 $d
     /tmp/ccrPmI4Q.s:179    .bss.xIdleStack:0000000000000000 $d
     /tmp/ccrPmI4Q.s:185    .bss.xIdleTaskTCBBuffer:0000000000000000 $d
     /tmp/ccrPmI4Q.s:189    .bss.xIdleTaskTCBBuffer:0000000000000000 xIdleTaskTCBBuffer
     /tmp/ccrPmI4Q.s:192    .rodata.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_TogglePin
osDelay
osThreadCreate
